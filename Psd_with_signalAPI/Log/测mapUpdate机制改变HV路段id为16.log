-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd/build
[ 12%] Building CXX object CMakeFiles/PsdModule.dir/src/GeometricCalc.cpp.o
[ 25%] Building CXX object CMakeFiles/PsdModule.dir/src/Haversine.cpp.o
[ 37%] Building CXX object CMakeFiles/PsdModule.dir/src/Location.cpp.o
[ 50%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdLocation.cpp.o
[ 62%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMap.cpp.o
[ 75%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMessageDecoder.cpp.o
[ 87%] Building CXX object CMakeFiles/PsdModule.dir/gtest/src/PsdTest.cpp.o
[100%] Linking CXX executable /home/zhao/Documents/Psd/gtest/output/bin/PsdModule
[100%] Built target PsdModule
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from PsdMapTest
[ RUN      ] PsdMapTest.useRealRecordPsdWithCurve
open successfully
[TestBody] [4717]: hvHeading = 0.000000
[TestBody] [4728]: headingAccuracy = 2.250000
[TestBody] [4449]: preSegmentId = 54
[TestBody] [4463]: prevSegmentId = 51
[TestBody] [4476]: preSegTotalLength = 40
[TestBody] [4449]: preSegmentId = 58
[TestBody] [4463]: prevSegmentId = 54
[TestBody] [4476]: preSegTotalLength = 26
[TestBody] [4449]: preSegmentId = 16
[TestBody] [4463]: prevSegmentId = 58
[TestBody] [4476]: preSegTotalLength = 24
[TestBody] [4449]: preSegmentId = 33
[TestBody] [4463]: prevSegmentId = 16
[TestBody] [4476]: preSegTotalLength = 2
[TestBody] [4449]: preSegmentId = 35
[TestBody] [4463]: prevSegmentId = 33
[TestBody] [4476]: preSegTotalLength = 30
[TestBody] [4449]: preSegmentId = 42
[TestBody] [4463]: prevSegmentId = 35
[TestBody] [4476]: preSegTotalLength = 34
[TestBody] [4449]: preSegmentId = 47
[TestBody] [4463]: prevSegmentId = 42
[TestBody] [4476]: preSegTotalLength = 20
[TestBody] [4449]: preSegmentId = 52
[TestBody] [4463]: prevSegmentId = 47
[TestBody] [4476]: preSegTotalLength = 10
[TestBody] [4449]: preSegmentId = 53
[TestBody] [4463]: prevSegmentId = 52
[TestBody] [4476]: preSegTotalLength = 36
[TestBody] [4449]: preSegmentId = 50
[TestBody] [4463]: prevSegmentId = 47
[TestBody] [4476]: preSegTotalLength = 34
[TestBody] [4599]: curSegmentId = 54
[TestBody] [4614]: DrivedLength = 2.000000, curRemainLength = 38
[TestBody] [4681]: curSegment's latitude = 40.344001
[TestBody] [4700]: curSegment's longitude = 116.818758
[TestBody] [4717]: hvHeading = 143.600000
[TestBody] [4728]: headingAccuracy = 2.250000
[TestBody] [4449]: preSegmentId = 5
[TestBody] [4463]: prevSegmentId = 50
[TestBody] [4476]: preSegTotalLength = 26
[TestBody] [4449]: preSegmentId = 9
[TestBody] [4463]: prevSegmentId = 5
[TestBody] [4476]: preSegTotalLength = 26
[TestBody] [4449]: preSegmentId = 11
[TestBody] [4463]: prevSegmentId = 9
[TestBody] [4476]: preSegTotalLength = 34
[TestBody] [4449]: preSegmentId = 13
[TestBody] [4463]: prevSegmentId = 11
[TestBody] [4476]: preSegTotalLength = 28
[TestBody] [4449]: preSegmentId = 15
[TestBody] [4463]: prevSegmentId = 13
[TestBody] [4476]: preSegTotalLength = 32
[TestBody] [4449]: preSegmentId = 17
[TestBody] [4463]: prevSegmentId = 15
[TestBody] [4476]: preSegTotalLength = 32
[TestBody] [4449]: preSegmentId = 21
[TestBody] [4463]: prevSegmentId = 17
[TestBody] [4476]: preSegTotalLength = 26
###### initial road network ######
[getInstance] [51]: first new a pInstance
[mapCreate] [1446]: --------------------------mapCreate------------------------------
[mapCreate] [1447]: hv's longitude = 116.818758, latitude = 40.344001, hvHeading = 143.600000
[createNode] [1105]: newNode = 0x557d54069d50
[insertNodeInTree] [1254]: curNode = 0x557d54069d50
[curIdIsInList] [1461]: curSegmentId is in list = 54
[insertNodeInTree] [1280]: count = 1
[insertNodeInTree] [1281]: current tree is = 0x557d54069d50, current tree Id is = 54, curSegmentId is = 54
[calcCurSegmentCoordinate] [539]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [572]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [597]: R = 52.900776
[calcCurSegmentCoordinate] [630]: finalRemainLength = 38.000000
[calcCurSegmentCoordinate] [657]: Sa = 27.605887, Se = 10.394113
[calcCurveXYOffset] [221]: arcR = 52.900776, arcRotationAngle = 29.899388, arcRotationAngleRad = 0.521843, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.133098
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -7.040984
[calcCurveXYOffset] [232]: dX = 26.369898
[calcCurveXYOffset] [233]: dY = 7.040984
[coordinateSystemRotates] [162]: accumulateBranchAngle = 143.600000, accumulateBranchAngleRad = 2.506293
[coordinateSystemRotates] [163]: dX = 26.369898
[coordinateSystemRotates] [164]: dY = 7.040984
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.804894
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.593419
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -21.224968
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 4.178253
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 15.648396
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.667244
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -25.403220
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 9.981152
[coordinateSystemRotates] [176]: coordinate system rotated X = -25.403220
[coordinateSystemRotates] [177]: coordinate system rotated Y = 9.981152
[calcCurSegmentCoordinate] [665]: first half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -25.403220, disHv2EndAfterRotatingCoord.distanceY = 9.981152
[calcDestination] [78]: destinationCoord latitude = 40.343773  destinationCoord longitude = 116.818876
[calcCurSegmentCoordinate] [668]: HV's one SampleCoord before the endCoord  latitude = 40.343773  longitude = 116.818876
[calcCurSegmentCoordinate] [671]: accumulateBranchAngleHv2End = 173.499388
[calcCurSegmentCoordinate] [673]: fixed accumulateBranchAngleHv2End = 173.499388
[calcCurveXYOffset] [221]: arcR = 140.500000, arcRotationAngle = 4.238710, arcRotationAngleRad = 0.073979, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.002735
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.384300
[calcCurveXYOffset] [232]: dX = 10.384634
[calcCurveXYOffset] [233]: dY = 0.384300
[coordinateSystemRotates] [162]: accumulateBranchAngle = 173.499388, accumulateBranchAngleRad = 3.028136
[coordinateSystemRotates] [163]: dX = 10.384634
[coordinateSystemRotates] [164]: dY = 0.384300
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.993571
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.113214
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -10.317868
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.043508
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 1.175684
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.381829
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -10.361376
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.793855
[coordinateSystemRotates] [176]: coordinate system rotated X = -10.361376
[coordinateSystemRotates] [177]: coordinate system rotated Y = 0.793855
[calcCurSegmentCoordinate] [681]: second half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -35.764596, disHv2EndAfterRotatingCoord.distanceY = 10.775007
[calcDestination] [78]: destinationCoord latitude = 40.343680  destinationCoord longitude = 116.818885
[calcCurSegmentCoordinate] [683]: HV's endCoordinate latitude = 40.343680  longitude = 116.818885
[calcCurSegmentCoordinate] [686]: accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [688]: fixed accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [692]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [695]: accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [697]: fixed accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [707]: R = 52.900776
[calcCurSegmentCoordinate] [735]: finalRemainLength = 2.000000
[calcCurSegmentCoordinate] [759]: Sa = 0.983857, Se = 1.016143
[calcCurveXYOffset] [221]: arcR = 52.900776, arcRotationAngle = 1.065596, arcRotationAngleRad = 0.018598, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000173
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.009149
[calcCurveXYOffset] [232]: dX = 0.983801
[calcCurveXYOffset] [233]: dY = 0.009149
[coordinateSystemRotates] [162]: accumulateBranchAngle = 323.600000, accumulateBranchAngleRad = 5.647885
[coordinateSystemRotates] [163]: dX = 0.983801
[coordinateSystemRotates] [164]: dY = 0.009149
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.804894
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.593419
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.005429
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.007364
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.797284
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.576442
[coordinateSystemRotates] [176]: coordinate system rotated X = 0.797284
[coordinateSystemRotates] [177]: coordinate system rotated Y = -0.576442
[calcCurSegmentCoordinate] [767]: first half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 0.797284, disHv2StartAfterRotatingCoord.distanceY = -0.576442
[calcDestination] [78]: destinationCoord latitude = 40.344008  destinationCoord longitude = 116.818751
[calcCurSegmentCoordinate] [770]: HV's one SampleCoord before the startCoord latitude = 40.344008  longitude = 116.818751
[calcCurSegmentCoordinate] [773]: accumulateBranchAngleHv2Start = 322.534404
[calcCurSegmentCoordinate] [775]: fixed accumulateBranchAngleHv2Start = 322.534404
[calcCurveXYOffset] [221]: arcR = 51.220000, arcRotationAngle = 1.136679, arcRotationAngleRad = 0.019839, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000197
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.010079
[calcCurveXYOffset] [232]: dX = 1.016076
[calcCurveXYOffset] [233]: dY = 0.010079
[coordinateSystemRotates] [162]: accumulateBranchAngle = 322.534404, accumulateBranchAngleRad = 5.629287
[coordinateSystemRotates] [163]: dX = 1.016076
[coordinateSystemRotates] [164]: dY = 0.010079
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.793719
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.608285
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 0.806478
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.006131
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -0.618064
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.008000
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.812609
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.610064
[coordinateSystemRotates] [176]: coordinate system rotated X = 0.812609
[coordinateSystemRotates] [177]: coordinate system rotated Y = -0.610064
[calcCurSegmentCoordinate] [782]: second half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 1.609894, disHv2StartAfterRotatingCoord.distanceY = -1.186506
[calcDestination] [78]: destinationCoord latitude = 40.344015  destinationCoord longitude = 116.818744
[calcCurSegmentCoordinate] [784]: HV's startCoordinate latitude = 40.344015  longitude = 116.818744
[calcCurSegmentCoordinate] [787]: accumulateBranchAngleHv2Start = 321.397725
[calcCurSegmentCoordinate] [789]: fixed accumulateBranchAngleHv2Start = 321.397725
[displayNodeCoordinate] [100]: 54's startCoordinate: latitude = 40.344015, longitude = 116.818744
[displayNodeCoordinate] [103]: 54's SampleCoord: latitude = 40.344008, longitude = 116.818751
[displayNodeCoordinate] [103]: 54's SampleCoord: latitude = 40.343773, longitude = 116.818876
[displayNodeCoordinate] [105]: 54's endCoordinate: latitude = 40.343680, longitude = 116.818885
[insertNode] [1169]: (*it)->preSegmentId = 54's segIsInTree = 1
[findNodeById] [842]: result = (nil)
[insertNode] [1215]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[insertNode] [1247]: goto check the next segment info from vPsdMap
[insertNode] [1169]: (*it)->preSegmentId = 58's segIsInTree = 0
[insertNode] [1215]: tempNode is = 0x557d54069d50, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d54069e10
[insertChildNode] [1113]: childNode = 0x557d54069e10
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 213.171173, accumulateBranchAngleRad = 3.720539
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.837040
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.547142
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -21.014992
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.191023
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -13.736730
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.881753
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -24.206015
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -8.854977
[coordinateSystemRotates] [176]: coordinate system rotated X = -24.206015
[coordinateSystemRotates] [177]: coordinate system rotated Y = -8.854977
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -59.970611, accumulateXY.distanceY = 1.920030
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818781
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818781
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 187.015607
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 187.015607
[insertNode] [1236]: childNode's preSegmentId = 58
[displayNodeCoordinate] [100]: 58's startCoordinate: latitude = 40.343680, longitude = 116.818885
[displayNodeCoordinate] [105]: 58's endCoordinate: latitude = 40.343462, longitude = 116.818781
[insertNode] [1169]: (*it)->preSegmentId = 16's segIsInTree = 0
[findNodeById] [837]: result = 0x557d54069e10
[insertNode] [1215]: tempNode is = 0x557d54069e10, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d54069ed0
[insertChildNode] [1113]: childNode = 0x557d54069ed0
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 24.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [232]: dX = 23.296017
[calcCurveXYOffset] [233]: dY = -4.982242
[coordinateSystemRotates] [162]: accumulateBranchAngle = 187.015607, accumulateBranchAngleRad = 3.264038
[coordinateSystemRotates] [163]: dX = 23.296017
[coordinateSystemRotates] [164]: dY = -4.982242
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.992513
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.122140
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -23.121598
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.608530
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -2.845369
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.944939
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -23.730127
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.099571
[coordinateSystemRotates] [176]: coordinate system rotated X = -23.730127
[coordinateSystemRotates] [177]: coordinate system rotated Y = 2.099571
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -83.700738, accumulateXY.distanceY = 4.019600
[calcDestination] [78]: destinationCoord latitude = 40.343249  destinationCoord longitude = 116.818805
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343249  longitude = 116.818805
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 162.872007
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 162.872007
[insertNode] [1236]: childNode's preSegmentId = 16
[displayNodeCoordinate] [100]: 16's startCoordinate: latitude = 40.343462, longitude = 116.818781
[displayNodeCoordinate] [105]: 16's endCoordinate: latitude = 40.343249, longitude = 116.818805
[insertNode] [1169]: (*it)->preSegmentId = 33's segIsInTree = 0
[findNodeById] [837]: result = 0x557d54069ed0
[findNodeById] [837]: result = 0x557d54069ed0
[insertNode] [1215]: tempNode is = 0x557d54069ed0, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d54069f90
[insertChildNode] [1113]: childNode = 0x557d54069f90
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [232]: dX = 1.999589
[calcCurveXYOffset] [233]: dY = -0.035112
[coordinateSystemRotates] [162]: accumulateBranchAngle = 162.872007, accumulateBranchAngleRad = 2.842653
[coordinateSystemRotates] [163]: dX = 1.999589
[coordinateSystemRotates] [164]: dY = -0.035112
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.955649
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.294507
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.910906
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.010341
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 0.588893
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.033555
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.900565
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.622448
[coordinateSystemRotates] [176]: coordinate system rotated X = -1.900565
[coordinateSystemRotates] [177]: coordinate system rotated Y = 0.622448
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -85.601303, accumulateXY.distanceY = 4.642048
[calcDestination] [78]: destinationCoord latitude = 40.343232  destinationCoord longitude = 116.818813
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343232  longitude = 116.818813
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 160.860041
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 160.860041
[insertNode] [1236]: childNode's preSegmentId = 33
[displayNodeCoordinate] [100]: 33's startCoordinate: latitude = 40.343249, longitude = 116.818805
[displayNodeCoordinate] [105]: 33's endCoordinate: latitude = 40.343232, longitude = 116.818813
[insertNode] [1169]: (*it)->preSegmentId = 35's segIsInTree = 0
[findNodeById] [837]: result = 0x557d54069f90
[findNodeById] [837]: result = 0x557d54069f90
[findNodeById] [837]: result = 0x557d54069f90
[insertNode] [1215]: tempNode is = 0x557d54069f90, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a050
[insertChildNode] [1113]: childNode = 0x557d5406a050
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [232]: dX = 28.631886
[calcCurveXYOffset] [233]: dY = -7.719981
[coordinateSystemRotates] [162]: accumulateBranchAngle = 160.860041, accumulateBranchAngleRad = 2.807537
[coordinateSystemRotates] [163]: dX = 28.631886
[coordinateSystemRotates] [164]: dY = -7.719981
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.944720
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.327877
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -27.049129
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -2.531203
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 9.387733
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 7.293224
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -24.517926
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 16.680957
[coordinateSystemRotates] [176]: coordinate system rotated X = -24.517926
[coordinateSystemRotates] [177]: coordinate system rotated Y = 16.680957
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -110.119230, accumulateXY.distanceY = 21.323005
[calcDestination] [78]: destinationCoord latitude = 40.343012  destinationCoord longitude = 116.819009
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343012  longitude = 116.819009
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 130.680542
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 130.680542
[insertNode] [1236]: childNode's preSegmentId = 35
[displayNodeCoordinate] [100]: 35's startCoordinate: latitude = 40.343232, longitude = 116.818813
[displayNodeCoordinate] [105]: 35's endCoordinate: latitude = 40.343012, longitude = 116.819009
[insertNode] [1169]: (*it)->preSegmentId = 42's segIsInTree = 0
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[insertNode] [1215]: tempNode is = 0x557d5406a050, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a110
[insertChildNode] [1113]: childNode = 0x557d5406a110
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 126.428573, accumulateBranchAngleRad = 2.206595
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.593820
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.804598
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -19.011914
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -7.925726
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 25.760228
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 5.849452
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -11.086189
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 31.609680
[coordinateSystemRotates] [176]: coordinate system rotated X = -11.086189
[coordinateSystemRotates] [177]: coordinate system rotated Y = 31.609680
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -121.205418, accumulateXY.distanceY = 52.932685
[calcDestination] [78]: destinationCoord latitude = 40.342912  destinationCoord longitude = 116.819382
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.342912  longitude = 116.819382
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 92.225140
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 92.225140
[insertNode] [1236]: childNode's preSegmentId = 42
[displayNodeCoordinate] [100]: 42's startCoordinate: latitude = 40.343012, longitude = 116.819009
[displayNodeCoordinate] [105]: 42's endCoordinate: latitude = 40.342912, longitude = 116.819382
[insertNode] [1169]: (*it)->preSegmentId = 47's segIsInTree = 0
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[insertNode] [1215]: tempNode is = 0x557d5406a110, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a1d0
[insertChildNode] [1113]: childNode = 0x557d5406a1d0
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [232]: dX = 19.591495
[calcCurveXYOffset] [233]: dY = -3.475608
[coordinateSystemRotates] [162]: accumulateBranchAngle = 92.225140, accumulateBranchAngleRad = 1.609632
[coordinateSystemRotates] [163]: dX = 19.591495
[coordinateSystemRotates] [164]: dY = -3.475608
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.038826
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.999246
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -0.760664
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.472988
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 19.576723
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.134945
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 2.712323
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 19.711668
[coordinateSystemRotates] [176]: coordinate system rotated X = 2.712323
[coordinateSystemRotates] [177]: coordinate system rotated Y = 19.711668
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -118.493095, accumulateXY.distanceY = 72.644353
[calcDestination] [78]: destinationCoord latitude = 40.342937  destinationCoord longitude = 116.819614
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.342937  longitude = 116.819614
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 72.105474
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 72.105474
[insertNode] [1236]: childNode's preSegmentId = 47
[displayNodeCoordinate] [100]: 47's startCoordinate: latitude = 40.342912, longitude = 116.819382
[displayNodeCoordinate] [105]: 47's endCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1169]: (*it)->preSegmentId = 52's segIsInTree = 0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[insertNode] [1215]: tempNode is = 0x557d5406a1d0, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a290
[insertChildNode] [1113]: childNode = 0x557d5406a290
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 97.875000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [348]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [354]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [221]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [232]: dX = 4.146041
[calcCurveXYOffset] [233]: dY = -0.087854
[coordinateSystemRotates] [162]: accumulateBranchAngle = 104.703903, accumulateBranchAngleRad = 1.827428
[coordinateSystemRotates] [163]: dX = 4.146041
[coordinateSystemRotates] [164]: dY = -0.087854
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.253824
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.967250
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.052364
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.084977
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 4.010260
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.022299
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.967387
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 4.032560
[coordinateSystemRotates] [176]: coordinate system rotated X = -0.967387
[coordinateSystemRotates] [177]: coordinate system rotated Y = 4.032560
[calcChildSegmentCoordinate] [362]: first half of the curvature curve: accumulateXY.distanceX = -119.460483, accumulateXY.distanceY = 76.676912
[calcDestination] [78]: destinationCoord latitude = 40.342928  destinationCoord longitude = 116.819662
[calcChildSegmentCoordinate] [365]: one SampleCoord before the endCoord  latitude = 40.342928  longitude = 116.819662
[calcChildSegmentCoordinate] [368]: childNode->MapData.accumulateBranchAngle = 102.276094
[calcChildSegmentCoordinate] [370]: fixed childNode->MapData.accumulateBranchAngle = 102.276094
[calcCurveXYOffset] [221]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [232]: dX = 5.845774
[calcCurveXYOffset] [233]: dY = 0.246803
[coordinateSystemRotates] [162]: accumulateBranchAngle = 102.276094, accumulateBranchAngleRad = 1.785055
[coordinateSystemRotates] [163]: dX = 5.845774
[coordinateSystemRotates] [164]: dY = 0.246803
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.212623
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.977134
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.242944
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.241159
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.712107
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.052476
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.484104
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 5.659631
[coordinateSystemRotates] [176]: coordinate system rotated X = -1.484104
[coordinateSystemRotates] [177]: coordinate system rotated Y = 5.659631
[calcChildSegmentCoordinate] [378]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -120.944586, childNode->MapData.accumulateXY.distanceY = 82.336543
[calcDestination] [78]: destinationCoord latitude = 40.342915  destinationCoord longitude = 116.819728
[calcChildSegmentCoordinate] [380]: childSegment's endCoordinate latitude = 40.342915  longitude = 116.819728
[calcChildSegmentCoordinate] [383]: childNode->MapData.accumulateBranchAngle = 107.111160
[calcChildSegmentCoordinate] [385]: fixed accumulateBranchAngleHv2End = 107.111160
[insertNode] [1236]: childNode's preSegmentId = 52
[displayNodeCoordinate] [100]: 52's startCoordinate: latitude = 40.342937, longitude = 116.819614
[displayNodeCoordinate] [103]: 52's SampleCoord: latitude = 40.342928, longitude = 116.819662
[displayNodeCoordinate] [105]: 52's endCoordinate: latitude = 40.342915, longitude = 116.819728
[insertNode] [1169]: (*it)->preSegmentId = 53's segIsInTree = 0
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[insertNode] [1215]: tempNode is = 0x557d5406a290, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a350
[insertChildNode] [1113]: childNode = 0x557d5406a350
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 35.875000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [348]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [354]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [221]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [232]: dX = 24.800115
[calcCurveXYOffset] [233]: dY = 9.952618
[coordinateSystemRotates] [162]: accumulateBranchAngle = 107.111160, accumulateBranchAngleRad = 1.869442
[coordinateSystemRotates] [163]: dX = 24.800115
[coordinateSystemRotates] [164]: dY = 9.952618
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.294226
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.955736
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -7.296851
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 9.512072
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 23.702356
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -2.928324
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -16.808923
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 20.774032
[coordinateSystemRotates] [176]: coordinate system rotated X = -16.808923
[coordinateSystemRotates] [177]: coordinate system rotated Y = 20.774032
[calcChildSegmentCoordinate] [362]: first half of the curvature curve: accumulateXY.distanceX = -137.753509, accumulateXY.distanceY = 103.110575
[calcDestination] [78]: destinationCoord latitude = 40.342764  destinationCoord longitude = 116.819973
[calcChildSegmentCoordinate] [365]: one SampleCoord before the endCoord  latitude = 40.342764  longitude = 116.819973
[calcChildSegmentCoordinate] [368]: childNode->MapData.accumulateBranchAngle = 150.843662
[calcChildSegmentCoordinate] [370]: fixed childNode->MapData.accumulateBranchAngle = 150.843662
[calcCurveXYOffset] [221]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [232]: dX = 8.609263
[calcCurveXYOffset] [233]: dY = 0.325564
[coordinateSystemRotates] [162]: accumulateBranchAngle = 150.843662, accumulateBranchAngleRad = 2.632719
[coordinateSystemRotates] [163]: dX = 8.609263
[coordinateSystemRotates] [164]: dY = 0.325564
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.873294
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.487194
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -7.518414
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.158613
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 4.194384
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.284313
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -7.677027
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.910071
[coordinateSystemRotates] [176]: coordinate system rotated X = -7.677027
[coordinateSystemRotates] [177]: coordinate system rotated Y = 3.910071
[calcChildSegmentCoordinate] [378]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -145.430537, childNode->MapData.accumulateXY.distanceY = 107.020646
[calcDestination] [78]: destinationCoord latitude = 40.342695  destinationCoord longitude = 116.820019
[calcChildSegmentCoordinate] [380]: childSegment's endCoordinate latitude = 40.342695  longitude = 116.820019
[calcChildSegmentCoordinate] [383]: childNode->MapData.accumulateBranchAngle = 155.174945
[calcChildSegmentCoordinate] [385]: fixed accumulateBranchAngleHv2End = 155.174945
[insertNode] [1236]: childNode's preSegmentId = 53
[displayNodeCoordinate] [100]: 53's startCoordinate: latitude = 40.342915, longitude = 116.819728
[displayNodeCoordinate] [103]: 53's SampleCoord: latitude = 40.342764, longitude = 116.819973
[displayNodeCoordinate] [105]: 53's endCoordinate: latitude = 40.342695, longitude = 116.820019
[insertNode] [1169]: (*it)->preSegmentId = 50's segIsInTree = 0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[insertNode] [1215]: tempNode is = 0x557d5406a1d0, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a410
[insertChildNode] [1113]: childNode = 0x557d5406a410
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 72.105474, accumulateBranchAngleRad = 1.258478
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.307266
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.951624
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 9.837505
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -9.374012
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 30.467454
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -3.026734
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.211517
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 27.440719
[coordinateSystemRotates] [176]: coordinate system rotated X = 19.211517
[coordinateSystemRotates] [177]: coordinate system rotated Y = 27.440719
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -99.281578, accumulateXY.distanceY = 100.085072
[calcDestination] [78]: destinationCoord latitude = 40.343109  destinationCoord longitude = 116.819938
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343109  longitude = 116.819938
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 37.902041
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 37.902041
[insertNode] [1236]: childNode's preSegmentId = 50
[displayNodeCoordinate] [100]: 50's startCoordinate: latitude = 40.342937, longitude = 116.819614
[displayNodeCoordinate] [105]: 50's endCoordinate: latitude = 40.343109, longitude = 116.819938
[insertNode] [1169]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[insertNode] [1215]: tempNode is = 0x557d5406a410, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a4d0
[insertChildNode] [1113]: childNode = 0x557d5406a4d0
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 37.902041, accumulateBranchAngleRad = 0.661515
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.789062
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.614313
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 19.810453
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.582776
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 15.423151
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.601940
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 23.393229
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 10.821211
[coordinateSystemRotates] [176]: coordinate system rotated X = 23.393229
[coordinateSystemRotates] [177]: coordinate system rotated Y = 10.821211
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -75.888349, accumulateXY.distanceY = 110.906283
[calcDestination] [78]: destinationCoord latitude = 40.343319  destinationCoord longitude = 116.820065
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343319  longitude = 116.820065
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 11.746475
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 11.746475
[insertNode] [1236]: childNode's preSegmentId = 5
[displayNodeCoordinate] [100]: 5's startCoordinate: latitude = 40.343109, longitude = 116.819938
[displayNodeCoordinate] [105]: 5's endCoordinate: latitude = 40.343319, longitude = 116.820065
[insertNode] [1169]: (*it)->preSegmentId = 9's segIsInTree = 0
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[insertNode] [1215]: tempNode is = 0x557d5406a4d0, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a590
[insertChildNode] [1113]: childNode = 0x557d5406a590
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 11.746475, accumulateBranchAngleRad = 0.205015
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.979058
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.203582
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 24.580550
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -1.187321
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.111184
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.710027
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 25.767871
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.598843
[coordinateSystemRotates] [176]: coordinate system rotated X = 25.767871
[coordinateSystemRotates] [177]: coordinate system rotated Y = -0.598843
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -50.120478, accumulateXY.distanceY = 110.307440
[calcDestination] [78]: destinationCoord latitude = 40.343551  destinationCoord longitude = 116.820058
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343551  longitude = 116.820058
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -14.409091
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -14.409091
[insertNode] [1236]: childNode's preSegmentId = 9
[displayNodeCoordinate] [100]: 9's startCoordinate: latitude = 40.343319, longitude = 116.820065
[displayNodeCoordinate] [105]: 9's endCoordinate: latitude = 40.343551, longitude = 116.820058
[insertNode] [1169]: (*it)->preSegmentId = 11's segIsInTree = 0
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[insertNode] [1215]: tempNode is = 0x557d5406a590, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a650
[insertChildNode] [1113]: childNode = 0x557d5406a650
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = -18.661060, accumulateBranchAngleRad = -0.325697
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.947428
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.319969
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 30.333120
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.151870
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -10.244223
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -9.332681
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 27.181249
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -19.576903
[coordinateSystemRotates] [176]: coordinate system rotated X = 27.181249
[coordinateSystemRotates] [177]: coordinate system rotated Y = -19.576903
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -22.939229, accumulateXY.distanceY = 90.730537
[calcDestination] [78]: destinationCoord latitude = 40.343795  destinationCoord longitude = 116.819827
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343795  longitude = 116.819827
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -52.864493
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -52.864493
[insertNode] [1236]: childNode's preSegmentId = 11
[displayNodeCoordinate] [100]: 11's startCoordinate: latitude = 40.343551, longitude = 116.820058
[displayNodeCoordinate] [105]: 11's endCoordinate: latitude = 40.343795, longitude = 116.819827
[insertNode] [1169]: (*it)->preSegmentId = 13's segIsInTree = 0
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[insertNode] [1215]: tempNode is = 0x557d5406a650, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a710
[insertChildNode] [1113]: childNode = 0x557d5406a710
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [232]: dX = 26.885681
[calcCurveXYOffset] [233]: dY = -6.745119
[coordinateSystemRotates] [162]: accumulateBranchAngle = -52.864493, accumulateBranchAngleRad = -0.922659
[coordinateSystemRotates] [163]: dX = 26.885681
[coordinateSystemRotates] [164]: dY = -6.745119
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.603702
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.797210
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 16.230944
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 5.377276
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -21.433533
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.072043
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 10.853668
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -25.505575
[coordinateSystemRotates] [176]: coordinate system rotated X = 10.853668
[coordinateSystemRotates] [177]: coordinate system rotated Y = -25.505575
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -12.085561, accumulateXY.distanceY = 65.224961
[calcDestination] [78]: destinationCoord latitude = 40.343892  destinationCoord longitude = 116.819527
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343892  longitude = 116.819527
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -81.032025
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -81.032025
[insertNode] [1236]: childNode's preSegmentId = 13
[displayNodeCoordinate] [100]: 13's startCoordinate: latitude = 40.343795, longitude = 116.819827
[displayNodeCoordinate] [105]: 13's endCoordinate: latitude = 40.343892, longitude = 116.819527
[insertNode] [1169]: (*it)->preSegmentId = 15's segIsInTree = 0
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[insertNode] [1215]: tempNode is = 0x557d5406a710, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a7f0
[insertChildNode] [1113]: childNode = 0x557d5406a7f0
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [232]: dX = 30.342789
[calcCurveXYOffset] [233]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -81.032025, accumulateBranchAngleRad = -1.414276
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.155882
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.987776
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 4.729906
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.648517
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -29.971868
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -1.364836
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -3.918611
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -31.336703
[coordinateSystemRotates] [176]: coordinate system rotated X = -3.918611
[coordinateSystemRotates] [177]: coordinate system rotated Y = -31.336703
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -16.004173, accumulateXY.distanceY = 33.888258
[calcDestination] [78]: destinationCoord latitude = 40.343857  destinationCoord longitude = 116.819157
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343857  longitude = 116.819157
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -113.223491
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -113.223491
[insertNode] [1236]: childNode's preSegmentId = 15
[displayNodeCoordinate] [100]: 15's startCoordinate: latitude = 40.343892, longitude = 116.819527
[displayNodeCoordinate] [105]: 15's endCoordinate: latitude = 40.343857, longitude = 116.819157
[insertNode] [1169]: (*it)->preSegmentId = 17's segIsInTree = 0
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[insertNode] [1215]: tempNode is = 0x557d5406a7f0, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a8d0
[insertChildNode] [1113]: childNode = 0x557d5406a8d0
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [232]: dX = 30.342789
[calcCurveXYOffset] [233]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -113.223491, accumulateBranchAngleRad = -1.976123
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.394319
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.918974
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -11.964730
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.046119
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -27.884227
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 3.452477
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -20.010849
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -24.431750
[coordinateSystemRotates] [176]: coordinate system rotated X = -20.010849
[coordinateSystemRotates] [177]: coordinate system rotated Y = -24.431750
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -36.015021, accumulateXY.distanceY = 9.456508
[calcDestination] [78]: destinationCoord latitude = 40.343677  destinationCoord longitude = 116.818869
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343677  longitude = 116.818869
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -145.414957
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -145.414957
[insertNode] [1236]: childNode's preSegmentId = 17
[displayNodeCoordinate] [100]: 17's startCoordinate: latitude = 40.343857, longitude = 116.819157
[displayNodeCoordinate] [105]: 17's endCoordinate: latitude = 40.343677, longitude = 116.818869
[insertNode] [1169]: (*it)->preSegmentId = 21's segIsInTree = 0
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[insertNode] [1215]: tempNode is = 0x557d5406a8d0, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 0
[createNode] [1105]: newNode = 0x557d5406a9b0
[insertChildNode] [1113]: childNode = 0x557d5406a9b0
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = -145.414957, accumulateBranchAngleRad = -2.537970
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.823285
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.567629
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -20.669652
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.310504
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -14.251075
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.801531
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -23.980156
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -9.449545
[coordinateSystemRotates] [176]: coordinate system rotated X = -23.980156
[coordinateSystemRotates] [177]: coordinate system rotated Y = -9.449545
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -59.995178, accumulateXY.distanceY = 0.006963
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818758
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818758
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -171.570523
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -171.570523
[insertNode] [1236]: childNode's preSegmentId = 21
[displayNodeCoordinate] [100]: 21's startCoordinate: latitude = 40.343677, longitude = 116.818869
[displayNodeCoordinate] [105]: 21's endCoordinate: latitude = 40.343462, longitude = 116.818758
######Ro locates the predicted segment of HV######
[PsdLocation] [76]: initialize mRoMatchedSegId = 0
[PsdLocation] [77]: initialize mRoMatchedNode = (nil)
[PsdLocation] [78]: initialize mIsMatch = 0
[PsdLocation] [79]: initialize PsdAvailable = 0
[PsdLocation] [80]: initialize MPP = 0
[PsdLocation] [81]: initialize roadSegClass = 0
[PsdLocation] [82]: initialize relativePos = 0
[PsdLocation] [83]: initialize RelativeDir = 0
[PsdLocation] [84]: initialize RvRelevancy = 0
[PsdLocation] [85]: initialize dis2Event = 0.000000
[PsdLocation] [86]: initialize HvDTIP = 0.000000
[PsdLocation] [87]: initialize RvDTIP = 0.000000
[coordinateTransform] [47]: dn = 2.494199
[coordinateTransform] [48]: de = 4.079582
[coordinateTransform] [58]: y_ = -1.803526
[coordinateTransform] [59]: x_ = -4.428466
[coordinateTransform] [47]: dn = 1.683620
[coordinateTransform] [48]: de = 4.690504
[coordinateTransform] [58]: y_ = -2.776266
[coordinateTransform] [59]: x_ = -4.138569
[RoMatchSegment] [495]: Point_1.x = -4.428466, Point_1.y = -1.803526
[RoMatchSegment] [496]: Point_2.x = -4.138569, Point_2.y = -2.776266
[RoMatchSegment] [502]: orthogonalDistance = 4.759107
[RoMatchSegment] [506]: Alpha = 1.667903, Beta = 5.013626
[coordinateTransform] [47]: dn = 1.683620
[coordinateTransform] [48]: de = 4.690504
[coordinateTransform] [58]: y_ = -2.776266
[coordinateTransform] [59]: x_ = -4.138569
[coordinateTransform] [47]: dn = -24.451410
[coordinateTransform] [48]: de = 15.262940
[coordinateTransform] [58]: y_ = -26.794975
[coordinateTransform] [59]: x_ = 10.623472
[RoMatchSegment] [495]: Point_1.x = -4.138569, Point_1.y = -2.776266
[RoMatchSegment] [496]: Point_2.x = 10.623472, Point_2.y = -26.794975
[RoMatchSegment] [502]: orthogonalDistance = 4.979569
[RoMatchSegment] [506]: Alpha = 1.610584, Beta = 0.173628
[RoMatchSegment] [514]: mIsMatch = 1
[RoMatchSegment] [515]: mRoMatchedSegId = 54
[RoMatchSegment] [516]: mRoMatchedNode = 0x557d54069d50
###### RoPoint_1 behind HV is 1 matched ######
[coordinateTransform] [47]: dn = 114.423725
[coordinateTransform] [48]: de = -26.082959
[coordinateTransform] [58]: y_ = 88.895211
[coordinateTransform] [59]: x_ = -76.620826
[coordinateTransform] [47]: dn = 113.613149
[coordinateTransform] [48]: de = -25.472029
[coordinateTransform] [58]: y_ = 87.922466
[coordinateTransform] [59]: x_ = -76.330936
[RoMatchSegment] [495]: Point_1.x = -76.620826, Point_1.y = 88.895211
[RoMatchSegment] [496]: Point_2.x = -76.330936, Point_2.y = 87.922466
[RoMatchSegment] [502]: orthogonalDistance = 48.041026
[RoMatchSegment] [506]: Alpha = 0.421743, Beta = 3.566904
[coordinateTransform] [47]: dn = 113.613149
[coordinateTransform] [48]: de = -25.472029
[coordinateTransform] [58]: y_ = 87.922466
[coordinateTransform] [59]: x_ = -76.330936
[coordinateTransform] [47]: dn = 87.478161
[coordinateTransform] [48]: de = -14.899435
[coordinateTransform] [58]: y_ = 63.903655
[coordinateTransform] [59]: x_ = -61.569023
[RoMatchSegment] [495]: Point_1.x = -76.330936, Point_1.y = 87.922466
[RoMatchSegment] [496]: Point_2.x = -61.569023, Point_2.y = 63.903655
[RoMatchSegment] [502]: orthogonalDistance = 18.993506
[RoMatchSegment] [506]: Alpha = 0.163860, Beta = 3.357302
[coordinateTransform] [47]: dn = 87.478161
[coordinateTransform] [48]: de = -14.899435
[coordinateTransform] [58]: y_ = 63.903655
[coordinateTransform] [59]: x_ = -61.569023
[coordinateTransform] [47]: dn = 77.142685
[coordinateTransform] [48]: de = -14.104452
[coordinateTransform] [58]: y_ = 57.130512
[coordinateTransform] [59]: x_ = -53.721820
[RoMatchSegment] [495]: Point_1.x = -61.569023, Point_1.y = 63.903655
[RoMatchSegment] [496]: Point_2.x = -53.721820, Point_2.y = 57.130512
[RoMatchSegment] [502]: orthogonalDistance = 8.146736
[RoMatchSegment] [506]: Alpha = 0.091936, Beta = 3.037521
[coordinateTransform] [47]: dn = 77.142685
[coordinateTransform] [48]: de = -14.104452
[coordinateTransform] [58]: y_ = 57.130512
[coordinateTransform] [59]: x_ = -53.721820
[coordinateTransform] [47]: dn = 52.997152
[coordinateTransform] [48]: de = -22.972010
[coordinateTransform] [58]: y_ = 49.939539
[coordinateTransform] [59]: x_ = -29.025055
[RoMatchSegment] [495]: Point_1.x = -53.721820, Point_1.y = 57.130512
[RoMatchSegment] [496]: Point_2.x = -29.025055, Point_2.y = 49.939539
[RoMatchSegment] [502]: orthogonalDistance = 39.834072
[RoMatchSegment] [506]: Alpha = 0.532801, Beta = 2.380617
[coordinateTransform] [47]: dn = 52.997152
[coordinateTransform] [48]: de = -22.972010
[coordinateTransform] [58]: y_ = 49.939539
[coordinateTransform] [59]: x_ = -29.025055
[coordinateTransform] [47]: dn = 29.326347
[coordinateTransform] [48]: de = -20.869456
[coordinateTransform] [58]: y_ = 34.200504
[coordinateTransform] [59]: x_ = -11.220265
[RoMatchSegment] [495]: Point_1.x = -29.025055, Point_1.y = 49.939539
[RoMatchSegment] [496]: Point_2.x = -11.220265, Point_2.y = 34.200504
[RoMatchSegment] [502]: orthogonalDistance = 18.192922
[RoMatchSegment] [506]: Alpha = 0.320420, Beta = 2.611697
[coordinateTransform] [47]: dn = 29.326347
[coordinateTransform] [48]: de = -20.869456
[coordinateTransform] [58]: y_ = 34.200504
[coordinateTransform] [59]: x_ = -11.220265
[coordinateTransform] [47]: dn = 27.430534
[coordinateTransform] [48]: de = -20.246124
[coordinateTransform] [58]: y_ = 32.573776
[coordinateTransform] [59]: x_ = -10.064234
[RoMatchSegment] [495]: Point_1.x = -11.220265, Point_1.y = 34.200504
[RoMatchSegment] [496]: Point_2.x = -10.064234, Point_2.y = 32.573776
[RoMatchSegment] [502]: orthogonalDistance = 10.665416
[RoMatchSegment] [506]: Alpha = 0.300828, Beta = 2.823419
[coordinateTransform] [47]: dn = 27.430534
[coordinateTransform] [48]: de = -20.246124
[coordinateTransform] [58]: y_ = 32.573776
[coordinateTransform] [59]: x_ = -10.064234
[coordinateTransform] [47]: dn = 2.973920
[coordinateTransform] [48]: de = -3.541467
[coordinateTransform] [58]: y_ = 4.615285
[coordinateTransform] [59]: x_ = -0.292116
[RoMatchSegment] [495]: Point_1.x = -10.064234, Point_1.y = 32.573776
[RoMatchSegment] [496]: Point_2.x = -0.292116, Point_2.y = 4.615285
[RoMatchSegment] [502]: orthogonalDistance = 1.247050
[RoMatchSegment] [506]: Alpha = 0.036586, Beta = 2.868552
[coordinateTransform] [47]: dn = 2.973920
[coordinateTransform] [48]: de = -3.541467
[coordinateTransform] [58]: y_ = 4.615285
[coordinateTransform] [59]: x_ = -0.292116
[coordinateTransform] [47]: dn = -8.084609
[coordinateTransform] [48]: de = 28.113123
[coordinateTransform] [58]: y_ = -27.425638
[coordinateTransform] [59]: x_ = -10.175606
[RoMatchSegment] [495]: Point_1.x = -0.292116, Point_1.y = 4.615285
[RoMatchSegment] [496]: Point_2.x = -10.175606, Point_2.y = -27.425638
[RoMatchSegment] [502]: orthogonalDistance = 1.639539
[RoMatchSegment] [506]: Alpha = 0.362413, Beta = 0.056077
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[RoMatchSegment] [514]: mIsMatch = 1
[RoMatchSegment] [515]: mRoMatchedSegId = 42
[RoMatchSegment] [516]: mRoMatchedNode = 0x557d5406a110
###### RoPoint_2 front of HV not on segment of 50 is 1 matched ######
[coordinateTransform] [47]: dn = 94.324618
[coordinateTransform] [48]: de = -101.786570
[coordinateTransform] [58]: y_ = 137.901389
[coordinateTransform] [59]: x_ = -15.519227
[coordinateTransform] [47]: dn = 93.514048
[coordinateTransform] [48]: de = -101.175641
[coordinateTransform] [58]: y_ = 136.928648
[coordinateTransform] [59]: x_ = -15.229341
[RoMatchSegment] [495]: Point_1.x = -15.519227, Point_1.y = 137.901389
[RoMatchSegment] [496]: Point_2.x = -15.229341, Point_2.y = 136.928648
[RoMatchSegment] [502]: orthogonalDistance = 24.511463
[RoMatchSegment] [506]: Alpha = 0.177563, Beta = 2.962728
[coordinateTransform] [47]: dn = 93.514048
[coordinateTransform] [48]: de = -101.175641
[coordinateTransform] [58]: y_ = 136.928648
[coordinateTransform] [59]: x_ = -15.229341
[coordinateTransform] [47]: dn = 67.379167
[coordinateTransform] [48]: de = -90.603076
[coordinateTransform] [58]: y_ = 112.909924
[coordinateTransform] [59]: x_ = -0.467497
[RoMatchSegment] [495]: Point_1.x = -15.229341, Point_1.y = 136.928648
[RoMatchSegment] [496]: Point_2.x = -0.467497, Point_2.y = 112.909924
[RoMatchSegment] [502]: orthogonalDistance = 58.722572
[RoMatchSegment] [506]: Alpha = 0.440318, Beta = 2.594649
[coordinateTransform] [47]: dn = 67.379167
[coordinateTransform] [48]: de = -90.603076
[coordinateTransform] [58]: y_ = 112.909924
[coordinateTransform] [59]: x_ = -0.467497
[coordinateTransform] [47]: dn = 57.043699
[coordinateTransform] [48]: de = -89.808095
[coordinateTransform] [58]: y_ = 106.136787
[coordinateTransform] [59]: x_ = 7.379700
[RoMatchSegment] [495]: Point_1.x = -0.467497, Point_1.y = 112.909924
[RoMatchSegment] [496]: Point_2.x = 7.379700, Point_2.y = 106.136787
[RoMatchSegment] [502]: orthogonalDistance = 85.168851
[RoMatchSegment] [506]: Alpha = 0.854589, Beta = 2.213444
[coordinateTransform] [47]: dn = 57.043699
[coordinateTransform] [48]: de = -89.808095
[coordinateTransform] [58]: y_ = 106.136787
[coordinateTransform] [59]: x_ = 7.379700
[coordinateTransform] [47]: dn = 32.898077
[coordinateTransform] [48]: de = -98.675629
[coordinateTransform] [58]: y_ = 98.945742
[coordinateTransform] [59]: x_ = 32.076524
[RoMatchSegment] [495]: Point_1.x = 7.379700, Point_1.y = 106.136787
[RoMatchSegment] [496]: Point_2.x = 32.076524, Point_2.y = 98.945742
[RoMatchSegment] [502]: orthogonalDistance = 103.967922
[RoMatchSegment] [506]: Alpha = 1.356876, Beta = 1.540643
[coordinateTransform] [47]: dn = 32.898077
[coordinateTransform] [48]: de = -98.675629
[coordinateTransform] [58]: y_ = 98.945742
[coordinateTransform] [59]: x_ = 32.076524
[coordinateTransform] [47]: dn = 9.227292
[coordinateTransform] [48]: de = -96.573081
[coordinateTransform] [58]: y_ = 83.206724
[coordinateTransform] [59]: x_ = 49.881300
[RoMatchSegment] [495]: Point_1.x = 32.076524, Point_1.y = 98.945742
[RoMatchSegment] [496]: Point_2.x = 49.881300, Point_2.y = 83.206724
[RoMatchSegment] [502]: orthogonalDistance = 95.377953
[RoMatchSegment] [506]: Alpha = 1.160397, Beta = 1.754646
[coordinateTransform] [47]: dn = 9.227292
[coordinateTransform] [48]: de = -96.573081
[coordinateTransform] [58]: y_ = 83.206724
[coordinateTransform] [59]: x_ = 49.881300
[coordinateTransform] [47]: dn = 7.331486
[coordinateTransform] [48]: de = -95.949750
[coordinateTransform] [58]: y_ = 81.580001
[coordinateTransform] [59]: x_ = 51.037326
[RoMatchSegment] [495]: Point_1.x = 49.881300, Point_1.y = 83.206724
[RoMatchSegment] [496]: Point_2.x = 51.037326, Point_2.y = 81.580001
[RoMatchSegment] [502]: orthogonalDistance = 88.859327
[RoMatchSegment] [506]: Alpha = 1.157878, Beta = 1.964718
[coordinateTransform] [47]: dn = 7.331486
[coordinateTransform] [48]: de = -95.949750
[coordinateTransform] [58]: y_ = 81.580001
[coordinateTransform] [59]: x_ = 51.037326
[coordinateTransform] [47]: dn = -17.124960
[coordinateTransform] [48]: de = -79.245139
[coordinateTransform] [58]: y_ = 53.621646
[coordinateTransform] [59]: x_ = 60.809336
[RoMatchSegment] [495]: Point_1.x = 51.037326, Point_1.y = 81.580001
[RoMatchSegment] [496]: Point_2.x = 60.809336, Point_2.y = 53.621646
[RoMatchSegment] [502]: orthogonalDistance = 75.096278
[RoMatchSegment] [506]: Alpha = 0.895286, Beta = 1.957217
[coordinateTransform] [47]: dn = -17.124960
[coordinateTransform] [48]: de = -79.245139
[coordinateTransform] [58]: y_ = 53.621646
[coordinateTransform] [59]: x_ = 60.809336
[coordinateTransform] [47]: dn = -28.183170
[coordinateTransform] [48]: de = -47.590633
[coordinateTransform] [58]: y_ = 21.580980
[coordinateTransform] [59]: x_ = 50.925639
[RoMatchSegment] [495]: Point_1.x = 60.809336, Point_1.y = 53.621646
[RoMatchSegment] [496]: Point_2.x = 50.925639, Point_2.y = 21.580980
[RoMatchSegment] [502]: orthogonalDistance = 42.301583
[RoMatchSegment] [506]: Alpha = 0.548916, Beta = 4.012345
[coordinateTransform] [47]: dn = -28.183170
[coordinateTransform] [48]: de = -47.590633
[coordinateTransform] [58]: y_ = 21.580980
[coordinateTransform] [59]: x_ = 50.925639
[coordinateTransform] [47]: dn = -25.477528
[coordinateTransform] [48]: de = -27.851012
[coordinateTransform] [58]: y_ = 7.298261
[coordinateTransform] [59]: x_ = 37.034021
[RoMatchSegment] [495]: Point_1.x = 50.925639, Point_1.y = 21.580980
[RoMatchSegment] [496]: Point_2.x = 37.034021, Point_2.y = 7.298261
[RoMatchSegment] [502]: orthogonalDistance = 21.459441
[RoMatchSegment] [506]: Alpha = 0.398447, Beta = 3.746296
[coordinateTransform] [47]: dn = -25.477528
[coordinateTransform] [48]: de = -27.851012
[coordinateTransform] [58]: y_ = 7.298261
[coordinateTransform] [59]: x_ = 37.034021
[coordinateTransform] [47]: dn = -26.442483
[coordinateTransform] [48]: de = -23.812734
[coordinateTransform] [58]: y_ = 3.475253
[coordinateTransform] [59]: x_ = 35.414317
[RoMatchSegment] [495]: Point_1.x = 37.034021, Point_1.y = 7.298261
[RoMatchSegment] [496]: Point_2.x = 35.414317, Point_2.y = 3.475253
[RoMatchSegment] [502]: orthogonalDistance = 31.252737
[RoMatchSegment] [506]: Alpha = 0.975475, Beta = 4.213825
[coordinateTransform] [47]: dn = -26.442483
[coordinateTransform] [48]: de = -23.812734
[coordinateTransform] [58]: y_ = 3.475253
[coordinateTransform] [59]: x_ = 35.414317
[coordinateTransform] [47]: dn = -27.922861
[coordinateTransform] [48]: de = -18.145077
[coordinateTransform] [58]: y_ = -1.965093
[coordinateTransform] [59]: x_ = 33.242569
[RoMatchSegment] [495]: Point_1.x = 35.414317, Point_1.y = 3.475253
[RoMatchSegment] [496]: Point_2.x = 33.242569, Point_2.y = -1.965093
[RoMatchSegment] [502]: orthogonalDistance = 31.602083
[RoMatchSegment] [506]: Alpha = 1.093168, Beta = 4.391624
[coordinateTransform] [47]: dn = -27.922861
[coordinateTransform] [48]: de = -18.145077
[coordinateTransform] [58]: y_ = -1.965093
[coordinateTransform] [59]: x_ = 33.242569
[coordinateTransform] [47]: dn = -44.689746
[coordinateTransform] [48]: de = 2.658414
[coordinateTransform] [58]: y_ = -28.659481
[coordinateTransform] [59]: x_ = 34.392946
[RoMatchSegment] [495]: Point_1.x = 33.242569, Point_1.y = -1.965093
[RoMatchSegment] [496]: Point_2.x = 34.392946, Point_2.y = -28.659481
[RoMatchSegment] [502]: orthogonalDistance = 33.127139
[RoMatchSegment] [506]: Alpha = 1.672909, Beta = 0.833013
[coordinateTransform] [47]: dn = -44.689746
[coordinateTransform] [48]: de = 2.658414
[coordinateTransform] [58]: y_ = -28.659481
[coordinateTransform] [59]: x_ = 34.392946
[coordinateTransform] [47]: dn = -52.347586
[coordinateTransform] [48]: de = 6.574030
[coordinateTransform] [58]: y_ = -36.355442
[coordinateTransform] [59]: x_ = 38.233093
[RoMatchSegment] [495]: Point_1.x = 34.392946, Point_1.y = -28.659481
[RoMatchSegment] [496]: Point_2.x = 38.233093, Point_2.y = -36.355442
[RoMatchSegment] [502]: orthogonalDistance = 17.978482
[RoMatchSegment] [506]: Alpha = 2.728345, Beta = 0.347733
[coordinateTransform] [47]: dn = -25.477528
[coordinateTransform] [48]: de = -27.851012
[coordinateTransform] [58]: y_ = 7.298261
[coordinateTransform] [59]: x_ = 37.034021
[coordinateTransform] [47]: dn = -6.313981
[coordinateTransform] [48]: de = -0.371379
[coordinateTransform] [58]: y_ = -3.447915
[coordinateTransform] [59]: x_ = 5.302468
[RoMatchSegment] [495]: Point_1.x = 37.034021, Point_1.y = 7.298261
[RoMatchSegment] [496]: Point_2.x = 5.302468, Point_2.y = -3.447915
[RoMatchSegment] [502]: orthogonalDistance = 4.966565
[RoMatchSegment] [506]: Alpha = 0.131960, Beta = 4.044678
[coordinateTransform] [47]: dn = -6.313981
[coordinateTransform] [48]: de = -0.371379
[coordinateTransform] [58]: y_ = -3.447915
[coordinateTransform] [59]: x_ = 5.302468
[coordinateTransform] [47]: dn = 17.020767
[coordinateTransform] [48]: de = 10.465177
[coordinateTransform] [58]: y_ = 1.677088
[coordinateTransform] [59]: x_ = -19.910143
[RoMatchSegment] [495]: Point_1.x = 5.302468, Point_1.y = -3.447915
[RoMatchSegment] [496]: Point_2.x = -19.910143, Point_2.y = 1.677088
[RoMatchSegment] [502]: orthogonalDistance = 2.322577
[RoMatchSegment] [506]: Alpha = 0.376010, Beta = 0.116505
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[RoMatchSegment] [514]: mIsMatch = 1
[RoMatchSegment] [515]: mRoMatchedSegId = 5
[RoMatchSegment] [516]: mRoMatchedNode = 0x557d5406a4d0
###### RoPoint_3 on segment of 50 is 1 matched ######
open successfully
[TestBody] [4901]: curSegment's latitude = 40.343751
[TestBody] [4920]: curSegment's longitude = 116.818822
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 54, DrivedLength = 2.000000, curRemainLength = 38
[TestBody] [4937]: hvHeading = 191.600000
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 54, DrivedLength = 2.000000, curRemainLength = 38
[TestBody] [4948]: headingAccuracy = 1.650000
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 54, DrivedLength = 2.000000, curRemainLength = 38
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4901]: curSegment's latitude = 40.343698
[TestBody] [4920]: curSegment's longitude = 116.818810
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4937]: hvHeading = 194.500000
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4948]: headingAccuracy = 1.650000
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4955]: lastSegmentId = 54, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
###### mapUpdate ######
[mapUpdate] [1333]: --------------------------update the attribute of root, parent and current and delete out of date childs------------------------------
[updateRootNode] [1073]: updateRootNode
[mapUpdate] [1341]: mTree->MapData.nodeAttribute = 3
[updateOtherNode] [1020]: mTree->MapData.nodeAttribute = 3
[updateOtherNode] [1023]: mTree->MapData.nodeAttribute need update from RootAndCurSegment/CurSegment to ParentSegment
[mapUpdate] [1347]: updateOtherNode
[mapUpdate] [1351]: mTree->MapData.nodeAttribute = 2
[mapUpdate] [1357]: updateChildNode
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[updateChildNode] [976]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[updateChildNode] [1009]: goto check the next segment info from vPsdMap
[updateChildNode] [976]: tempNode is = 0x557d54069d50, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 1
[findNodeById] [837]: result = 0x557d54069e10
[updateChildNode] [976]: tempNode is = 0x557d54069e10, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d54069ed0
[findNodeById] [837]: result = 0x557d54069ed0
[updateChildNode] [976]: tempNode is = 0x557d54069ed0, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d54069f90
[findNodeById] [837]: result = 0x557d54069f90
[findNodeById] [837]: result = 0x557d54069f90
[updateChildNode] [976]: tempNode is = 0x557d54069f90, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[updateChildNode] [976]: tempNode is = 0x557d5406a050, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[updateChildNode] [976]: tempNode is = 0x557d5406a110, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[updateChildNode] [976]: tempNode is = 0x557d5406a1d0, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[updateChildNode] [976]: tempNode is = 0x557d5406a290, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[updateChildNode] [976]: tempNode is = 0x557d5406a1d0, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[updateChildNode] [976]: tempNode is = 0x557d5406a410, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[updateChildNode] [976]: tempNode is = 0x557d5406a4d0, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[updateChildNode] [976]: tempNode is = 0x557d5406a590, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[updateChildNode] [976]: tempNode is = 0x557d5406a650, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[updateChildNode] [976]: tempNode is = 0x557d5406a710, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[updateChildNode] [976]: tempNode is = 0x557d5406a7f0, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[updateChildNode] [976]: tempNode is = 0x557d5406a8d0, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[mapUpdate] [1379]: --------------------------update the Coordinate of root, parent, current and childs------------------------------
[mapUpdate] [1380]: hv's longitude = 116.818810, latitude = 40.343698, hvHeading = 194.500000
[findNodeById] [837]: result = 0x557d54069e10
[mapUpdate] [1390]: curNode->MapData.nodeAttribute = 3
[calcCurSegmentCoordinate] [539]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [572]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [597]: R = 56.955000
[calcCurSegmentCoordinate] [630]: finalRemainLength = 12.000000
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 12.071800, arcRotationAngleRad = 0.210693, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.022114
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -1.259486
[calcCurveXYOffset] [232]: dX = 11.911414
[calcCurveXYOffset] [233]: dY = -1.259486
[coordinateSystemRotates] [162]: accumulateBranchAngle = 194.500000, accumulateBranchAngleRad = 3.394665
[coordinateSystemRotates] [163]: dX = 11.911414
[coordinateSystemRotates] [164]: dY = -1.259486
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.968148
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.250380
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -11.532007
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.315350
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -2.982380
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 1.219369
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -11.847358
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -1.763011
[coordinateSystemRotates] [176]: coordinate system rotated X = -11.847358
[coordinateSystemRotates] [177]: coordinate system rotated Y = -1.763011
[calcCurSegmentCoordinate] [639]: disHv2EndAfterRotatingCoord.distanceX = -11.847358, disHv2EndAfterRotatingCoord.distanceY = -1.763011
[calcDestination] [78]: destinationCoord latitude = 40.343592  destinationCoord longitude = 116.818789
[calcCurSegmentCoordinate] [641]: HV's endCoordinate latitude = 40.343592  longitude = 116.818789
[calcCurSegmentCoordinate] [645]: accumulateBranchAngleHv2End = 182.428200
[calcCurSegmentCoordinate] [647]: fixed accumulateBranchAngleHv2End = 182.428200
[calcCurSegmentCoordinate] [692]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [695]: accumulateBranchAngleHv2Start = 374.500000
[calcCurSegmentCoordinate] [697]: fixed accumulateBranchAngleHv2Start = 14.500000
[calcCurSegmentCoordinate] [707]: R = 56.955000
[calcCurSegmentCoordinate] [735]: finalRemainLength = 14.000000
[calcCurveXYOffset] [221]: arcR = -56.955000, arcRotationAngle = 14.083766, arcRotationAngleRad = 0.245808, signCurvature = 0
[calcCurveXYOffset] [227]: arcR = 56.955000
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.030059
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -1.712010
[calcCurveXYOffset] [232]: dX = -13.859442
[calcCurveXYOffset] [233]: dY = -1.712010
[coordinateSystemRotates] [162]: accumulateBranchAngle = 14.500000, accumulateBranchAngleRad = 0.253073
[coordinateSystemRotates] [163]: dX = -13.859442
[coordinateSystemRotates] [164]: dY = -1.712010
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.968148
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.250380
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -13.417986
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.428653
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -3.470127
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -1.657479
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -12.989332
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -5.127606
[coordinateSystemRotates] [176]: coordinate system rotated X = -12.989332
[coordinateSystemRotates] [177]: coordinate system rotated Y = -5.127606
[calcCurSegmentCoordinate] [743]: disHv2StartAfterRotatingCoord.distanceX = -12.989332, disHv2StartAfterRotatingCoord.distanceY = -5.127606
[calcDestination] [78]: destinationCoord latitude = 40.343581  destinationCoord longitude = 116.818750
[calcCurSegmentCoordinate] [745]: HV's startCoordinate latitude = 40.343581  longitude = 116.818750
[calcCurSegmentCoordinate] [749]: accumulateBranchAngleHv2Start = 28.583766
[calcCurSegmentCoordinate] [751]: fixed accumulateBranchAngleHv2Start = 28.583766
[displayNodeCoordinate] [100]: 58's startCoordinate: latitude = 40.343581, longitude = 116.818750
[displayNodeCoordinate] [105]: 58's endCoordinate: latitude = 40.343592, longitude = 116.818789
[calcRootOrParentSegmentCoordinate] [394]: --------------------------Is rootSegment or parentSegment--------------------------
[calcRootOrParentSegmentCoordinate] [448]: R = 140.500000
[calcRootOrParentSegmentCoordinate] [476]: finalRemainLength = 40.000000
[calcRootOrParentSegmentCoordinate] [500]: Sa = 10.686418, Se = 29.313582
[calcCurveXYOffset] [221]: arcR = 140.500000, arcRotationAngle = 4.357912, arcRotationAngleRad = 0.076060, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.002891
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.406208
[calcCurveXYOffset] [232]: dX = 10.676117
[calcCurveXYOffset] [233]: dY = 0.406208
[coordinateSystemRotates] [162]: accumulateBranchAngle = -6.849309, accumulateBranchAngleRad = -0.119543
[coordinateSystemRotates] [163]: dX = 10.676117
[coordinateSystemRotates] [164]: dY = 0.406208
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.992863
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.119258
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 10.599924
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.048444
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -1.273217
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.403309
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 10.648368
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.869908
[coordinateSystemRotates] [176]: coordinate system rotated X = 10.648368
[coordinateSystemRotates] [177]: coordinate system rotated Y = -0.869908
[calcRootOrParentSegmentCoordinate] [508]: first half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = -2.340965, rootOrParentNode->MapData.accumulateXY.distanceY = -5.997514
[calcDestination] [78]: destinationCoord latitude = 40.343677  destinationCoord longitude = 116.818739
[calcRootOrParentSegmentCoordinate] [511]: one SampleCoord before the startCoord latitude = 40.343677  longitude = 116.818739
[calcRootOrParentSegmentCoordinate] [514]: rootOrParentNode->MapData.accumulateBranchAngle = -11.207221
[calcRootOrParentSegmentCoordinate] [516]: fixed rootOrParentNode->MapData.accumulateBranchAngle = -11.207221
[calcCurveXYOffset] [221]: arcR = 51.220000, arcRotationAngle = 32.790796, arcRotationAngleRad = 0.572307, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.159346
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.161722
[calcCurveXYOffset] [232]: dX = 27.739378
[calcCurveXYOffset] [233]: dY = 8.161722
[coordinateSystemRotates] [162]: accumulateBranchAngle = -11.207221, accumulateBranchAngleRad = -0.195603
[coordinateSystemRotates] [163]: dX = 27.739378
[coordinateSystemRotates] [164]: dY = 8.161722
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.980931
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.194358
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 27.210406
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -1.586296
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -5.391369
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 8.006083
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 28.796702
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.614714
[coordinateSystemRotates] [176]: coordinate system rotated X = 28.796702
[coordinateSystemRotates] [177]: coordinate system rotated Y = 2.614714
[calcRootOrParentSegmentCoordinate] [523]: second half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 26.455737, rootOrParentNode->MapData.accumulateXY.distanceY = -3.382800
[calcDestination] [78]: destinationCoord latitude = 40.343936  destinationCoord longitude = 116.818770
[calcRootOrParentSegmentCoordinate] [525]: rootSegment or parentSegment's startCoordinate latitude = 40.343936  longitude = 116.818770
[calcRootOrParentSegmentCoordinate] [528]: rootOrParentNode->MapData.accumulateBranchAngle = -43.998016
[calcRootOrParentSegmentCoordinate] [530]: fixed rootOrParentNode->MapData.accumulateBranchAngle = -43.998016
[displayNodeCoordinate] [100]: 54's startCoordinate: latitude = 40.343936, longitude = 116.818770
[displayNodeCoordinate] [103]: 54's SampleCoord: latitude = 40.343677, longitude = 116.818739
[displayNodeCoordinate] [105]: 54's endCoordinate: latitude = 40.343581, longitude = 116.818750
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 24.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [232]: dX = 23.296017
[calcCurveXYOffset] [233]: dY = -4.982242
[coordinateSystemRotates] [162]: accumulateBranchAngle = 182.428200, accumulateBranchAngleRad = 3.183973
[coordinateSystemRotates] [163]: dX = 23.296017
[coordinateSystemRotates] [164]: dY = -4.982242
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.999102
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.042367
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -23.275099
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.211085
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -0.986992
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.977768
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -23.486184
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.990776
[coordinateSystemRotates] [176]: coordinate system rotated X = -23.486184
[coordinateSystemRotates] [177]: coordinate system rotated Y = 3.990776
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -35.333542, accumulateXY.distanceY = 2.227765
[calcDestination] [78]: destinationCoord latitude = 40.343381  destinationCoord longitude = 116.818836
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343381  longitude = 116.818836
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 158.284601
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 158.284601
[displayNodeCoordinate] [100]: 16's startCoordinate: latitude = 40.343592, longitude = 116.818789
[displayNodeCoordinate] [105]: 16's endCoordinate: latitude = 40.343381, longitude = 116.818836
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [232]: dX = 1.999589
[calcCurveXYOffset] [233]: dY = -0.035112
[coordinateSystemRotates] [162]: accumulateBranchAngle = 158.284601, accumulateBranchAngleRad = 2.762587
[coordinateSystemRotates] [163]: dX = 1.999589
[coordinateSystemRotates] [164]: dY = -0.035112
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.929033
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.369996
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.857684
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.012991
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 0.739841
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.032620
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.844693
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.772461
[coordinateSystemRotates] [176]: coordinate system rotated X = -1.844693
[coordinateSystemRotates] [177]: coordinate system rotated Y = 0.772461
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -37.178235, accumulateXY.distanceY = 3.000226
[calcDestination] [78]: destinationCoord latitude = 40.343364  destinationCoord longitude = 116.818845
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343364  longitude = 116.818845
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 156.272634
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 156.272634
[displayNodeCoordinate] [100]: 33's startCoordinate: latitude = 40.343381, longitude = 116.818836
[displayNodeCoordinate] [105]: 33's endCoordinate: latitude = 40.343364, longitude = 116.818845
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [232]: dX = 28.631886
[calcCurveXYOffset] [233]: dY = -7.719981
[coordinateSystemRotates] [162]: accumulateBranchAngle = 156.272634, accumulateBranchAngleRad = 2.727472
[coordinateSystemRotates] [163]: dX = 28.631886
[coordinateSystemRotates] [164]: dY = -7.719981
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.915471
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.402385
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -26.211648
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.106405
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 11.521044
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 7.067415
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -23.105243
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 18.588459
[coordinateSystemRotates] [176]: coordinate system rotated X = -23.105243
[coordinateSystemRotates] [177]: coordinate system rotated Y = 18.588459
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -60.283478, accumulateXY.distanceY = 21.588685
[calcDestination] [78]: destinationCoord latitude = 40.343156  destinationCoord longitude = 116.819064
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343156  longitude = 116.819064
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 126.093135
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 126.093135
[displayNodeCoordinate] [100]: 35's startCoordinate: latitude = 40.343364, longitude = 116.818845
[displayNodeCoordinate] [105]: 35's endCoordinate: latitude = 40.343156, longitude = 116.819064
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 121.841166, accumulateBranchAngleRad = 2.126530
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.527566
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.849514
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -16.890711
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -8.368174
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 27.198275
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 5.196815
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -8.522537
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 32.395089
[coordinateSystemRotates] [176]: coordinate system rotated X = -8.522537
[coordinateSystemRotates] [177]: coordinate system rotated Y = 32.395089
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -68.806014, accumulateXY.distanceY = 53.983774
[calcDestination] [78]: destinationCoord latitude = 40.343080  destinationCoord longitude = 116.819446
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343080  longitude = 116.819446
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 87.637733
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 87.637733
[displayNodeCoordinate] [100]: 42's startCoordinate: latitude = 40.343156, longitude = 116.819064
[displayNodeCoordinate] [105]: 42's endCoordinate: latitude = 40.343080, longitude = 116.819446
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [232]: dX = 19.591495
[calcCurveXYOffset] [233]: dY = -3.475608
[coordinateSystemRotates] [162]: accumulateBranchAngle = 87.637733, accumulateBranchAngleRad = 1.529567
[coordinateSystemRotates] [163]: dX = 19.591495
[coordinateSystemRotates] [164]: dY = -3.475608
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.041218
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.999150
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 0.807515
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.472655
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 19.574846
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.143256
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 4.280170
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 19.431590
[coordinateSystemRotates] [176]: coordinate system rotated X = 4.280170
[coordinateSystemRotates] [177]: coordinate system rotated Y = 19.431590
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -64.525844, accumulateXY.distanceY = 73.415364
[calcDestination] [78]: destinationCoord latitude = 40.343118  destinationCoord longitude = 116.819675
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343118  longitude = 116.819675
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 67.518067
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 67.518067
[displayNodeCoordinate] [100]: 47's startCoordinate: latitude = 40.343080, longitude = 116.819446
[displayNodeCoordinate] [105]: 47's endCoordinate: latitude = 40.343118, longitude = 116.819675
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 97.875000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [348]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [354]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [221]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [232]: dX = 4.146041
[calcCurveXYOffset] [233]: dY = -0.087854
[coordinateSystemRotates] [162]: accumulateBranchAngle = 100.116496, accumulateBranchAngleRad = 1.747362
[coordinateSystemRotates] [163]: dX = 4.146041
[coordinateSystemRotates] [164]: dY = -0.087854
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.175650
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.984453
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -0.728253
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.086488
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 4.081581
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.015432
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.641765
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 4.097013
[coordinateSystemRotates] [176]: coordinate system rotated X = -0.641765
[coordinateSystemRotates] [177]: coordinate system rotated Y = 4.097013
[calcChildSegmentCoordinate] [362]: first half of the curvature curve: accumulateXY.distanceX = -65.167609, accumulateXY.distanceY = 77.512377
[calcDestination] [78]: destinationCoord latitude = 40.343113  destinationCoord longitude = 116.819724
[calcChildSegmentCoordinate] [365]: one SampleCoord before the endCoord  latitude = 40.343113  longitude = 116.819724
[calcChildSegmentCoordinate] [368]: childNode->MapData.accumulateBranchAngle = 97.688687
[calcChildSegmentCoordinate] [370]: fixed childNode->MapData.accumulateBranchAngle = 97.688687
[calcCurveXYOffset] [221]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [232]: dX = 5.845774
[calcCurveXYOffset] [233]: dY = 0.246803
[coordinateSystemRotates] [162]: accumulateBranchAngle = 97.688687, accumulateBranchAngleRad = 1.704989
[coordinateSystemRotates] [163]: dX = 5.845774
[coordinateSystemRotates] [164]: dY = 0.246803
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.133791
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.991010
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -0.782109
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.244584
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.793218
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.033020
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.026693
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 5.760198
[coordinateSystemRotates] [176]: coordinate system rotated X = -1.026693
[coordinateSystemRotates] [177]: coordinate system rotated Y = 5.760198
[calcChildSegmentCoordinate] [378]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -66.194302, childNode->MapData.accumulateXY.distanceY = 83.272575
[calcDestination] [78]: destinationCoord latitude = 40.343103  destinationCoord longitude = 116.819791
[calcChildSegmentCoordinate] [380]: childSegment's endCoordinate latitude = 40.343103  longitude = 116.819791
[calcChildSegmentCoordinate] [383]: childNode->MapData.accumulateBranchAngle = 102.523754
[calcChildSegmentCoordinate] [385]: fixed accumulateBranchAngleHv2End = 102.523754
[displayNodeCoordinate] [100]: 52's startCoordinate: latitude = 40.343118, longitude = 116.819675
[displayNodeCoordinate] [103]: 52's SampleCoord: latitude = 40.343113, longitude = 116.819724
[displayNodeCoordinate] [105]: 52's endCoordinate: latitude = 40.343103, longitude = 116.819791
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 67.518067, accumulateBranchAngleRad = 1.178413
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.382392
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.924000
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 12.242772
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -9.101904
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 29.583049
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -3.766770
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 21.344677
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 25.816279
[coordinateSystemRotates] [176]: coordinate system rotated X = 21.344677
[coordinateSystemRotates] [177]: coordinate system rotated Y = 25.816279
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -43.181168, accumulateXY.distanceY = 99.231642
[calcDestination] [78]: destinationCoord latitude = 40.343310  destinationCoord longitude = 116.819980
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343310  longitude = 116.819980
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 33.314634
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 33.314634
[displayNodeCoordinate] [100]: 50's startCoordinate: latitude = 40.343118, longitude = 116.819675
[displayNodeCoordinate] [105]: 50's endCoordinate: latitude = 40.343310, longitude = 116.819980
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 35.875000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [348]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [354]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [221]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [232]: dX = 24.800115
[calcCurveXYOffset] [233]: dY = 9.952618
[coordinateSystemRotates] [162]: accumulateBranchAngle = 102.523754, accumulateBranchAngleRad = 1.789377
[coordinateSystemRotates] [163]: dX = 24.800115
[coordinateSystemRotates] [164]: dY = 9.952618
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.216844
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.976206
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -5.377765
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 9.715807
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 24.210026
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -2.158169
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -15.093572
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 22.051857
[coordinateSystemRotates] [176]: coordinate system rotated X = -15.093572
[coordinateSystemRotates] [177]: coordinate system rotated Y = 22.051857
[calcChildSegmentCoordinate] [362]: first half of the curvature curve: accumulateXY.distanceX = -81.287874, accumulateXY.distanceY = 105.324432
[calcDestination] [78]: destinationCoord latitude = 40.342968  destinationCoord longitude = 116.820051
[calcChildSegmentCoordinate] [365]: one SampleCoord before the endCoord  latitude = 40.342968  longitude = 116.820051
[calcChildSegmentCoordinate] [368]: childNode->MapData.accumulateBranchAngle = 146.256255
[calcChildSegmentCoordinate] [370]: fixed childNode->MapData.accumulateBranchAngle = 146.256255
[calcCurveXYOffset] [221]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [232]: dX = 8.609263
[calcCurveXYOffset] [233]: dY = 0.325564
[coordinateSystemRotates] [162]: accumulateBranchAngle = 146.256255, accumulateBranchAngleRad = 2.552653
[coordinateSystemRotates] [163]: dX = 8.609263
[coordinateSystemRotates] [164]: dY = 0.325564
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.831530
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.555479
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -7.158863
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.180844
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 4.782269
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.270717
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -7.339707
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 4.511552
[coordinateSystemRotates] [176]: coordinate system rotated X = -7.339707
[coordinateSystemRotates] [177]: coordinate system rotated Y = 4.511552
[calcChildSegmentCoordinate] [378]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -88.627581, childNode->MapData.accumulateXY.distanceY = 109.835984
[calcDestination] [78]: destinationCoord latitude = 40.342902  destinationCoord longitude = 116.820105
[calcChildSegmentCoordinate] [380]: childSegment's endCoordinate latitude = 40.342902  longitude = 116.820105
[calcChildSegmentCoordinate] [383]: childNode->MapData.accumulateBranchAngle = 150.587538
[calcChildSegmentCoordinate] [385]: fixed accumulateBranchAngleHv2End = 150.587538
[displayNodeCoordinate] [100]: 53's startCoordinate: latitude = 40.343103, longitude = 116.819791
[displayNodeCoordinate] [103]: 53's SampleCoord: latitude = 40.342968, longitude = 116.820051
[displayNodeCoordinate] [105]: 53's endCoordinate: latitude = 40.342902, longitude = 116.820105
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 33.314634, accumulateBranchAngleRad = 0.581450
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.835667
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.549236
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 20.980531
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.203236
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 13.789306
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.873747
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 24.183767
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 8.915558
[coordinateSystemRotates] [176]: coordinate system rotated X = 24.183767
[coordinateSystemRotates] [177]: coordinate system rotated Y = 8.915558
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -18.997400, accumulateXY.distanceY = 108.147201
[calcDestination] [78]: destinationCoord latitude = 40.343527  destinationCoord longitude = 116.820085
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343527  longitude = 116.820085
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 7.159068
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 7.159068
[displayNodeCoordinate] [100]: 5's startCoordinate: latitude = 40.343310, longitude = 116.819980
[displayNodeCoordinate] [105]: 5's endCoordinate: latitude = 40.343527, longitude = 116.820085
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 7.159068, accumulateBranchAngleRad = 0.124949
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.992204
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.124624
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 24.910597
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.726830
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 3.128862
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.786696
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 25.637428
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -2.657834
[coordinateSystemRotates] [176]: coordinate system rotated X = 25.637428
[coordinateSystemRotates] [177]: coordinate system rotated Y = -2.657834
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 6.640027, accumulateXY.distanceY = 105.489366
[calcDestination] [78]: destinationCoord latitude = 40.343758  destinationCoord longitude = 116.820053
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343758  longitude = 116.820053
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -18.996498
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -18.996498
[displayNodeCoordinate] [100]: 9's startCoordinate: latitude = 40.343527, longitude = 116.820085
[displayNodeCoordinate] [105]: 9's endCoordinate: latitude = 40.343758, longitude = 116.820053
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = -23.248467, accumulateBranchAngleRad = -0.405762
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.918802
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.394719
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 29.416616
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.888200
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -12.637443
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -9.050697
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 25.528416
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -21.688140
[coordinateSystemRotates] [176]: coordinate system rotated X = 25.528416
[coordinateSystemRotates] [177]: coordinate system rotated Y = -21.688140
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 32.168443, accumulateXY.distanceY = 83.801226
[calcDestination] [78]: destinationCoord latitude = 40.343987  destinationCoord longitude = 116.819798
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343987  longitude = 116.819798
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -57.451899
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -57.451899
[displayNodeCoordinate] [100]: 11's startCoordinate: latitude = 40.343758, longitude = 116.820053
[displayNodeCoordinate] [105]: 11's endCoordinate: latitude = 40.343987, longitude = 116.819798
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [232]: dX = 26.885681
[calcCurveXYOffset] [233]: dY = -6.745119
[coordinateSystemRotates] [162]: accumulateBranchAngle = -57.451899, accumulateBranchAngleRad = -1.002725
[coordinateSystemRotates] [163]: dX = 26.885681
[coordinateSystemRotates] [164]: dY = -6.745119
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.538007
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.842940
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 14.464697
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 5.685731
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -22.663018
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -3.628924
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 8.778966
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -26.291942
[coordinateSystemRotates] [176]: coordinate system rotated X = 8.778966
[coordinateSystemRotates] [177]: coordinate system rotated Y = -26.291942
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 40.947409, accumulateXY.distanceY = 57.509284
[calcDestination] [78]: destinationCoord latitude = 40.344066  destinationCoord longitude = 116.819488
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.344066  longitude = 116.819488
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -85.619432
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -85.619432
[displayNodeCoordinate] [100]: 13's startCoordinate: latitude = 40.343987, longitude = 116.819798
[displayNodeCoordinate] [105]: 13's endCoordinate: latitude = 40.344066, longitude = 116.819488
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [232]: dX = 30.342789
[calcCurveXYOffset] [233]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -85.619432, accumulateBranchAngleRad = -1.494341
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.076381
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.997079
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 2.317609
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.729971
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -30.254150
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.668756
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -6.412362
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -30.922906
[coordinateSystemRotates] [176]: coordinate system rotated X = -6.412362
[coordinateSystemRotates] [177]: coordinate system rotated Y = -30.922906
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 34.535047, accumulateXY.distanceY = 26.586378
[calcDestination] [78]: destinationCoord latitude = 40.344008  destinationCoord longitude = 116.819123
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.344008  longitude = 116.819123
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -117.810898
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -117.810898
[displayNodeCoordinate] [100]: 15's startCoordinate: latitude = 40.344066, longitude = 116.819488
[displayNodeCoordinate] [105]: 15's endCoordinate: latitude = 40.344008, longitude = 116.819123
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [232]: dX = 30.342789
[calcCurveXYOffset] [233]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -117.810898, accumulateBranchAngleRad = -2.056188
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.466555
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.884492
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -14.156577
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 7.744215
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -26.837962
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.084944
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -21.900791
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -22.753018
[coordinateSystemRotates] [176]: coordinate system rotated X = -21.900791
[coordinateSystemRotates] [177]: coordinate system rotated Y = -22.753018
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 12.634256, accumulateXY.distanceY = 3.833360
[calcDestination] [78]: destinationCoord latitude = 40.343811  destinationCoord longitude = 116.818855
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343811  longitude = 116.818855
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -150.002364
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -150.002364
[displayNodeCoordinate] [100]: 17's startCoordinate: latitude = 40.344008, longitude = 116.819123
[displayNodeCoordinate] [105]: 17's endCoordinate: latitude = 40.343811, longitude = 116.818855
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = -150.002364, accumulateBranchAngleRad = -2.618035
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.866046
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.499964
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -21.743235
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 2.915873
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -12.552266
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 5.050922
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -24.659108
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -7.501344
[coordinateSystemRotates] [176]: coordinate system rotated X = -24.659108
[coordinateSystemRotates] [177]: coordinate system rotated Y = -7.501344
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -12.024852, accumulateXY.distanceY = -3.667984
[calcDestination] [78]: destinationCoord latitude = 40.343590  destinationCoord longitude = 116.818767
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343590  longitude = 116.818767
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -176.157930
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -176.157930
[displayNodeCoordinate] [100]: 21's startCoordinate: latitude = 40.343811, longitude = 116.818855
[displayNodeCoordinate] [105]: 21's endCoordinate: latitude = 40.343590, longitude = 116.818767
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4901]: curSegment's latitude = 40.343637
[TestBody] [4920]: curSegment's longitude = 116.818780
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4937]: hvHeading = 196.600000
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4948]: headingAccuracy = 1.650000
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4901]: curSegment's latitude = 40.343571
[TestBody] [4920]: curSegment's longitude = 116.818750
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4937]: hvHeading = 196.800000
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4948]: headingAccuracy = 1.500000
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4820]: curSegmentId = 58
[TestBody] [4834]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4955]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
open successfully
[TestBody] [5100]: curSegment's latitude = 40.343751
[TestBody] [5119]: curSegment's longitude = 116.818822
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5136]: hvHeading = 191.600000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5147]: headingAccuracy = 1.650000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 2.000000, curRemainLength = 24
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 6.000000, curRemainLength = 20
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5100]: curSegment's latitude = 40.343698
[TestBody] [5119]: curSegment's longitude = 116.818810
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5136]: hvHeading = 194.500000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5147]: headingAccuracy = 1.650000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 8.000000, curRemainLength = 18
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5100]: curSegment's latitude = 40.343637
[TestBody] [5119]: curSegment's longitude = 116.818780
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5136]: hvHeading = 196.600000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5147]: headingAccuracy = 1.650000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 14.000000, curRemainLength = 12
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 16.000000, curRemainLength = 10
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 20.000000, curRemainLength = 6
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5100]: curSegment's latitude = 40.343571
[TestBody] [5119]: curSegment's longitude = 116.818750
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5136]: hvHeading = 196.800000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5147]: headingAccuracy = 1.500000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 58
[TestBody] [5033]: DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 58, DrivedLength = 22.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5100]: curSegment's latitude = 40.343516
[TestBody] [5119]: curSegment's longitude = 116.818738
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5136]: hvHeading = 193.000000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5147]: headingAccuracy = 1.350000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 0.000000, curRemainLength = 24
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 4.000000, curRemainLength = 20
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 4.000000, curRemainLength = 20
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 4.000000, curRemainLength = 20
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 4.000000, curRemainLength = 20
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5100]: curSegment's latitude = 40.343452
[TestBody] [5119]: curSegment's longitude = 116.818730
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5136]: hvHeading = 185.600000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5147]: headingAccuracy = 1.350000
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 8.000000, curRemainLength = 16
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 10.000000, curRemainLength = 14
[TestBody] [5154]: lastSegmentId = 58, curSegmentId = 16, DrivedLength = 10.000000, curRemainLength = 14
###### mapUpdate ######
[mapUpdate] [1333]: --------------------------update the attribute of root, parent and current and delete out of date childs------------------------------
[updateRootNode] [1073]: updateRootNode
[mapUpdate] [1341]: mTree->MapData.nodeAttribute = 2
[updateOtherNode] [1020]: mTree->MapData.nodeAttribute = 2
[updateOtherNode] [1034]: mTree->MapData.nodeAttribute need update from ParentSegment to RootSegment
[mapUpdate] [1347]: updateOtherNode
[mapUpdate] [1351]: mTree->MapData.nodeAttribute = 1
[mapUpdate] [1357]: updateChildNode
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[updateChildNode] [976]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[updateChildNode] [1009]: goto check the next segment info from vPsdMap
[updateChildNode] [976]: tempNode is = 0x557d54069d50, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 1
[findNodeById] [837]: result = 0x557d54069e10
[updateChildNode] [976]: tempNode is = 0x557d54069e10, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 1
[findNodeById] [837]: result = 0x557d54069ed0
[findNodeById] [837]: result = 0x557d54069ed0
[updateChildNode] [976]: tempNode is = 0x557d54069ed0, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d54069f90
[findNodeById] [837]: result = 0x557d54069f90
[findNodeById] [837]: result = 0x557d54069f90
[updateChildNode] [976]: tempNode is = 0x557d54069f90, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[findNodeById] [837]: result = 0x557d5406a050
[updateChildNode] [976]: tempNode is = 0x557d5406a050, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[findNodeById] [837]: result = 0x557d5406a110
[updateChildNode] [976]: tempNode is = 0x557d5406a110, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[updateChildNode] [976]: tempNode is = 0x557d5406a1d0, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[findNodeById] [837]: result = 0x557d5406a290
[updateChildNode] [976]: tempNode is = 0x557d5406a290, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[findNodeById] [837]: result = 0x557d5406a1d0
[updateChildNode] [976]: tempNode is = 0x557d5406a1d0, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[findNodeById] [837]: result = 0x557d5406a410
[updateChildNode] [976]: tempNode is = 0x557d5406a410, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[findNodeById] [837]: result = 0x557d5406a4d0
[updateChildNode] [976]: tempNode is = 0x557d5406a4d0, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[findNodeById] [837]: result = 0x557d5406a590
[updateChildNode] [976]: tempNode is = 0x557d5406a590, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[findNodeById] [837]: result = 0x557d5406a650
[updateChildNode] [976]: tempNode is = 0x557d5406a650, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[findNodeById] [837]: result = 0x557d5406a710
[updateChildNode] [976]: tempNode is = 0x557d5406a710, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[findNodeById] [837]: result = 0x557d5406a7f0
[updateChildNode] [976]: tempNode is = 0x557d5406a7f0, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[findNodeById] [842]: result = (nil)
[findNodeById] [842]: result = (nil)
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[findNodeById] [837]: result = 0x557d5406a8d0
[updateChildNode] [976]: tempNode is = 0x557d5406a8d0, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 1
[updateChildNode] [1002]: some nodes are already in tree
[mapUpdate] [1379]: --------------------------update the Coordinate of root, parent, current and childs------------------------------
[mapUpdate] [1380]: hv's longitude = 116.818730, latitude = 40.343452, hvHeading = 185.600000
[findNodeById] [837]: result = 0x557d54069ed0
[findNodeById] [837]: result = 0x557d54069ed0
[mapUpdate] [1390]: curNode->MapData.nodeAttribute = 3
[calcCurSegmentCoordinate] [539]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [572]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [597]: R = 56.955000
[calcCurSegmentCoordinate] [630]: finalRemainLength = 14.000000
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 14.083766, arcRotationAngleRad = 0.245808, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.030059
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -1.712010
[calcCurveXYOffset] [232]: dX = 13.859442
[calcCurveXYOffset] [233]: dY = -1.712010
[coordinateSystemRotates] [162]: accumulateBranchAngle = 185.600000, accumulateBranchAngleRad = 3.239331
[coordinateSystemRotates] [163]: dX = 13.859442
[coordinateSystemRotates] [164]: dY = -1.712010
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.995227
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.097583
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -13.793296
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.167063
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -1.352444
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 1.703840
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -13.960359
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.351395
[coordinateSystemRotates] [176]: coordinate system rotated X = -13.960359
[coordinateSystemRotates] [177]: coordinate system rotated Y = 0.351395
[calcCurSegmentCoordinate] [639]: disHv2EndAfterRotatingCoord.distanceX = -13.960359, disHv2EndAfterRotatingCoord.distanceY = 0.351395
[calcDestination] [78]: destinationCoord latitude = 40.343327  destinationCoord longitude = 116.818734
[calcCurSegmentCoordinate] [641]: HV's endCoordinate latitude = 40.343327  longitude = 116.818734
[calcCurSegmentCoordinate] [645]: accumulateBranchAngleHv2End = 171.516234
[calcCurSegmentCoordinate] [647]: fixed accumulateBranchAngleHv2End = 171.516234
[calcCurSegmentCoordinate] [692]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [695]: accumulateBranchAngleHv2Start = 365.600000
[calcCurSegmentCoordinate] [697]: fixed accumulateBranchAngleHv2Start = 5.600000
[calcCurSegmentCoordinate] [707]: R = 56.955000
[calcCurSegmentCoordinate] [735]: finalRemainLength = 10.000000
[calcCurveXYOffset] [221]: arcR = -56.955000, arcRotationAngle = 10.059833, arcRotationAngleRad = 0.175577, signCurvature = 0
[calcCurveXYOffset] [227]: arcR = 56.955000
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.015374
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.875633
[calcCurveXYOffset] [232]: dX = -9.948700
[calcCurveXYOffset] [233]: dY = -0.875633
[coordinateSystemRotates] [162]: accumulateBranchAngle = 5.600000, accumulateBranchAngleRad = 0.097738
[coordinateSystemRotates] [163]: dX = -9.948700
[coordinateSystemRotates] [164]: dY = -0.875633
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.995227
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.097583
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -9.901219
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.085447
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -0.970823
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.871454
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -9.815772
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -1.842277
[coordinateSystemRotates] [176]: coordinate system rotated X = -9.815772
[coordinateSystemRotates] [177]: coordinate system rotated Y = -1.842277
[calcCurSegmentCoordinate] [743]: disHv2StartAfterRotatingCoord.distanceX = -9.815772, disHv2StartAfterRotatingCoord.distanceY = -1.842277
[calcDestination] [78]: destinationCoord latitude = 40.343364  destinationCoord longitude = 116.818708
[calcCurSegmentCoordinate] [745]: HV's startCoordinate latitude = 40.343364  longitude = 116.818708
[calcCurSegmentCoordinate] [749]: accumulateBranchAngleHv2Start = 15.659833
[calcCurSegmentCoordinate] [751]: fixed accumulateBranchAngleHv2Start = 15.659833
[displayNodeCoordinate] [100]: 16's startCoordinate: latitude = 40.343364, longitude = 116.818708
[displayNodeCoordinate] [105]: 16's endCoordinate: latitude = 40.343327, longitude = 116.818734
[calcRootOrParentSegmentCoordinate] [394]: --------------------------Is rootSegment or parentSegment--------------------------
[calcRootOrParentSegmentCoordinate] [448]: R = 56.955000
[calcRootOrParentSegmentCoordinate] [476]: finalRemainLength = 26.000000
[calcCurveXYOffset] [221]: arcR = -56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [227]: arcR = 56.955000
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = -25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 15.659833, accumulateBranchAngleRad = 0.273316
[coordinateSystemRotates] [163]: dX = -25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.962881
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.269925
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -24.174410
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -1.574250
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -6.776838
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.615681
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -22.600161
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -12.392518
[coordinateSystemRotates] [176]: coordinate system rotated X = -22.600161
[coordinateSystemRotates] [177]: coordinate system rotated Y = -12.392518
[calcRootOrParentSegmentCoordinate] [484]: accumulateXY.distanceX = -32.415933, accumulateXY.distanceY = -14.234796
[calcDestination] [78]: destinationCoord latitude = 40.343161  destinationCoord longitude = 116.818562
[calcRootOrParentSegmentCoordinate] [486]: rootSegment or parentSegment's startCoordinate latitude = 40.343161  longitude = 116.818562
[calcRootOrParentSegmentCoordinate] [490]: arcRotationAngle = -26.155566 accumulateBranchAngle = 41.815399
[calcRootOrParentSegmentCoordinate] [492]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 41.815399
[displayNodeCoordinate] [100]: 58's startCoordinate: latitude = 40.343161, longitude = 116.818562
[displayNodeCoordinate] [105]: 58's endCoordinate: latitude = 40.343364, longitude = 116.818708
[calcRootOrParentSegmentCoordinate] [394]: --------------------------Is rootSegment or parentSegment--------------------------
[calcRootOrParentSegmentCoordinate] [448]: R = 140.500000
[calcRootOrParentSegmentCoordinate] [476]: finalRemainLength = 40.000000
[calcRootOrParentSegmentCoordinate] [500]: Sa = 10.686418, Se = 29.313582
[calcCurveXYOffset] [221]: arcR = 140.500000, arcRotationAngle = 4.357912, arcRotationAngleRad = 0.076060, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.002891
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.406208
[calcCurveXYOffset] [232]: dX = 10.676117
[calcCurveXYOffset] [233]: dY = 0.406208
[coordinateSystemRotates] [162]: accumulateBranchAngle = 6.382324, accumulateBranchAngleRad = 0.111393
[coordinateSystemRotates] [163]: dX = 10.676117
[coordinateSystemRotates] [164]: dY = 0.406208
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.993802
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.111162
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 10.609949
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.045155
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 1.186782
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.403691
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 10.564794
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.590473
[coordinateSystemRotates] [176]: coordinate system rotated X = 10.564794
[coordinateSystemRotates] [177]: coordinate system rotated Y = 1.590473
[calcRootOrParentSegmentCoordinate] [508]: first half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = -21.851139, rootOrParentNode->MapData.accumulateXY.distanceY = -12.644323
[calcDestination] [78]: destinationCoord latitude = 40.343256  destinationCoord longitude = 116.818581
[calcRootOrParentSegmentCoordinate] [511]: one SampleCoord before the startCoord latitude = 40.343256  longitude = 116.818581
[calcRootOrParentSegmentCoordinate] [514]: rootOrParentNode->MapData.accumulateBranchAngle = 2.024412
[calcRootOrParentSegmentCoordinate] [516]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 2.024412
[calcCurveXYOffset] [221]: arcR = 51.220000, arcRotationAngle = 32.790796, arcRotationAngleRad = 0.572307, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.159346
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.161722
[calcCurveXYOffset] [232]: dX = 27.739378
[calcCurveXYOffset] [233]: dY = 8.161722
[coordinateSystemRotates] [162]: accumulateBranchAngle = 2.024412, accumulateBranchAngleRad = 0.035333
[coordinateSystemRotates] [163]: dX = 27.739378
[coordinateSystemRotates] [164]: dY = 8.161722
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.999376
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.035325
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 27.722065
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.288315
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 0.979902
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 8.156628
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 27.433749
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 9.136530
[coordinateSystemRotates] [176]: coordinate system rotated X = 27.433749
[coordinateSystemRotates] [177]: coordinate system rotated Y = 9.136530
[calcRootOrParentSegmentCoordinate] [523]: second half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 5.582611, rootOrParentNode->MapData.accumulateXY.distanceY = -3.507793
[calcDestination] [78]: destinationCoord latitude = 40.343502  destinationCoord longitude = 116.818689
[calcRootOrParentSegmentCoordinate] [525]: rootSegment or parentSegment's startCoordinate latitude = 40.343502  longitude = 116.818689
[calcRootOrParentSegmentCoordinate] [528]: rootOrParentNode->MapData.accumulateBranchAngle = -30.766383
[calcRootOrParentSegmentCoordinate] [530]: fixed rootOrParentNode->MapData.accumulateBranchAngle = -30.766383
[displayNodeCoordinate] [100]: 54's startCoordinate: latitude = 40.343502, longitude = 116.818689
[displayNodeCoordinate] [103]: 54's SampleCoord: latitude = 40.343256, longitude = 116.818581
[displayNodeCoordinate] [105]: 54's endCoordinate: latitude = 40.343161, longitude = 116.818562
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [232]: dX = 1.999589
[calcCurveXYOffset] [233]: dY = -0.035112
[coordinateSystemRotates] [162]: accumulateBranchAngle = 171.516234, accumulateBranchAngleRad = 2.993523
[coordinateSystemRotates] [163]: dX = 1.999589
[coordinateSystemRotates] [164]: dY = -0.035112
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.989058
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.147529
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.977709
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.005180
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 0.294998
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.034728
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.972529
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.329725
[coordinateSystemRotates] [176]: coordinate system rotated X = -1.972529
[coordinateSystemRotates] [177]: coordinate system rotated Y = 0.329725
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -15.932888, accumulateXY.distanceY = 0.681120
[calcDestination] [78]: destinationCoord latitude = 40.343309  destinationCoord longitude = 116.818738
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343309  longitude = 116.818738
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 169.504267
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 169.504267
[displayNodeCoordinate] [100]: 33's startCoordinate: latitude = 40.343327, longitude = 116.818734
[displayNodeCoordinate] [105]: 33's endCoordinate: latitude = 40.343309, longitude = 116.818738
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [232]: dX = 28.631886
[calcCurveXYOffset] [233]: dY = -7.719981
[coordinateSystemRotates] [162]: accumulateBranchAngle = 169.504267, accumulateBranchAngleRad = 2.958408
[coordinateSystemRotates] [163]: dX = 28.631886
[coordinateSystemRotates] [164]: dY = -7.719981
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.983268
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.182162
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -28.152831
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -1.406289
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.215650
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 7.590814
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -26.746542
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 12.806464
[coordinateSystemRotates] [176]: coordinate system rotated X = -26.746542
[coordinateSystemRotates] [177]: coordinate system rotated Y = 12.806464
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -42.679430, accumulateXY.distanceY = 13.487585
[calcDestination] [78]: destinationCoord latitude = 40.343069  destinationCoord longitude = 116.818889
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343069  longitude = 116.818889
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 139.324768
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 139.324768
[displayNodeCoordinate] [100]: 35's startCoordinate: latitude = 40.343309, longitude = 116.818738
[displayNodeCoordinate] [105]: 35's endCoordinate: latitude = 40.343069, longitude = 116.818889
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 135.072799, accumulateBranchAngleRad = 2.357465
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.708005
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.706208
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -22.667676
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -6.956531
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 22.610147
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 6.974231
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -15.711145
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 29.584377
[coordinateSystemRotates] [176]: coordinate system rotated X = -15.711145
[coordinateSystemRotates] [177]: coordinate system rotated Y = 29.584377
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -58.390574, accumulateXY.distanceY = 43.071962
[calcDestination] [78]: destinationCoord latitude = 40.342927  destinationCoord longitude = 116.819238
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.342927  longitude = 116.819238
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 100.869366
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 100.869366
[displayNodeCoordinate] [100]: 42's startCoordinate: latitude = 40.343069, longitude = 116.818889
[displayNodeCoordinate] [105]: 42's endCoordinate: latitude = 40.342927, longitude = 116.819238
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [232]: dX = 19.591495
[calcCurveXYOffset] [233]: dY = -3.475608
[coordinateSystemRotates] [162]: accumulateBranchAngle = 100.869366, accumulateBranchAngleRad = 1.760503
[coordinateSystemRotates] [163]: dX = 19.591495
[coordinateSystemRotates] [164]: dY = -3.475608
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.188570
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.982060
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -3.694376
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.413255
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 19.240018
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.655397
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.281121
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 19.895414
[coordinateSystemRotates] [176]: coordinate system rotated X = -0.281121
[coordinateSystemRotates] [177]: coordinate system rotated Y = 19.895414
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -58.671696, accumulateXY.distanceY = 62.967376
[calcDestination] [78]: destinationCoord latitude = 40.342925  destinationCoord longitude = 116.819472
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.342925  longitude = 116.819472
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 80.749700
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 80.749700
[displayNodeCoordinate] [100]: 47's startCoordinate: latitude = 40.342927, longitude = 116.819238
[displayNodeCoordinate] [105]: 47's endCoordinate: latitude = 40.342925, longitude = 116.819472
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 97.875000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [348]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [354]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [221]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [232]: dX = 4.146041
[calcCurveXYOffset] [233]: dY = -0.087854
[coordinateSystemRotates] [162]: accumulateBranchAngle = 113.348129, accumulateBranchAngleRad = 1.978298
[coordinateSystemRotates] [163]: dX = 4.146041
[coordinateSystemRotates] [164]: dY = -0.087854
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.396317
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.918114
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.643146
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.080660
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 3.806538
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.034818
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.562486
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.841356
[coordinateSystemRotates] [176]: coordinate system rotated X = -1.562486
[coordinateSystemRotates] [177]: coordinate system rotated Y = 3.841356
[calcChildSegmentCoordinate] [362]: first half of the curvature curve: accumulateXY.distanceX = -60.234182, accumulateXY.distanceY = 66.808732
[calcDestination] [78]: destinationCoord latitude = 40.342911  destinationCoord longitude = 116.819517
[calcChildSegmentCoordinate] [365]: one SampleCoord before the endCoord  latitude = 40.342911  longitude = 116.819517
[calcChildSegmentCoordinate] [368]: childNode->MapData.accumulateBranchAngle = 110.920320
[calcChildSegmentCoordinate] [370]: fixed childNode->MapData.accumulateBranchAngle = 110.920320
[calcCurveXYOffset] [221]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [232]: dX = 5.845774
[calcCurveXYOffset] [233]: dY = 0.246803
[coordinateSystemRotates] [162]: accumulateBranchAngle = 110.920320, accumulateBranchAngleRad = 1.935925
[coordinateSystemRotates] [163]: dX = 5.845774
[coordinateSystemRotates] [164]: dY = 0.246803
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.357069
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.934078
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -2.087346
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.230533
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.460408
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.088126
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.317879
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 5.372282
[coordinateSystemRotates] [176]: coordinate system rotated X = -2.317879
[coordinateSystemRotates] [177]: coordinate system rotated Y = 5.372282
[calcChildSegmentCoordinate] [378]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -62.552061, childNode->MapData.accumulateXY.distanceY = 72.181014
[calcDestination] [78]: destinationCoord latitude = 40.342890  destinationCoord longitude = 116.819581
[calcChildSegmentCoordinate] [380]: childSegment's endCoordinate latitude = 40.342890  longitude = 116.819581
[calcChildSegmentCoordinate] [383]: childNode->MapData.accumulateBranchAngle = 115.755387
[calcChildSegmentCoordinate] [385]: fixed accumulateBranchAngleHv2End = 115.755387
[displayNodeCoordinate] [100]: 52's startCoordinate: latitude = 40.342925, longitude = 116.819472
[displayNodeCoordinate] [103]: 52's SampleCoord: latitude = 40.342911, longitude = 116.819517
[displayNodeCoordinate] [105]: 52's endCoordinate: latitude = 40.342890, longitude = 116.819581
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 80.749700, accumulateBranchAngleRad = 1.409348
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.160748
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.986996
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 5.146545
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -9.722443
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 31.599926
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -1.583453
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 14.868987
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 30.016473
[coordinateSystemRotates] [176]: coordinate system rotated X = 14.868987
[coordinateSystemRotates] [177]: coordinate system rotated Y = 30.016473
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -43.802708, accumulateXY.distanceY = 92.983850
[calcDestination] [78]: destinationCoord latitude = 40.343059  destinationCoord longitude = 116.819826
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343059  longitude = 116.819826
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 46.546267
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 46.546267
[displayNodeCoordinate] [100]: 50's startCoordinate: latitude = 40.342925, longitude = 116.819472
[displayNodeCoordinate] [105]: 50's endCoordinate: latitude = 40.343059, longitude = 116.819826
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 35.875000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [348]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [354]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [221]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [232]: dX = 24.800115
[calcCurveXYOffset] [233]: dY = 9.952618
[coordinateSystemRotates] [162]: accumulateBranchAngle = 115.755387, accumulateBranchAngleRad = 2.020313
[coordinateSystemRotates] [163]: dX = 24.800115
[coordinateSystemRotates] [164]: dY = 9.952618
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.434530
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.900657
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -10.776392
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.963899
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 22.336407
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.324710
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -19.740291
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 18.011697
[coordinateSystemRotates] [176]: coordinate system rotated X = -19.740291
[coordinateSystemRotates] [177]: coordinate system rotated Y = 18.011697
[calcChildSegmentCoordinate] [362]: first half of the curvature curve: accumulateXY.distanceX = -82.292352, accumulateXY.distanceY = 90.192711
[calcDestination] [78]: destinationCoord latitude = 40.342713  destinationCoord longitude = 116.819793
[calcChildSegmentCoordinate] [365]: one SampleCoord before the endCoord  latitude = 40.342713  longitude = 116.819793
[calcChildSegmentCoordinate] [368]: childNode->MapData.accumulateBranchAngle = 159.487888
[calcChildSegmentCoordinate] [370]: fixed childNode->MapData.accumulateBranchAngle = 159.487888
[calcCurveXYOffset] [221]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [232]: dX = 8.609263
[calcCurveXYOffset] [233]: dY = 0.325564
[coordinateSystemRotates] [162]: accumulateBranchAngle = 159.487888, accumulateBranchAngleRad = 2.783589
[coordinateSystemRotates] [163]: dX = 8.609263
[coordinateSystemRotates] [164]: dY = 0.325564
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.936598
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.350405
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -8.063420
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.114079
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 3.016732
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.304923
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -8.177499
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.711809
[coordinateSystemRotates] [176]: coordinate system rotated X = -8.177499
[coordinateSystemRotates] [177]: coordinate system rotated Y = 2.711809
[calcChildSegmentCoordinate] [378]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -90.469852, childNode->MapData.accumulateXY.distanceY = 92.904520
[calcDestination] [78]: destinationCoord latitude = 40.342639  destinationCoord longitude = 116.819825
[calcChildSegmentCoordinate] [380]: childSegment's endCoordinate latitude = 40.342639  longitude = 116.819825
[calcChildSegmentCoordinate] [383]: childNode->MapData.accumulateBranchAngle = 163.819171
[calcChildSegmentCoordinate] [385]: fixed accumulateBranchAngleHv2End = 163.819171
[displayNodeCoordinate] [100]: 53's startCoordinate: latitude = 40.342890, longitude = 116.819581
[displayNodeCoordinate] [103]: 53's SampleCoord: latitude = 40.342713, longitude = 116.819793
[displayNodeCoordinate] [105]: 53's endCoordinate: latitude = 40.342639, longitude = 116.819825
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 46.546267, accumulateBranchAngleRad = 0.812386
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.687769
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.725930
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 17.267343
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -4.233743
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 18.225436
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.011179
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 21.501086
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 14.214256
[coordinateSystemRotates] [176]: coordinate system rotated X = 21.501086
[coordinateSystemRotates] [177]: coordinate system rotated Y = 14.214256
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = -22.301623, accumulateXY.distanceY = 107.198106
[calcDestination] [78]: destinationCoord latitude = 40.343252  destinationCoord longitude = 116.819993
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343252  longitude = 116.819993
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = 20.390701
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = 20.390701
[displayNodeCoordinate] [100]: 5's startCoordinate: latitude = 40.343059, longitude = 116.819826
[displayNodeCoordinate] [105]: 5's endCoordinate: latitude = 40.343252, longitude = 116.819993
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 20.390701, accumulateBranchAngleRad = 0.355885
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.937339
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.348420
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 23.533128
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -2.032042
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 8.747544
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.466712
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 25.565170
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.280833
[coordinateSystemRotates] [176]: coordinate system rotated X = 25.565170
[coordinateSystemRotates] [177]: coordinate system rotated Y = 3.280833
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 3.263547, accumulateXY.distanceY = 110.478939
[calcDestination] [78]: destinationCoord latitude = 40.343481  destinationCoord longitude = 116.820032
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343481  longitude = 116.820032
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -5.764865
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -5.764865
[displayNodeCoordinate] [100]: 9's startCoordinate: latitude = 40.343252, longitude = 116.819993
[displayNodeCoordinate] [105]: 9's endCoordinate: latitude = 40.343481, longitude = 116.820032
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [232]: dX = 32.016281
[calcCurveXYOffset] [233]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = -10.016834, accumulateBranchAngleRad = -0.174827
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.984757
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.173938
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 31.528247
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 1.713379
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -5.568832
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -9.700389
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 29.814868
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -15.269221
[coordinateSystemRotates] [176]: coordinate system rotated X = 29.814868
[coordinateSystemRotates] [177]: coordinate system rotated Y = -15.269221
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 33.078415, accumulateXY.distanceY = 95.209717
[calcDestination] [78]: destinationCoord latitude = 40.343749  destinationCoord longitude = 116.819852
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343749  longitude = 116.819852
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -44.220267
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -44.220267
[displayNodeCoordinate] [100]: 11's startCoordinate: latitude = 40.343481, longitude = 116.820032
[displayNodeCoordinate] [105]: 11's endCoordinate: latitude = 40.343749, longitude = 116.819852
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [232]: dX = 26.885681
[calcCurveXYOffset] [233]: dY = -6.745119
[coordinateSystemRotates] [162]: accumulateBranchAngle = -44.220267, accumulateBranchAngleRad = -0.771789
[coordinateSystemRotates] [163]: dX = 26.885681
[coordinateSystemRotates] [164]: dY = -6.745119
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.716664
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.697419
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 19.267999
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 4.704172
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -18.750575
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.833984
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 14.563827
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -23.584559
[coordinateSystemRotates] [176]: coordinate system rotated X = 14.563827
[coordinateSystemRotates] [177]: coordinate system rotated Y = -23.584559
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 47.642242, accumulateXY.distanceY = 71.625158
[calcDestination] [78]: destinationCoord latitude = 40.343880  destinationCoord longitude = 116.819574
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343880  longitude = 116.819574
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -72.387799
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -72.387799
[displayNodeCoordinate] [100]: 13's startCoordinate: latitude = 40.343749, longitude = 116.819852
[displayNodeCoordinate] [105]: 13's endCoordinate: latitude = 40.343880, longitude = 116.819574
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [232]: dX = 30.342789
[calcCurveXYOffset] [233]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -72.387799, accumulateBranchAngleRad = -1.263405
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.302573
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.953126
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 9.180905
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.345143
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -28.920509
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -2.649191
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.835762
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -31.569701
[coordinateSystemRotates] [176]: coordinate system rotated X = 0.835762
[coordinateSystemRotates] [177]: coordinate system rotated Y = -31.569701
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 48.478004, accumulateXY.distanceY = 40.055458
[calcDestination] [78]: destinationCoord latitude = 40.343887  destinationCoord longitude = 116.819202
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343887  longitude = 116.819202
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -104.579265
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -104.579265
[displayNodeCoordinate] [100]: 15's startCoordinate: latitude = 40.343880, longitude = 116.819574
[displayNodeCoordinate] [105]: 15's endCoordinate: latitude = 40.343887, longitude = 116.819202
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [232]: dX = 30.342789
[calcCurveXYOffset] [233]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -104.579265, accumulateBranchAngleRad = -1.825253
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.251719
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.967800
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -7.637861
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.473622
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -29.365762
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 2.203939
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -16.111483
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -27.161823
[coordinateSystemRotates] [176]: coordinate system rotated X = -16.111483
[coordinateSystemRotates] [177]: coordinate system rotated Y = -27.161823
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 32.366521, accumulateXY.distanceY = 12.893635
[calcDestination] [78]: destinationCoord latitude = 40.343743  destinationCoord longitude = 116.818882
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343743  longitude = 116.818882
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -136.770731
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -136.770731
[displayNodeCoordinate] [100]: 17's startCoordinate: latitude = 40.343887, longitude = 116.819202
[displayNodeCoordinate] [105]: 17's endCoordinate: latitude = 40.343743, longitude = 116.818882
[calcChildSegmentCoordinate] [240]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [297]: R = 56.955000
[calcChildSegmentCoordinate] [325]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [329]: KL == Kstart
[calcCurveXYOffset] [221]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [230]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [231]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [232]: dX = 25.106327
[calcCurveXYOffset] [233]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = -136.770731, accumulateBranchAngleRad = -2.387100
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.728619
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.684919
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -18.292943
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.994562
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -17.195810
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.249424
[coordinateSystemRotates] [174]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -22.287505
[coordinateSystemRotates] [175]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -12.946386
[coordinateSystemRotates] [176]: coordinate system rotated X = -22.287505
[coordinateSystemRotates] [177]: coordinate system rotated Y = -12.946386
[calcChildSegmentCoordinate] [335]: accumulateXY.distanceX = 10.079016, accumulateXY.distanceY = -0.052751
[calcDestination] [78]: destinationCoord latitude = 40.343543  destinationCoord longitude = 116.818729
[calcChildSegmentCoordinate] [337]: childSegment's endCoordinate latitude = 40.343543  longitude = 116.818729
[calcChildSegmentCoordinate] [341]: childNode->MapData.accumulateBranchAngle = -162.926297
[calcChildSegmentCoordinate] [343]: fixed childNode->MapData.accumulateBranchAngle = -162.926297
[displayNodeCoordinate] [100]: 21's startCoordinate: latitude = 40.343743, longitude = 116.818882
[displayNodeCoordinate] [105]: 21's endCoordinate: latitude = 40.343543, longitude = 116.818729
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 10.000000, curRemainLength = 14
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 10.000000, curRemainLength = 14
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 10.000000, curRemainLength = 14
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 10.000000, curRemainLength = 14
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 12.000000, curRemainLength = 12
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 12.000000, curRemainLength = 12
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 12.000000, curRemainLength = 12
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 12.000000, curRemainLength = 12
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 12.000000, curRemainLength = 12
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 12.000000, curRemainLength = 12
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5100]: curSegment's latitude = 40.343383
[TestBody] [5119]: curSegment's longitude = 116.818728
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5136]: hvHeading = 177.500000
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5147]: headingAccuracy = 1.350000
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 16.000000, curRemainLength = 8
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5100]: curSegment's latitude = 40.343305
[TestBody] [5119]: curSegment's longitude = 116.818730
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5136]: hvHeading = 168.400000
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5147]: headingAccuracy = 1.350000
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 20.000000, curRemainLength = 4
[TestBody] [5019]: curSegmentId = 16
[TestBody] [5033]: DrivedLength = 22.000000, curRemainLength = 2
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [5154]: lastSegmentId = 16, curSegmentId = 16, DrivedLength = 22.000000, curRemainLength = 2
[       OK ] PsdMapTest.useRealRecordPsdWithCurve (3 ms)
[----------] 1 test from PsdMapTest (3 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (3 ms total)
[  PASSED  ] 1 test.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename PsdModule.info --test-name PsdModule --rc lcov_branch_coverage=1 --branch-coverage'
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_dat1Ytl
Scanning . for .gcda files ...
Found 6 data files in .
using: chunkSize: 1, nchunks:6, intervalLength:0
Finished processing 6 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 23
  lines.......: 58.5% (1040 of 1777 lines)
  functions...: 70.9% (271 of 382 functions)
  branches....: 33.4% (203 of 608 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile PsdModule.info.
Found 23 entries.
Found common filename prefix "/usr/include/c++"
Generating output.
Processing file /home/zhao/Documents/Psd/src/PsdMessageDecoder.cpp
  lines=110 hit=18 functions=21 hit=8 branches=42 hit=7
Processing file 7/iostream
  lines=1 hit=1
Processing file /home/zhao/Documents/Psd/inc/PsdMap.h
  lines=1 hit=1 functions=1 hit=1
Processing file /home/zhao/Documents/Psd/src/GeometricCalc.cpp
  lines=29 hit=29 functions=1 hit=1
Processing file 7/ext/new_allocator.h
  lines=15 hit=13 functions=22 hit=17 branches=14 hit=4
Processing file 7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=4
Processing file 7/bits/ptr_traits.h
  lines=2 hit=0 functions=1 hit=0
Processing file 7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file 7/new
  lines=2 hit=2 functions=1 hit=1
Processing file /home/zhao/Documents/Psd/src/PsdMap.cpp
  lines=902 hit=609 functions=40 hit=27 branches=248 hit=130
Processing file 7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=18
Processing file /home/zhao/Documents/Psd/src/Haversine.cpp
  lines=35 hit=19 functions=8 hit=5 branches=4 hit=2
Processing file /home/zhao/Documents/Psd/src/PsdLocation.cpp
  lines=317 hit=70 functions=22 hit=5 branches=222 hit=22
Processing file 7/bits/stl_iterator.h
  lines=41 hit=37 functions=56 hit=42
Processing file 7/bits/alloc_traits.h
  lines=22 hit=15 functions=21 hit=15
Processing file 7/bits/stl_vector.h
  lines=121 hit=108 functions=79 hit=63 branches=38 hit=17
Processing file 7/bits/vector.tcc
  lines=86 hit=60 functions=9 hit=6 branches=22 hit=11
Processing file /home/zhao/Documents/Psd/inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file 7/bits/stl_algobase.h
  lines=37 hit=20 functions=33 hit=25 branches=14 hit=8
Processing file 7/bits/allocator.h
  lines=6 hit=4 functions=7 hit=5
Processing file /home/zhao/Documents/Psd/src/Location.cpp
  lines=11 hit=1 functions=5 hit=2 branches=4 hit=2
Processing file 7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file 7/bits/move.h
  lines=13 hit=9 functions=11 hit=7
Overall coverage rate:
  source files: 23
  lines.......: 58.5% (1040 of 1777 lines)
  functions...: 70.9% (271 of 382 functions)
  branches....: 33.4% (203 of 608 branches)
Message summary:
  no messages were reported
