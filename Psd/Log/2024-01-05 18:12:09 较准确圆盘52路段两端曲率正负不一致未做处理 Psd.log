Script started on 2024-01-05 18:12:09+0800
]0;zhao@zhao-virtual-machine: ~/Documents/Psd[01;32mzhao@zhao-virtual-machine[00m:[01;34m~/Documents/Psd[00m$ exit./build.sh 
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd/build
[ 12%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/GeometricCalc.cpp.o[0m
[ 25%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/Haversine.cpp.o[0m
[ 37%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/Location.cpp.o[0m
[ 50%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/PsdLocation.cpp.o[0m
[ 62%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/PsdMap.cpp.o[0m
[ 75%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/PsdMessageDecoder.cpp.o[0m
[ 87%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/gtest/src/PsdTest.cpp.o[0m
[100%] [32m[1mLinking CXX executable /home/zhao/Documents/Psd/gtest/output/bin/PsdModule[0m
[100%] Built target PsdModule
[0;32m[==========] [mRunning 1 test from 1 test suite.
[0;32m[----------] [mGlobal test environment set-up.
[0;32m[----------] [m1 test from PsdMapTest
[0;32m[ RUN      ] [mPsdMapTest.useRealRecordPsdWithCurve_phase2
open successfully
[TestBody] [5079]: hvHeading = 0.000000
[TestBody] [5090]: headingAccuracy = 2.250000
[TestBody] [4814]: preSegmentId = 54
[TestBody] [4828]: prevSegmentId = 51
[TestBody] [4841]: preSegTotalLength = 40
[TestBody] [4814]: preSegmentId = 58
[TestBody] [4828]: prevSegmentId = 54
[TestBody] [4841]: preSegTotalLength = 26
[TestBody] [4814]: preSegmentId = 16
[TestBody] [4828]: prevSegmentId = 58
[TestBody] [4841]: preSegTotalLength = 24
[TestBody] [4814]: preSegmentId = 33
[TestBody] [4828]: prevSegmentId = 16
[TestBody] [4841]: preSegTotalLength = 2
[TestBody] [4814]: preSegmentId = 35
[TestBody] [4828]: prevSegmentId = 33
[TestBody] [4841]: preSegTotalLength = 30
[TestBody] [4814]: preSegmentId = 42
[TestBody] [4828]: prevSegmentId = 35
[TestBody] [4841]: preSegTotalLength = 34
[TestBody] [4814]: preSegmentId = 47
[TestBody] [4828]: prevSegmentId = 42
[TestBody] [4841]: preSegTotalLength = 20
[TestBody] [4814]: preSegmentId = 52
[TestBody] [4828]: prevSegmentId = 47
[TestBody] [4841]: preSegTotalLength = 10
[TestBody] [4814]: preSegmentId = 53
[TestBody] [4828]: prevSegmentId = 52
[TestBody] [4841]: preSegTotalLength = 36
[TestBody] [4814]: preSegmentId = 50
[TestBody] [4828]: prevSegmentId = 47
[TestBody] [4841]: preSegTotalLength = 34
[TestBody] [4964]: curSegmentId = 54
[TestBody] [4976]: curRemainLength = 38
[TestBody] [5043]: curSegment's latitude = 40.344001
[TestBody] [5062]: curSegment's longitude = 116.818758
[TestBody] [5079]: hvHeading = 143.600000
[TestBody] [5090]: headingAccuracy = 2.250000
[TestBody] [4814]: preSegmentId = 5
[TestBody] [4828]: prevSegmentId = 50
[TestBody] [4841]: preSegTotalLength = 26
[TestBody] [4814]: preSegmentId = 9
[TestBody] [4828]: prevSegmentId = 5
[TestBody] [4841]: preSegTotalLength = 26
[TestBody] [4814]: preSegmentId = 11
[TestBody] [4828]: prevSegmentId = 9
[TestBody] [4841]: preSegTotalLength = 34
[TestBody] [4814]: preSegmentId = 13
[TestBody] [4828]: prevSegmentId = 11
[TestBody] [4841]: preSegTotalLength = 28
[TestBody] [4814]: preSegmentId = 15
[TestBody] [4828]: prevSegmentId = 13
[TestBody] [4841]: preSegTotalLength = 32
[TestBody] [4814]: preSegmentId = 17
[TestBody] [4828]: prevSegmentId = 15
[TestBody] [4841]: preSegTotalLength = 32
[TestBody] [4814]: preSegmentId = 21
[TestBody] [4828]: prevSegmentId = 17
[TestBody] [4841]: preSegTotalLength = 26
[getInstance] [51]: first new a pInstance
[mapCreate] [1536]: --------------------------mapCreate------------------------------
[createNode] [1150]: newNode = 0x55d919607170
[insertNodeInTree] [1338]: curNode = 0x55d919607170
[curIdIsInList] [1550]: curSegmentId is in list = 54
[insertNodeInTree] [1364]: count = 1
[insertNodeInTree] [1365]: current tree is = 0x55d919607170, current tree Id is = 54, curSegmentId is = 54
[calcCurSegmentCoordinate] [504]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [537]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [562]: R = 52.900776
[calcCurSegmentCoordinate] [602]: finalRemainLength = 38.000000
[calcCurSegmentCoordinate] [643]: Sa = 27.605887, Se = 10.394113
[calcCurveXYOffset] [163]: arcR = 52.900776, arcRotationAngle = 29.899388, arcRotationAngleRad = 0.521843, signCurvature = 1
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.133098
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -7.040984
[calcCurveXYOffset] [169]: dX = 26.369898
[calcCurveXYOffset] [170]: dY = 7.040984
[coordinateSystemRotates] [106]: accumulateBranchAngle = 143.600000, accumulateBranchAngleRad = 2.506293
[coordinateSystemRotates] [107]: dX = 26.369898
[coordinateSystemRotates] [108]: dY = 7.040984
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.804894
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.593419
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -21.224968
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 4.178253
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 15.648396
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -5.667244
[coordinateSystemRotates] [118]: coordinate system rotated X = -25.403220
[coordinateSystemRotates] [119]: coordinate system rotated Y = 9.981152
[calcCurSegmentCoordinate] [651]: first half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -25.403220, disHv2EndAfterRotatingCoord.distanceY = 9.981152
[calcDestination] [78]: destinationCoord latitude = 40.343773  destinationCoord longitude = 116.818876
[calcCurSegmentCoordinate] [654]: HV's one SampleCoord before the endCoord  latitude = 40.343773  longitude = 116.818876
[calcCurSegmentCoordinate] [657]: accumulateBranchAngleHv2End = 173.499388
[calcCurSegmentCoordinate] [667]: fixed accumulateBranchAngleHv2End = 173.499388
[calcCurveXYOffset] [163]: arcR = 140.500000, arcRotationAngle = 4.238710, arcRotationAngleRad = 0.073979, signCurvature = 1
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.002735
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -0.384300
[calcCurveXYOffset] [169]: dX = 10.384634
[calcCurveXYOffset] [170]: dY = 0.384300
[coordinateSystemRotates] [106]: accumulateBranchAngle = 173.499388, accumulateBranchAngleRad = 3.028136
[coordinateSystemRotates] [107]: dX = 10.384634
[coordinateSystemRotates] [108]: dY = 0.384300
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.993571
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.113214
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -10.317868
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 0.043508
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 1.175684
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -0.381829
[coordinateSystemRotates] [118]: coordinate system rotated X = -10.361376
[coordinateSystemRotates] [119]: coordinate system rotated Y = 0.793855
[calcCurSegmentCoordinate] [675]: second half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -35.764596, disHv2EndAfterRotatingCoord.distanceY = 10.775007
[calcDestination] [78]: destinationCoord latitude = 40.343680  destinationCoord longitude = 116.818885
[calcCurSegmentCoordinate] [677]: HV's endCoordinate latitude = 40.343680  longitude = 116.818885
[calcCurSegmentCoordinate] [680]: accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [690]: fixed accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [694]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [703]: accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [713]: fixed accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [718]: R = 52.900776
[calcCurSegmentCoordinate] [753]: finalRemainLength = 2.000000
[calcCurSegmentCoordinate] [792]: Sa = 0.983857, Se = 1.016143
[calcCurveXYOffset] [163]: arcR = 52.900776, arcRotationAngle = 1.065596, arcRotationAngleRad = 0.018598, signCurvature = 1
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.000173
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -0.009149
[calcCurveXYOffset] [169]: dX = 0.983801
[calcCurveXYOffset] [170]: dY = 0.009149
[coordinateSystemRotates] [106]: accumulateBranchAngle = 323.600000, accumulateBranchAngleRad = 5.647885
[coordinateSystemRotates] [107]: dX = 0.983801
[coordinateSystemRotates] [108]: dY = 0.983801
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.804894
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.593419
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [118]: coordinate system rotated X = 1.375661
[coordinateSystemRotates] [119]: coordinate system rotated Y = 0.208049
[calcCurSegmentCoordinate] [800]: first half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 1.375661, disHv2StartAfterRotatingCoord.distanceY = 0.208049
[calcDestination] [78]: destinationCoord latitude = 40.344013  destinationCoord longitude = 116.818760
[calcCurSegmentCoordinate] [803]: HV's one SampleCoord before the startCoord latitude = 40.344013  longitude = 116.818760
[calcCurSegmentCoordinate] [806]: accumulateBranchAngleHv2Start = 322.534404
[calcCurSegmentCoordinate] [816]: fixed accumulateBranchAngleHv2Start = 322.534404
[calcCurveXYOffset] [163]: arcR = 51.220000, arcRotationAngle = 1.136679, arcRotationAngleRad = 0.019839, signCurvature = 1
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.000197
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -0.010079
[calcCurveXYOffset] [169]: dX = 1.016076
[calcCurveXYOffset] [170]: dY = 0.010079
[coordinateSystemRotates] [106]: accumulateBranchAngle = 322.534404, accumulateBranchAngleRad = 5.629287
[coordinateSystemRotates] [107]: dX = 1.016076
[coordinateSystemRotates] [108]: dY = 0.010079
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.793719
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.608285
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 0.806478
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -0.006131
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -0.618064
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 0.008000
[coordinateSystemRotates] [118]: coordinate system rotated X = 0.812609
[coordinateSystemRotates] [119]: coordinate system rotated Y = -0.610064
[calcCurSegmentCoordinate] [823]: second half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 2.188271, disHv2StartAfterRotatingCoord.distanceY = -0.402014
[calcDestination] [78]: destinationCoord latitude = 40.344021  destinationCoord longitude = 116.818753
[calcCurSegmentCoordinate] [825]: HV's startCoordinate latitude = 40.344021  longitude = 116.818753
[calcCurSegmentCoordinate] [828]: accumulateBranchAngleHv2Start = 321.397725
[calcCurSegmentCoordinate] [838]: fixed accumulateBranchAngleHv2Start = 321.397725
[insertNodeInTree] [1380]: 54's startCoordinate: latitude = 40.344021, longitude = 116.818753
[insertNodeInTree] [1383]: 54's SampleCoord: latitude = 40.344013, longitude = 116.818760
[insertNodeInTree] [1383]: 54's SampleCoord: latitude = 40.343773, longitude = 116.818876
[insertNodeInTree] [1385]: 54's endCoordinate: latitude = 40.343680, longitude = 116.818885
[insertNode] [1214]: (*it)->preSegmentId = 54's segIsInTree = 1
[findNodeById] [891]: result = (nil)
[insertNode] [1286]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[insertNode] [1331]: goto check the next segment info from vPsdMap
[insertNode] [1214]: (*it)->preSegmentId = 58's segIsInTree = 0
[insertNode] [1286]: tempNode is = 0x55d919607170, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607230
[insertChildNode] [1158]: childNode = 0x55d919607230
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 26.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [169]: dX = 25.106327
[calcCurveXYOffset] [170]: dY = -5.832164
[coordinateSystemRotates] [106]: accumulateBranchAngle = 213.171173, accumulateBranchAngleRad = 3.720539
[coordinateSystemRotates] [107]: dX = 25.106327
[coordinateSystemRotates] [108]: dY = -5.832164
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.837040
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.547142
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -21.014992
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 3.191023
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -13.736730
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 4.881753
[coordinateSystemRotates] [118]: coordinate system rotated X = -24.206015
[coordinateSystemRotates] [119]: coordinate system rotated Y = -8.854977
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -59.970611, accumulateXY.distanceY = 1.920030
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818781
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818781
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 187.015607
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 187.015607
[insertNode] [1307]: childNode's preSegmentId = 58
[insertNode] [1315]: 58's startCoordinate: latitude = 40.343680, longitude = 116.818885
[insertNode] [1320]: 58's endCoordinate: latitude = 40.343462, longitude = 116.818781
[insertNode] [1214]: (*it)->preSegmentId = 16's segIsInTree = 0
[findNodeById] [886]: result = 0x55d919607230
[insertNode] [1286]: tempNode is = 0x55d919607230, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d9196072f0
[insertChildNode] [1158]: childNode = 0x55d9196072f0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 24.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [169]: dX = 23.296017
[calcCurveXYOffset] [170]: dY = -4.982242
[coordinateSystemRotates] [106]: accumulateBranchAngle = 187.015607, accumulateBranchAngleRad = 3.264038
[coordinateSystemRotates] [107]: dX = 23.296017
[coordinateSystemRotates] [108]: dY = -4.982242
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.992513
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.122140
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -23.121598
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 0.608530
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -2.845369
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 4.944939
[coordinateSystemRotates] [118]: coordinate system rotated X = -23.730127
[coordinateSystemRotates] [119]: coordinate system rotated Y = 2.099571
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -83.700738, accumulateXY.distanceY = 4.019600
[calcDestination] [78]: destinationCoord latitude = 40.343249  destinationCoord longitude = 116.818805
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343249  longitude = 116.818805
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 162.872007
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 162.872007
[insertNode] [1307]: childNode's preSegmentId = 16
[insertNode] [1315]: 16's startCoordinate: latitude = 40.343462, longitude = 116.818781
[insertNode] [1320]: 16's endCoordinate: latitude = 40.343249, longitude = 116.818805
[insertNode] [1214]: (*it)->preSegmentId = 33's segIsInTree = 0
[findNodeById] [886]: result = 0x55d9196072f0
[findNodeById] [886]: result = 0x55d9196072f0
[insertNode] [1286]: tempNode is = 0x55d9196072f0, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d9196073b0
[insertChildNode] [1158]: childNode = 0x55d9196073b0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 2.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [169]: dX = 1.999589
[calcCurveXYOffset] [170]: dY = -0.035112
[coordinateSystemRotates] [106]: accumulateBranchAngle = 162.872007, accumulateBranchAngleRad = 2.842653
[coordinateSystemRotates] [107]: dX = 1.999589
[coordinateSystemRotates] [108]: dY = -0.035112
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.955649
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.294507
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -1.910906
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -0.010341
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 0.588893
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 0.033555
[coordinateSystemRotates] [118]: coordinate system rotated X = -1.900565
[coordinateSystemRotates] [119]: coordinate system rotated Y = 0.622448
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -85.601303, accumulateXY.distanceY = 4.642048
[calcDestination] [78]: destinationCoord latitude = 40.343232  destinationCoord longitude = 116.818813
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343232  longitude = 116.818813
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 160.860041
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 160.860041
[insertNode] [1307]: childNode's preSegmentId = 33
[insertNode] [1315]: 33's startCoordinate: latitude = 40.343249, longitude = 116.818805
[insertNode] [1320]: 33's endCoordinate: latitude = 40.343232, longitude = 116.818813
[insertNode] [1214]: (*it)->preSegmentId = 35's segIsInTree = 0
[findNodeById] [886]: result = 0x55d9196073b0
[findNodeById] [886]: result = 0x55d9196073b0
[findNodeById] [886]: result = 0x55d9196073b0
[insertNode] [1286]: tempNode is = 0x55d9196073b0, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607470
[insertChildNode] [1158]: childNode = 0x55d919607470
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 30.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [169]: dX = 28.631886
[calcCurveXYOffset] [170]: dY = -7.719981
[coordinateSystemRotates] [106]: accumulateBranchAngle = 160.860041, accumulateBranchAngleRad = 2.807537
[coordinateSystemRotates] [107]: dX = 28.631886
[coordinateSystemRotates] [108]: dY = -7.719981
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.944720
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.327877
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -27.049129
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -2.531203
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 9.387733
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 7.293224
[coordinateSystemRotates] [118]: coordinate system rotated X = -24.517926
[coordinateSystemRotates] [119]: coordinate system rotated Y = 16.680957
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -110.119230, accumulateXY.distanceY = 21.323005
[calcDestination] [78]: destinationCoord latitude = 40.343012  destinationCoord longitude = 116.819009
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343012  longitude = 116.819009
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 130.680542
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 130.680542
[insertNode] [1307]: childNode's preSegmentId = 35
[insertNode] [1315]: 35's startCoordinate: latitude = 40.343232, longitude = 116.818813
[insertNode] [1320]: 35's endCoordinate: latitude = 40.343012, longitude = 116.819009
[insertNode] [1214]: (*it)->preSegmentId = 42's segIsInTree = 0
[findNodeById] [886]: result = 0x55d919607470
[findNodeById] [886]: result = 0x55d919607470
[findNodeById] [886]: result = 0x55d919607470
[findNodeById] [886]: result = 0x55d919607470
[insertNode] [1286]: tempNode is = 0x55d919607470, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607530
[insertChildNode] [1158]: childNode = 0x55d919607530
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 34.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [169]: dX = 32.016281
[calcCurveXYOffset] [170]: dY = -9.850544
[coordinateSystemRotates] [106]: accumulateBranchAngle = 126.428573, accumulateBranchAngleRad = 2.206595
[coordinateSystemRotates] [107]: dX = 32.016281
[coordinateSystemRotates] [108]: dY = -9.850544
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.593820
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.804598
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -19.011914
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -7.925726
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 25.760228
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 5.849452
[coordinateSystemRotates] [118]: coordinate system rotated X = -11.086189
[coordinateSystemRotates] [119]: coordinate system rotated Y = 31.609680
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -121.205418, accumulateXY.distanceY = 52.932685
[calcDestination] [78]: destinationCoord latitude = 40.342912  destinationCoord longitude = 116.819382
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.342912  longitude = 116.819382
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 92.225140
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 92.225140
[insertNode] [1307]: childNode's preSegmentId = 42
[insertNode] [1315]: 42's startCoordinate: latitude = 40.343012, longitude = 116.819009
[insertNode] [1320]: 42's endCoordinate: latitude = 40.342912, longitude = 116.819382
[insertNode] [1214]: (*it)->preSegmentId = 47's segIsInTree = 0
[findNodeById] [886]: result = 0x55d919607530
[findNodeById] [886]: result = 0x55d919607530
[findNodeById] [886]: result = 0x55d919607530
[findNodeById] [886]: result = 0x55d919607530
[findNodeById] [886]: result = 0x55d919607530
[insertNode] [1286]: tempNode is = 0x55d919607530, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d9196075f0
[insertChildNode] [1158]: childNode = 0x55d9196075f0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 20.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [169]: dX = 19.591495
[calcCurveXYOffset] [170]: dY = -3.475608
[coordinateSystemRotates] [106]: accumulateBranchAngle = 92.225140, accumulateBranchAngleRad = 1.609632
[coordinateSystemRotates] [107]: dX = 19.591495
[coordinateSystemRotates] [108]: dY = -3.475608
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.038826
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.999246
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -0.760664
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -3.472988
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 19.576723
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 0.134945
[coordinateSystemRotates] [118]: coordinate system rotated X = 2.712323
[coordinateSystemRotates] [119]: coordinate system rotated Y = 19.711668
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -118.493095, accumulateXY.distanceY = 72.644353
[calcDestination] [78]: destinationCoord latitude = 40.342937  destinationCoord longitude = 116.819614
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.342937  longitude = 116.819614
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 72.105474
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 72.105474
[insertNode] [1307]: childNode's preSegmentId = 47
[insertNode] [1315]: 47's startCoordinate: latitude = 40.342912, longitude = 116.819382
[insertNode] [1320]: 47's endCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1214]: (*it)->preSegmentId = 52's segIsInTree = 0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[insertNode] [1286]: tempNode is = 0x55d9196075f0, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d9196076b0
[insertChildNode] [1158]: childNode = 0x55d9196076b0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 97.875000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [310]: Sa = -24.318022, Se = 34.318022
[calcCurveXYOffset] [163]: arcR = 97.875000, arcRotationAngle = -14.235709, arcRotationAngleRad = -0.248460, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.030708
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -3.005519
[calcCurveXYOffset] [169]: dX = -24.068592
[calcCurveXYOffset] [170]: dY = -3.005519
[coordinateSystemRotates] [106]: accumulateBranchAngle = 104.703903, accumulateBranchAngleRad = 1.827428
[coordinateSystemRotates] [107]: dX = -24.068592
[coordinateSystemRotates] [108]: dY = -3.005519
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.253824
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.967250
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 6.109182
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -2.907089
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -23.280357
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 0.762872
[coordinateSystemRotates] [118]: coordinate system rotated X = 9.016271
[coordinateSystemRotates] [119]: coordinate system rotated Y = -22.517485
[calcChildSegmentCoordinate] [318]: first half of the curvature curve: accumulateXY.distanceX = -109.476824, accumulateXY.distanceY = 50.126868
[calcDestination] [78]: destinationCoord latitude = 40.343018  destinationCoord longitude = 116.819349
[calcChildSegmentCoordinate] [321]: one SampleCoord before the endCoord  latitude = 40.343018  longitude = 116.819349
[calcChildSegmentCoordinate] [324]: childNode->MapData.accumulateBranchAngle = 118.939612
[calcChildSegmentCoordinate] [334]: fixed childNode->MapData.accumulateBranchAngle = 118.939612
[calcCurveXYOffset] [163]: arcR = 69.355000, arcRotationAngle = 28.350917, arcRotationAngleRad = 0.494817, signCurvature = 1
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.119944
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -8.318737
[calcCurveXYOffset] [169]: dX = 32.934642
[calcCurveXYOffset] [170]: dY = 8.318737
[coordinateSystemRotates] [106]: accumulateBranchAngle = 118.939612, accumulateBranchAngleRad = 2.075888
[coordinateSystemRotates] [107]: dX = 32.934642
[coordinateSystemRotates] [108]: dY = 8.318737
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.483888
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.875130
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -15.936662
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 7.279978
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 28.822099
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -4.025333
[coordinateSystemRotates] [118]: coordinate system rotated X = -23.216640
[coordinateSystemRotates] [119]: coordinate system rotated Y = 24.796766
[calcChildSegmentCoordinate] [342]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -132.693464, childNode->MapData.accumulateXY.distanceY = 74.923634
[calcDestination] [78]: destinationCoord latitude = 40.342809  destinationCoord longitude = 116.819641
[calcChildSegmentCoordinate] [344]: childSegment's endCoordinate latitude = 40.342809  longitude = 116.819641
[calcChildSegmentCoordinate] [347]: childNode->MapData.accumulateBranchAngle = 147.290529
[calcChildSegmentCoordinate] [357]: fixed accumulateBranchAngleHv2End = 147.290529
[insertNode] [1307]: childNode's preSegmentId = 52
[insertNode] [1315]: 52's startCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1318]: 52's SampleCoord: latitude = 40.343018, longitude = 116.819349
[insertNode] [1320]: 52's endCoordinate: latitude = 40.342809, longitude = 116.819641
[insertNode] [1214]: (*it)->preSegmentId = 53's segIsInTree = 0
[findNodeById] [886]: result = 0x55d9196076b0
[findNodeById] [886]: result = 0x55d9196076b0
[findNodeById] [886]: result = 0x55d9196076b0
[findNodeById] [886]: result = 0x55d9196076b0
[findNodeById] [886]: result = 0x55d9196076b0
[findNodeById] [886]: result = 0x55d9196076b0
[findNodeById] [886]: result = 0x55d9196076b0
[insertNode] [1286]: tempNode is = 0x55d9196076b0, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607770
[insertChildNode] [1158]: childNode = 0x55d919607770
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 35.875000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [310]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [163]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [169]: dX = 24.800115
[calcCurveXYOffset] [170]: dY = 9.952618
[coordinateSystemRotates] [106]: accumulateBranchAngle = 147.290529, accumulateBranchAngleRad = 2.570705
[coordinateSystemRotates] [107]: dX = 24.800115
[coordinateSystemRotates] [108]: dY = 9.952618
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.841421
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.540379
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -20.867349
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 5.378190
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 13.401472
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -8.374346
[coordinateSystemRotates] [118]: coordinate system rotated X = -26.245539
[coordinateSystemRotates] [119]: coordinate system rotated Y = 5.027126
[calcChildSegmentCoordinate] [318]: first half of the curvature curve: accumulateXY.distanceX = -158.939003, accumulateXY.distanceY = 79.950760
[calcDestination] [78]: destinationCoord latitude = 40.342573  destinationCoord longitude = 116.819700
[calcChildSegmentCoordinate] [321]: one SampleCoord before the endCoord  latitude = 40.342573  longitude = 116.819700
[calcChildSegmentCoordinate] [324]: childNode->MapData.accumulateBranchAngle = 191.023030
[calcChildSegmentCoordinate] [334]: fixed childNode->MapData.accumulateBranchAngle = 191.023030
[calcCurveXYOffset] [163]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [169]: dX = 8.609263
[calcCurveXYOffset] [170]: dY = 0.325564
[coordinateSystemRotates] [106]: accumulateBranchAngle = 191.023030, accumulateBranchAngleRad = 3.333981
[coordinateSystemRotates] [107]: dX = 8.609263
[coordinateSystemRotates] [108]: dY = 0.325564
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.981550
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.191204
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -8.450426
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -0.062249
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -1.646122
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -0.319558
[coordinateSystemRotates] [118]: coordinate system rotated X = -8.388177
[coordinateSystemRotates] [119]: coordinate system rotated Y = -1.965679
[calcChildSegmentCoordinate] [342]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -167.327180, childNode->MapData.accumulateXY.distanceY = 77.985081
[calcDestination] [78]: destinationCoord latitude = 40.342498  destinationCoord longitude = 116.819677
[calcChildSegmentCoordinate] [344]: childSegment's endCoordinate latitude = 40.342498  longitude = 116.819677
[calcChildSegmentCoordinate] [347]: childNode->MapData.accumulateBranchAngle = 195.354313
[calcChildSegmentCoordinate] [357]: fixed accumulateBranchAngleHv2End = 195.354313
[insertNode] [1307]: childNode's preSegmentId = 53
[insertNode] [1315]: 53's startCoordinate: latitude = 40.342809, longitude = 116.819641
[insertNode] [1318]: 53's SampleCoord: latitude = 40.342573, longitude = 116.819700
[insertNode] [1320]: 53's endCoordinate: latitude = 40.342498, longitude = 116.819677
[insertNode] [1214]: (*it)->preSegmentId = 50's segIsInTree = 0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[findNodeById] [886]: result = 0x55d9196075f0
[insertNode] [1286]: tempNode is = 0x55d9196075f0, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607830
[insertChildNode] [1158]: childNode = 0x55d919607830
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 34.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [169]: dX = 32.016281
[calcCurveXYOffset] [170]: dY = -9.850544
[coordinateSystemRotates] [106]: accumulateBranchAngle = 72.105474, accumulateBranchAngleRad = 1.258478
[coordinateSystemRotates] [107]: dX = 32.016281
[coordinateSystemRotates] [108]: dY = -9.850544
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.307266
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.951624
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 9.837505
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -9.374012
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 30.467454
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -3.026734
[coordinateSystemRotates] [118]: coordinate system rotated X = 19.211517
[coordinateSystemRotates] [119]: coordinate system rotated Y = 27.440719
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -99.281578, accumulateXY.distanceY = 100.085072
[calcDestination] [78]: destinationCoord latitude = 40.343109  destinationCoord longitude = 116.819938
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343109  longitude = 116.819938
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 37.902041
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 37.902041
[insertNode] [1307]: childNode's preSegmentId = 50
[insertNode] [1315]: 50's startCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1320]: 50's endCoordinate: latitude = 40.343109, longitude = 116.819938
[insertNode] [1214]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [891]: result = (nil)
[findNodeById] [891]: result = (nil)
[findNodeById] [886]: result = 0x55d919607830
[findNodeById] [886]: result = 0x55d919607830
[findNodeById] [886]: result = 0x55d919607830
[findNodeById] [886]: result = 0x55d919607830
[findNodeById] [886]: result = 0x55d919607830
[findNodeById] [886]: result = 0x55d919607830
[findNodeById] [886]: result = 0x55d919607830
[insertNode] [1286]: tempNode is = 0x55d919607830, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d9196078f0
[insertChildNode] [1158]: childNode = 0x55d9196078f0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 26.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [169]: dX = 25.106327
[calcCurveXYOffset] [170]: dY = -5.832164
[coordinateSystemRotates] [106]: accumulateBranchAngle = 37.902041, accumulateBranchAngleRad = 0.661515
[coordinateSystemRotates] [107]: dX = 25.106327
[coordinateSystemRotates] [108]: dY = -5.832164
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.789062
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.614313
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 19.810453
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -3.582776
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 15.423151
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -4.601940
[coordinateSystemRotates] [118]: coordinate system rotated X = 23.393229
[coordinateSystemRotates] [119]: coordinate system rotated Y = 10.821211
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -75.888349, accumulateXY.distanceY = 110.906283
[calcDestination] [78]: destinationCoord latitude = 40.343319  destinationCoord longitude = 116.820065
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343319  longitude = 116.820065
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = 11.746475
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = 11.746475
[insertNode] [1307]: childNode's preSegmentId = 5
[insertNode] [1315]: 5's startCoordinate: latitude = 40.343109, longitude = 116.819938
[insertNode] [1320]: 5's endCoordinate: latitude = 40.343319, longitude = 116.820065
[insertNode] [1214]: (*it)->preSegmentId = 9's segIsInTree = 0
[findNodeById] [891]: result = (nil)
[findNodeById] [891]: result = (nil)
[findNodeById] [886]: result = 0x55d9196078f0
[findNodeById] [886]: result = 0x55d9196078f0
[findNodeById] [886]: result = 0x55d9196078f0
[findNodeById] [886]: result = 0x55d9196078f0
[findNodeById] [886]: result = 0x55d9196078f0
[findNodeById] [886]: result = 0x55d9196078f0
[findNodeById] [886]: result = 0x55d9196078f0
[findNodeById] [886]: result = 0x55d9196078f0
[insertNode] [1286]: tempNode is = 0x55d9196078f0, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d9196079b0
[insertChildNode] [1158]: childNode = 0x55d9196079b0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 26.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [169]: dX = 25.106327
[calcCurveXYOffset] [170]: dY = -5.832164
[coordinateSystemRotates] [106]: accumulateBranchAngle = 11.746475, accumulateBranchAngleRad = 0.205015
[coordinateSystemRotates] [107]: dX = 25.106327
[coordinateSystemRotates] [108]: dY = -5.832164
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.979058
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = 0.203582
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 24.580550
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = -1.187321
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = 5.111184
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -5.710027
[coordinateSystemRotates] [118]: coordinate system rotated X = 25.767871
[coordinateSystemRotates] [119]: coordinate system rotated Y = -0.598843
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -50.120478, accumulateXY.distanceY = 110.307440
[calcDestination] [78]: destinationCoord latitude = 40.343551  destinationCoord longitude = 116.820058
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343551  longitude = 116.820058
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = -14.409091
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = -14.409091
[insertNode] [1307]: childNode's preSegmentId = 9
[insertNode] [1315]: 9's startCoordinate: latitude = 40.343319, longitude = 116.820065
[insertNode] [1320]: 9's endCoordinate: latitude = 40.343551, longitude = 116.820058
[insertNode] [1214]: (*it)->preSegmentId = 11's segIsInTree = 0
[findNodeById] [891]: result = (nil)
[findNodeById] [891]: result = (nil)
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[findNodeById] [886]: result = 0x55d9196079b0
[insertNode] [1286]: tempNode is = 0x55d9196079b0, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607a70
[insertChildNode] [1158]: childNode = 0x55d919607a70
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 34.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [169]: dX = 32.016281
[calcCurveXYOffset] [170]: dY = -9.850544
[coordinateSystemRotates] [106]: accumulateBranchAngle = -18.661060, accumulateBranchAngleRad = -0.325697
[coordinateSystemRotates] [107]: dX = 32.016281
[coordinateSystemRotates] [108]: dY = -9.850544
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.947428
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.319969
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 30.333120
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 3.151870
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -10.244223
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -9.332681
[coordinateSystemRotates] [118]: coordinate system rotated X = 27.181249
[coordinateSystemRotates] [119]: coordinate system rotated Y = -19.576903
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -22.939229, accumulateXY.distanceY = 90.730537
[calcDestination] [78]: destinationCoord latitude = 40.343795  destinationCoord longitude = 116.819827
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343795  longitude = 116.819827
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = -52.864493
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = -52.864493
[insertNode] [1307]: childNode's preSegmentId = 11
[insertNode] [1315]: 11's startCoordinate: latitude = 40.343551, longitude = 116.820058
[insertNode] [1320]: 11's endCoordinate: latitude = 40.343795, longitude = 116.819827
[insertNode] [1214]: (*it)->preSegmentId = 13's segIsInTree = 0
[findNodeById] [891]: result = (nil)
[findNodeById] [891]: result = (nil)
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[findNodeById] [886]: result = 0x55d919607a70
[insertNode] [1286]: tempNode is = 0x55d919607a70, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607b30
[insertChildNode] [1158]: childNode = 0x55d919607b30
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 28.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [169]: dX = 26.885681
[calcCurveXYOffset] [170]: dY = -6.745119
[coordinateSystemRotates] [106]: accumulateBranchAngle = -52.864493, accumulateBranchAngleRad = -0.922659
[coordinateSystemRotates] [107]: dX = 26.885681
[coordinateSystemRotates] [108]: dY = -6.745119
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.603702
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.797210
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 16.230944
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 5.377276
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -21.433533
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -4.072043
[coordinateSystemRotates] [118]: coordinate system rotated X = 10.853668
[coordinateSystemRotates] [119]: coordinate system rotated Y = -25.505575
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -12.085561, accumulateXY.distanceY = 65.224961
[calcDestination] [78]: destinationCoord latitude = 40.343892  destinationCoord longitude = 116.819527
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343892  longitude = 116.819527
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = -81.032025
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = -81.032025
[insertNode] [1307]: childNode's preSegmentId = 13
[insertNode] [1315]: 13's startCoordinate: latitude = 40.343795, longitude = 116.819827
[insertNode] [1320]: 13's endCoordinate: latitude = 40.343892, longitude = 116.819527
[insertNode] [1214]: (*it)->preSegmentId = 15's segIsInTree = 0
[findNodeById] [891]: result = (nil)
[findNodeById] [891]: result = (nil)
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[findNodeById] [886]: result = 0x55d919607b30
[insertNode] [1286]: tempNode is = 0x55d919607b30, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607c10
[insertChildNode] [1158]: childNode = 0x55d919607c10
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 32.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [169]: dX = 30.342789
[calcCurveXYOffset] [170]: dY = -8.755548
[coordinateSystemRotates] [106]: accumulateBranchAngle = -81.032025, accumulateBranchAngleRad = -1.414276
[coordinateSystemRotates] [107]: dX = 30.342789
[coordinateSystemRotates] [108]: dY = -8.755548
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = 0.155882
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.987776
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = 4.729906
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 8.648517
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -29.971868
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = -1.364836
[coordinateSystemRotates] [118]: coordinate system rotated X = -3.918611
[coordinateSystemRotates] [119]: coordinate system rotated Y = -31.336703
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -16.004173, accumulateXY.distanceY = 33.888258
[calcDestination] [78]: destinationCoord latitude = 40.343857  destinationCoord longitude = 116.819157
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343857  longitude = 116.819157
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = -113.223491
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = -113.223491
[insertNode] [1307]: childNode's preSegmentId = 15
[insertNode] [1315]: 15's startCoordinate: latitude = 40.343892, longitude = 116.819527
[insertNode] [1320]: 15's endCoordinate: latitude = 40.343857, longitude = 116.819157
[insertNode] [1214]: (*it)->preSegmentId = 17's segIsInTree = 0
[findNodeById] [891]: result = (nil)
[findNodeById] [891]: result = (nil)
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[findNodeById] [886]: result = 0x55d919607c10
[insertNode] [1286]: tempNode is = 0x55d919607c10, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607cf0
[insertChildNode] [1158]: childNode = 0x55d919607cf0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 32.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [169]: dX = 30.342789
[calcCurveXYOffset] [170]: dY = -8.755548
[coordinateSystemRotates] [106]: accumulateBranchAngle = -113.223491, accumulateBranchAngleRad = -1.976123
[coordinateSystemRotates] [107]: dX = 30.342789
[coordinateSystemRotates] [108]: dY = -8.755548
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.394319
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.918974
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -11.964730
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 8.046119
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -27.884227
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 3.452477
[coordinateSystemRotates] [118]: coordinate system rotated X = -20.010849
[coordinateSystemRotates] [119]: coordinate system rotated Y = -24.431750
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -36.015021, accumulateXY.distanceY = 9.456508
[calcDestination] [78]: destinationCoord latitude = 40.343677  destinationCoord longitude = 116.818869
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343677  longitude = 116.818869
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = -145.414957
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = -145.414957
[insertNode] [1307]: childNode's preSegmentId = 17
[insertNode] [1315]: 17's startCoordinate: latitude = 40.343857, longitude = 116.819157
[insertNode] [1320]: 17's endCoordinate: latitude = 40.343677, longitude = 116.818869
[insertNode] [1214]: (*it)->preSegmentId = 21's segIsInTree = 0
[findNodeById] [891]: result = (nil)
[findNodeById] [891]: result = (nil)
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[findNodeById] [886]: result = 0x55d919607cf0
[insertNode] [1286]: tempNode is = 0x55d919607cf0, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 0
[createNode] [1150]: newNode = 0x55d919607dd0
[insertChildNode] [1158]: childNode = 0x55d919607dd0
[calcChildSegmentCoordinate] [177]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [234]: R = 56.955000
[calcChildSegmentCoordinate] [270]: finalRemainLength = 26.000000
[calcCurveXYOffset] [163]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [167]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [168]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [169]: dX = 25.106327
[calcCurveXYOffset] [170]: dY = -5.832164
[coordinateSystemRotates] [106]: accumulateBranchAngle = -145.414957, accumulateBranchAngleRad = -2.537970
[coordinateSystemRotates] [107]: dX = 25.106327
[coordinateSystemRotates] [108]: dY = -5.832164
[coordinateSystemRotates] [109]: cos(accumulateBranchAngleRad) = -0.823285
[coordinateSystemRotates] [110]: sin(accumulateBranchAngleRad) = -0.567629
[coordinateSystemRotates] [111]: distanceX * cos(accumulateBranchAngleRad) = -20.669652
[coordinateSystemRotates] [112]: distanceY * sin(accumulateBranchAngleRad) = 3.310504
[coordinateSystemRotates] [113]: distanceX * sin(accumulateBranchAngleRad) = -14.251075
[coordinateSystemRotates] [114]: distanceY * cos(accumulateBranchAngleRad) = 4.801531
[coordinateSystemRotates] [118]: coordinate system rotated X = -23.980156
[coordinateSystemRotates] [119]: coordinate system rotated Y = -9.449545
[calcChildSegmentCoordinate] [280]: accumulateXY.distanceX = -59.995178, accumulateXY.distanceY = 0.006963
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818758
[calcChildSegmentCoordinate] [282]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818758
[calcChildSegmentCoordinate] [286]: childNode->MapData.accumulateBranchAngle = -171.570523
[calcChildSegmentCoordinate] [296]: fixed childNode->MapData.accumulateBranchAngle = -171.570523
[insertNode] [1307]: childNode's preSegmentId = 21
[insertNode] [1315]: 21's startCoordinate: latitude = 40.343677, longitude = 116.818869
[insertNode] [1320]: 21's endCoordinate: latitude = 40.343462, longitude = 116.818758
[0;32m[       OK ] [mPsdMapTest.useRealRecordPsdWithCurve_phase2 (10 ms)
[0;32m[----------] [m1 test from PsdMapTest (10 ms total)

[0;32m[----------] [mGlobal test environment tear-down
[0;32m[==========] [m1 test from 1 test suite ran. (10 ms total)
[0;32m[  PASSED  ] [m1 test.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename PsdModule.info --test-name PsdModule --rc lcov_branch_coverage=1 --branch-coverage'
geninfo: WARNING: (deprecated) RC option 'lcov_branch_coverage' is deprecated.  Consider using 'branch_coverage. instead.  (Backward-compatible support will be removed in the future
	(use "geninfo --ignore-errors deprecated,deprecated ..." to suppress this warning)
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_datNyV3
Scanning . for .gcda files ...
Found 6 data files in .
using: chunkSize: 1, nchunks:6, intervalLength:0
Finished processing 6 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 23
  lines.......: 37.2% (658 of 1768 lines)
  functions...: 63.3% (240 of 379 functions)
  branches....: 20.1% (130 of 648 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile PsdModule.info.
Found 23 entries.
Found common filename prefix "/usr/include/c++"
Generating output.
Processing file /home/zhao/Documents/Psd/src/PsdMap.cpp
  lines=893 hit=353 functions=37 hit=16 branches=288 hit=85
Processing file 7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file 7/new
  lines=2 hit=2 functions=1 hit=1
Processing file /home/zhao/Documents/Psd/src/PsdMessageDecoder.cpp
  lines=110 hit=14 functions=21 hit=7 branches=42 hit=4
Processing file 7/bits/vector.tcc
  lines=86 hit=53 functions=9 hit=6 branches=22 hit=8
Processing file 7/bits/move.h
  lines=13 hit=9 functions=11 hit=7
Processing file /home/zhao/Documents/Psd/src/Location.cpp
  lines=11 hit=1 functions=5 hit=2 branches=4 hit=2
Processing file /home/zhao/Documents/Psd/inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file 7/bits/alloc_traits.h
  lines=22 hit=15 functions=21 hit=15
Processing file 7/bits/stl_iterator.h
  lines=41 hit=30 functions=56 hit=38
Processing file 7/bits/stl_algobase.h
  lines=37 hit=20 functions=33 hit=22 branches=14 hit=8
Processing file /home/zhao/Documents/Psd/src/PsdLocation.cpp
  lines=317 hit=1 functions=22 hit=2 branches=222 hit=2
Processing file 7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=15
Processing file 7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=4
Processing file /home/zhao/Documents/Psd/src/GeometricCalc.cpp
  lines=29 hit=0 functions=1 hit=0
Processing file 7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file /home/zhao/Documents/Psd/inc/PsdMap.h
  lines=1 hit=1 functions=1 hit=1
Processing file /home/zhao/Documents/Psd/src/Haversine.cpp
  lines=35 hit=19 functions=8 hit=5 branches=4 hit=2
Processing file 7/bits/ptr_traits.h
  lines=2 hit=0 functions=1 hit=0
Processing file 7/ext/new_allocator.h
  lines=15 hit=13 functions=22 hit=17 branches=14 hit=4
Processing file 7/bits/stl_vector.h
  lines=121 hit=98 functions=79 hit=58 branches=38 hit=15
Processing file 7/bits/allocator.h
  lines=6 hit=4 functions=7 hit=5
Processing file 7/iostream
  lines=1 hit=1
Overall coverage rate:
  source files: 23
  lines.......: 37.2% (658 of 1768 lines)
  functions...: 63.3% (240 of 379 functions)
  branches....: 20.1% (130 of 648 branches)
Message summary:
  no messages were reported
]0;zhao@zhao-virtual-machine: ~/Documents/Psd[01;32mzhao@zhao-virtual-machine[00m:[01;34m~/Documents/Psd[00m$ ./build.sh [7Pexit
exit

Script done on 2024-01-05 18:12:16+0800
