-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd/build
[ 12%] Building CXX object CMakeFiles/PsdModule.dir/src/GeometricCalc.cpp.o
[ 25%] Building CXX object CMakeFiles/PsdModule.dir/src/Haversine.cpp.o
[ 37%] Building CXX object CMakeFiles/PsdModule.dir/src/Location.cpp.o
[ 50%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdLocation.cpp.o
[ 62%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMap.cpp.o
[ 75%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMessageDecoder.cpp.o
[ 87%] Building CXX object CMakeFiles/PsdModule.dir/gtest/src/PsdTest.cpp.o
[100%] Linking CXX executable /home/zhao/Documents/Psd/gtest/output/bin/PsdModule
[100%] Built target PsdModule
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from PsdMapTest
[ RUN      ] PsdMapTest.useRealRecordPsdWithSP
open successfully
[TestBody] [4078]: preSegmentId = 2
[TestBody] [4092]: prevSegmentId = 2
[TestBody] [4105]: preSegTotalLength = 102
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 6.150000
[TestBody] [4078]: preSegmentId = 3
[TestBody] [4092]: prevSegmentId = 2
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 4
[TestBody] [4092]: prevSegmentId = 3
[TestBody] [4105]: preSegTotalLength = 96
[TestBody] [4078]: preSegmentId = 5
[TestBody] [4092]: prevSegmentId = 3
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 6
[TestBody] [4092]: prevSegmentId = 5
[TestBody] [4105]: preSegTotalLength = 32
[TestBody] [4078]: preSegmentId = 7
[TestBody] [4092]: prevSegmentId = 6
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 7.950000
[TestBody] [4078]: preSegmentId = 8
[TestBody] [4092]: prevSegmentId = 4
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 9
[TestBody] [4092]: prevSegmentId = 8
[TestBody] [4105]: preSegTotalLength = 8
[TestBody] [4078]: preSegmentId = 10
[TestBody] [4092]: prevSegmentId = 8
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 11
[TestBody] [4092]: prevSegmentId = 9
[TestBody] [4105]: preSegTotalLength = 82
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 7.650000
[TestBody] [4078]: preSegmentId = 12
[TestBody] [4092]: prevSegmentId = 11
[TestBody] [4105]: preSegTotalLength = 30
[TestBody] [4078]: preSegmentId = 13
[TestBody] [4092]: prevSegmentId = 12
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 14
[TestBody] [4092]: prevSegmentId = 12
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 15
[TestBody] [4092]: prevSegmentId = 12
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 5.550000
[TestBody] [4078]: preSegmentId = 16
[TestBody] [4092]: prevSegmentId = 13
[TestBody] [4105]: preSegTotalLength = 86
[TestBody] [4078]: preSegmentId = 17
[TestBody] [4092]: prevSegmentId = 13
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 18
[TestBody] [4092]: prevSegmentId = 13
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 19
[TestBody] [4092]: prevSegmentId = 16
[TestBody] [4105]: preSegTotalLength = 52
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 4.050000
[TestBody] [4078]: preSegmentId = 20
[TestBody] [4092]: prevSegmentId = 19
[TestBody] [4105]: preSegTotalLength = 118
[TestBody] [4078]: preSegmentId = 21
[TestBody] [4092]: prevSegmentId = 20
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 22
[TestBody] [4092]: prevSegmentId = 21
[TestBody] [4105]: preSegTotalLength = 46
[TestBody] [4078]: preSegmentId = 23
[TestBody] [4092]: prevSegmentId = 21
[TestBody] [4105]: preSegTotalLength = 14
[TestBody] [4218]: curSegmentId = 2
[TestBody] [4230]: curRemainLength = 84
[TestBody] [4078]: preSegmentId = 24
[TestBody] [4092]: prevSegmentId = 22
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4297]: curSegment's latitude = 40.353891
[TestBody] [4316]: curSegment's longitude = 116.821331
[TestBody] [4333]: hvHeading = 358.300000
[TestBody] [4078]: preSegmentId = 25
[TestBody] [4092]: prevSegmentId = 22
[TestBody] [4105]: preSegTotalLength = 38
[TestBody] [4078]: preSegmentId = 26
[TestBody] [4092]: prevSegmentId = 22
[TestBody] [4105]: preSegTotalLength = 120
[TestBody] [4078]: preSegmentId = 27
[TestBody] [4092]: prevSegmentId = 24
[TestBody] [4105]: preSegTotalLength = 110
[TestBody] [4078]: preSegmentId = 28
[TestBody] [4092]: prevSegmentId = 27
[TestBody] [4105]: preSegTotalLength = 34
[TestBody] [4078]: preSegmentId = 29
[TestBody] [4092]: prevSegmentId = 27
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 30
[TestBody] [4092]: prevSegmentId = 28
[TestBody] [4105]: preSegTotalLength = 62
[TestBody] [4078]: preSegmentId = 31
[TestBody] [4092]: prevSegmentId = 28
[TestBody] [4105]: preSegTotalLength = 10
[TestBody] [4078]: preSegmentId = 32
[TestBody] [4092]: prevSegmentId = 30
[TestBody] [4105]: preSegTotalLength = 66
[TestBody] [4078]: preSegmentId = 33
[TestBody] [4092]: prevSegmentId = 30
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 34
[TestBody] [4092]: prevSegmentId = 10
[TestBody] [4105]: preSegTotalLength = 34
[TestBody] [4078]: preSegmentId = 35
[TestBody] [4092]: prevSegmentId = 34
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4078]: preSegmentId = 36
[TestBody] [4092]: prevSegmentId = 32
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 37
[TestBody] [4092]: prevSegmentId = 32
[TestBody] [4105]: preSegTotalLength = 72
[TestBody] [4078]: preSegmentId = 38
[TestBody] [4092]: prevSegmentId = 14
[TestBody] [4105]: preSegTotalLength = 60
[TestBody] [4078]: preSegmentId = 39
[TestBody] [4092]: prevSegmentId = 14
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 40
[TestBody] [4092]: prevSegmentId = 36
[TestBody] [4105]: preSegTotalLength = 22
[TestBody] [4078]: preSegmentId = 41
[TestBody] [4092]: prevSegmentId = 18
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 42
[TestBody] [4092]: prevSegmentId = 18
[TestBody] [4105]: preSegTotalLength = 80
[TestBody] [4078]: preSegmentId = 43
[TestBody] [4092]: prevSegmentId = 38
[TestBody] [4105]: preSegTotalLength = 30
[TestBody] [4078]: preSegmentId = 44
[TestBody] [4092]: prevSegmentId = 43
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 45
[TestBody] [4092]: prevSegmentId = 43
[TestBody] [4105]: preSegTotalLength = 42
[TestBody] [4078]: preSegmentId = 46
[TestBody] [4092]: prevSegmentId = 42
[TestBody] [4105]: preSegTotalLength = 28
[TestBody] [4078]: preSegmentId = 47
[TestBody] [4092]: prevSegmentId = 44
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 48
[TestBody] [4092]: prevSegmentId = 44
[TestBody] [4105]: preSegTotalLength = 38
[TestBody] [4078]: preSegmentId = 49
[TestBody] [4092]: prevSegmentId = 45
[TestBody] [4105]: preSegTotalLength = 120
[TestBody] [4078]: preSegmentId = 50
[TestBody] [4092]: prevSegmentId = 45
[TestBody] [4105]: preSegTotalLength = 90
[TestBody] [4078]: preSegmentId = 51
[TestBody] [4092]: prevSegmentId = 46
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 52
[TestBody] [4092]: prevSegmentId = 48
[TestBody] [4105]: preSegTotalLength = 52
[TestBody] [4078]: preSegmentId = 53
[TestBody] [4092]: prevSegmentId = 51
[TestBody] [4105]: preSegTotalLength = 16
[TestBody] [4078]: preSegmentId = 54
[TestBody] [4092]: prevSegmentId = 51
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 55
[TestBody] [4092]: prevSegmentId = 51
[TestBody] [4105]: preSegTotalLength = 16
[TestBody] [4078]: preSegmentId = 56
[TestBody] [4092]: prevSegmentId = 55
[TestBody] [4105]: preSegTotalLength = 80
[TestBody] [4078]: preSegmentId = 56
[TestBody] [4092]: prevSegmentId = 55
[TestBody] [4105]: preSegTotalLength = 80
[TestBody] [4078]: preSegmentId = 57
[TestBody] [4092]: prevSegmentId = 54
[TestBody] [4105]: preSegTotalLength = 16
[TestBody] [4078]: preSegmentId = 58
[TestBody] [4092]: prevSegmentId = 54
[TestBody] [4105]: preSegTotalLength = 14
[TestBody] [4078]: preSegmentId = 58
[TestBody] [4092]: prevSegmentId = 54
[TestBody] [4105]: preSegTotalLength = 14
[TestBody] [4078]: preSegmentId = 59
[TestBody] [4092]: prevSegmentId = 57
[TestBody] [4105]: preSegTotalLength = 10
[TestBody] [4078]: preSegmentId = 60
[TestBody] [4092]: prevSegmentId = 57
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4078]: preSegmentId = 61
[TestBody] [4092]: prevSegmentId = 59
[TestBody] [4105]: preSegTotalLength = 22
[TestBody] [4078]: preSegmentId = 62
[TestBody] [4092]: prevSegmentId = 56
[TestBody] [4105]: preSegTotalLength = 34
[TestBody] [4078]: preSegmentId = 63
[TestBody] [4092]: prevSegmentId = 23
[TestBody] [4105]: preSegTotalLength = 6
[getInstance] [51]: first new a pInstance
[mapCreate] [1480]: --------------------------mapCreate--------------------------
[mapCreate] [1481]: hv's longitude = 116.821331, latitude = 40.353891, hvHeading = 358.300000
[createNode] [1136]: newNode = 0x563e366eabc0
[insertNodeInTree] [1288]: curNode = 0x563e366eabc0
[curIdIsInList] [1495]: curSegmentId is in list = 2
[insertNodeInTree] [1314]: count = 1
[insertNodeInTree] [1315]: current tree is = 0x563e366eabc0, current tree Id is = 2, curSegmentId is = 2
[calcCurSegmentCoordinate] [567]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [204]: Length = 84.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 84.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 358.300000, accumulateBranchAngleRad = 6.253515
[coordinateSystemRotates] [182]: dX = 84.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 83.963028
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -2.491965
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 83.963028
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -2.491965
[coordinateSystemRotates] [195]: coordinate system rotated X = 83.963028
[coordinateSystemRotates] [196]: coordinate system rotated Y = -2.491965
[calcCurSegmentCoordinate] [582]: disHv2EndAfterRotatingCoord.distanceX = 83.963028, disHv2EndAfterRotatingCoord.distanceY = -2.491965
[calcDestination] [78]: destinationCoord latitude = 40.354645  destinationCoord longitude = 116.821302
[calcCurSegmentCoordinate] [585]: HV's endCoordinate latitude = 40.354645  longitude = 116.821302
[calcStraightXYOffset] [204]: Length = -18.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -18.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 178.300000, accumulateBranchAngleRad = 3.111922
[coordinateSystemRotates] [182]: dX = -18.000000
[coordinateSystemRotates] [183]: dY = -0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 17.992077
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.533992
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 17.992077
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.533992
[coordinateSystemRotates] [195]: coordinate system rotated X = 17.992077
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.533992
[calcCurSegmentCoordinate] [595]: disHv2StartAfterRotatingCoord.distanceX = 17.992077, disHv2StartAfterRotatingCoord.distanceY = -0.533992
[calcDestination] [78]: destinationCoord latitude = 40.354053  destinationCoord longitude = 116.821325
[calcCurSegmentCoordinate] [598]: HV's startCoordinate latitude = 40.354053  longitude = 116.821325
[displayNodeCoordinate] [114]: 2's startCoordinate: latitude = 40.354053, longitude = 116.821325
[displayNodeCoordinate] [115]: 2's endCoordinate: latitude = 40.354645, longitude = 116.821302
[insertNode] [1200]: (*it)->preSegmentId = 2's segIsInTree = 1
[insertNode] [1242]: root or parent nodes are already in tree
[insertNode] [1248]: tempNode is = 0x563e366eabc0, preSegmentId = 2, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1275]: some nodes are already in tree
[insertNode] [1200]: (*it)->preSegmentId = 3's segIsInTree = 0
[insertNode] [1248]: tempNode is = 0x563e366eabc0, preSegmentId = 3, prevSegmentId = 2, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eac90
[insertChildNode] [1144]: childNode = 0x563e366eac90
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 20.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 358.300000, accumulateBranchAngleRad = 6.253515
[coordinateSystemRotates] [182]: dX = 20.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 19.991197
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.593325
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.991197
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.593325
[coordinateSystemRotates] [195]: coordinate system rotated X = 19.991197
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.593325
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 103.954225, accumulateXY.distanceY = -3.085289
[calcDestination] [78]: destinationCoord latitude = 40.354825  destinationCoord longitude = 116.821295
[insertNode] [1270]: childNode's preSegmentId = 3
[displayNodeCoordinate] [114]: 3's startCoordinate: latitude = 40.354645, longitude = 116.821302
[displayNodeCoordinate] [115]: 3's endCoordinate: latitude = 40.354825, longitude = 116.821295
[insertNode] [1200]: (*it)->preSegmentId = 4's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eac90
[insertNode] [1248]: tempNode is = 0x563e366eac90, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ead60
[insertChildNode] [1144]: childNode = 0x563e366ead60
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 96.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 95.970629
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 2.374505
[coordinateSystemRotates] [181]: accumulateBranchAngle = 359.717323, accumulateBranchAngleRad = 6.278252
[coordinateSystemRotates] [182]: dX = 95.970629
[coordinateSystemRotates] [183]: dY = 2.374505
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 95.969461
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.011715
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.473483
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 2.374476
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 95.981176
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.900993
[coordinateSystemRotates] [195]: coordinate system rotated X = 95.981176
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.900993
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 199.935402, accumulateXY.distanceY = -1.184296
[calcDestination] [78]: destinationCoord latitude = 40.355687  destinationCoord longitude = 116.821317
[insertNode] [1270]: childNode's preSegmentId = 4
[displayNodeCoordinate] [114]: 4's startCoordinate: latitude = 40.354825, longitude = 116.821295
[displayNodeCoordinate] [115]: 4's endCoordinate: latitude = 40.355687, longitude = 116.821317
[insertNode] [1200]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eac90
[insertNode] [1248]: tempNode is = 0x563e366eac90, preSegmentId = 5, prevSegmentId = 3, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eae30
[insertChildNode] [1144]: childNode = 0x563e366eae30
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.667748
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 17.987610
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = -0.667748
[coordinateSystemRotates] [183]: dY = 17.987610
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.004965
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 17.987113
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.667729
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.133737
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -17.982148
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.801466
[coordinateSystemRotates] [195]: coordinate system rotated X = -17.982148
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.801466
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 85.972077, accumulateXY.distanceY = -3.886756
[calcDestination] [78]: destinationCoord latitude = 40.354663  destinationCoord longitude = 116.821285
[insertNode] [1270]: childNode's preSegmentId = 5
[displayNodeCoordinate] [114]: 5's startCoordinate: latitude = 40.354825, longitude = 116.821295
[displayNodeCoordinate] [115]: 5's endCoordinate: latitude = 40.354663, longitude = 116.821285
[insertNode] [1200]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eae30
[findNodeById] [868]: result = 0x563e366eae30
[insertNode] [1248]: tempNode is = 0x563e366eae30, preSegmentId = 6, prevSegmentId = 5, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eaf00
[insertChildNode] [1144]: childNode = 0x563e366eaf00
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 32.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 31.990210
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.791502
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 31.990210
[coordinateSystemRotates] [183]: dY = 0.791502
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -1.029010
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.791092
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 31.973656
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.025460
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.820103
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 31.948196
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.820103
[coordinateSystemRotates] [196]: coordinate system rotated Y = 31.948196
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 84.151975, accumulateXY.distanceY = 28.061440
[calcDestination] [78]: destinationCoord latitude = 40.354647  destinationCoord longitude = 116.821662
[insertNode] [1270]: childNode's preSegmentId = 6
[displayNodeCoordinate] [114]: 6's startCoordinate: latitude = 40.354663, longitude = 116.821285
[displayNodeCoordinate] [115]: 6's endCoordinate: latitude = 40.354647, longitude = 116.821662
[insertNode] [1200]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eaf00
[findNodeById] [868]: result = 0x563e366eaf00
[findNodeById] [868]: result = 0x563e366eaf00
[insertNode] [1248]: tempNode is = 0x563e366eaf00, preSegmentId = 7, prevSegmentId = 6, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eafd0
[insertChildNode] [1144]: childNode = 0x563e366eafd0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -3.602639
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 111.942043
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -3.602639
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 111.942043
[coordinateSystemRotates] [195]: coordinate system rotated X = -3.602639
[coordinateSystemRotates] [196]: coordinate system rotated Y = 111.942043
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 80.549336, accumulateXY.distanceY = 140.003483
[calcDestination] [78]: destinationCoord latitude = 40.354615  destinationCoord longitude = 116.822981
[insertNode] [1270]: childNode's preSegmentId = 7
[displayNodeCoordinate] [114]: 7's startCoordinate: latitude = 40.354647, longitude = 116.821662
[displayNodeCoordinate] [115]: 7's endCoordinate: latitude = 40.354615, longitude = 116.822981
[insertNode] [1200]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ead60
[findNodeById] [868]: result = 0x563e366ead60
[insertNode] [1248]: tempNode is = 0x563e366ead60, preSegmentId = 8, prevSegmentId = 4, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb0a0
[insertChildNode] [1144]: childNode = 0x563e366eb0a0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 20.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 359.717323, accumulateBranchAngleRad = 6.278252
[coordinateSystemRotates] [182]: dX = 20.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 19.999757
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.098672
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.999757
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.098672
[coordinateSystemRotates] [195]: coordinate system rotated X = 19.999757
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.098672
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 219.935158, accumulateXY.distanceY = -1.282969
[calcDestination] [78]: destinationCoord latitude = 40.355867  destinationCoord longitude = 116.821316
[insertNode] [1270]: childNode's preSegmentId = 8
[displayNodeCoordinate] [114]: 8's startCoordinate: latitude = 40.355687, longitude = 116.821317
[displayNodeCoordinate] [115]: 8's endCoordinate: latitude = 40.355867, longitude = 116.821316
[insertNode] [1200]: (*it)->preSegmentId = 9's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb0a0
[findNodeById] [868]: result = 0x563e366eb0a0
[findNodeById] [868]: result = 0x563e366eb0a0
[insertNode] [1248]: tempNode is = 0x563e366eb0a0, preSegmentId = 9, prevSegmentId = 8, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb170
[insertChildNode] [1144]: childNode = 0x563e366eb170
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 8.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 7.997552
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.197875
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 7.997552
[coordinateSystemRotates] [183]: dY = 0.197875
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 7.995984
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.003918
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.158368
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.197837
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 7.992066
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.356204
[coordinateSystemRotates] [195]: coordinate system rotated X = 7.992066
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.356204
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 227.927224, accumulateXY.distanceY = -0.926764
[calcDestination] [78]: destinationCoord latitude = 40.355939  destinationCoord longitude = 116.821320
[insertNode] [1270]: childNode's preSegmentId = 9
[displayNodeCoordinate] [114]: 9's startCoordinate: latitude = 40.355867, longitude = 116.821316
[displayNodeCoordinate] [115]: 9's endCoordinate: latitude = 40.355939, longitude = 116.821320
[insertNode] [1200]: (*it)->preSegmentId = 10's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb0a0
[findNodeById] [868]: result = 0x563e366eb0a0
[findNodeById] [868]: result = 0x563e366eb0a0
[insertNode] [1248]: tempNode is = 0x563e366eb0a0, preSegmentId = 10, prevSegmentId = 8, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb240
[insertChildNode] [1144]: childNode = 0x563e366eb240
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.667748
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 17.987610
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = -0.667748
[coordinateSystemRotates] [183]: dY = 17.987610
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.021479
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 17.978302
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.667402
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.578597
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -17.956823
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -1.245999
[coordinateSystemRotates] [195]: coordinate system rotated X = -17.956823
[coordinateSystemRotates] [196]: coordinate system rotated Y = -1.245999
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 201.978336, accumulateXY.distanceY = -2.528968
[calcDestination] [78]: destinationCoord latitude = 40.355705  destinationCoord longitude = 116.821301
[insertNode] [1270]: childNode's preSegmentId = 10
[displayNodeCoordinate] [114]: 10's startCoordinate: latitude = 40.355867, longitude = 116.821316
[displayNodeCoordinate] [115]: 10's endCoordinate: latitude = 40.355705, longitude = 116.821301
[insertNode] [1200]: (*it)->preSegmentId = 11's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb170
[findNodeById] [868]: result = 0x563e366eb170
[findNodeById] [868]: result = 0x563e366eb170
[findNodeById] [868]: result = 0x563e366eb170
[insertNode] [1248]: tempNode is = 0x563e366eb170, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb310
[insertChildNode] [1144]: childNode = 0x563e366eb310
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 82.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 82.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 82.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 81.983922
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.623765
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 81.983922
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.623765
[coordinateSystemRotates] [195]: coordinate system rotated X = 81.983922
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.623765
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 309.911146, accumulateXY.distanceY = 0.697001
[calcDestination] [78]: destinationCoord latitude = 40.356675  destinationCoord longitude = 116.821339
[insertNode] [1270]: childNode's preSegmentId = 11
[displayNodeCoordinate] [114]: 11's startCoordinate: latitude = 40.355939, longitude = 116.821320
[displayNodeCoordinate] [115]: 11's endCoordinate: latitude = 40.356675, longitude = 116.821339
[insertNode] [1200]: (*it)->preSegmentId = 12's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb310
[findNodeById] [868]: result = 0x563e366eb310
[findNodeById] [868]: result = 0x563e366eb310
[findNodeById] [868]: result = 0x563e366eb310
[findNodeById] [868]: result = 0x563e366eb310
[insertNode] [1248]: tempNode is = 0x563e366eb310, preSegmentId = 12, prevSegmentId = 11, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb3e0
[insertChildNode] [1144]: childNode = 0x563e366eb3e0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 30.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 30.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 30.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 29.994118
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.594060
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 29.994118
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.594060
[coordinateSystemRotates] [195]: coordinate system rotated X = 29.994118
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.594060
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 339.905264, accumulateXY.distanceY = 1.291061
[calcDestination] [78]: destinationCoord latitude = 40.356944  destinationCoord longitude = 116.821346
[insertNode] [1270]: childNode's preSegmentId = 12
[displayNodeCoordinate] [114]: 12's startCoordinate: latitude = 40.356675, longitude = 116.821339
[displayNodeCoordinate] [115]: 12's endCoordinate: latitude = 40.356944, longitude = 116.821346
[insertNode] [1200]: (*it)->preSegmentId = 13's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[insertNode] [1248]: tempNode is = 0x563e366eb3e0, preSegmentId = 13, prevSegmentId = 12, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb4b0
[insertChildNode] [1144]: childNode = 0x563e366eb4b0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 17.994493
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -0.445220
[coordinateSystemRotates] [181]: accumulateBranchAngle = -0.282677, accumulateBranchAngleRad = -0.004934
[coordinateSystemRotates] [182]: dX = 17.994493
[coordinateSystemRotates] [183]: dY = -0.445220
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 17.994274
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.002197
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.088778
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.445214
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 17.992077
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.533992
[coordinateSystemRotates] [195]: coordinate system rotated X = 17.992077
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.533992
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 357.897341, accumulateXY.distanceY = 0.757069
[calcDestination] [78]: destinationCoord latitude = 40.357106  destinationCoord longitude = 116.821340
[insertNode] [1270]: childNode's preSegmentId = 13
[displayNodeCoordinate] [114]: 13's startCoordinate: latitude = 40.356944, longitude = 116.821346
[displayNodeCoordinate] [115]: 13's endCoordinate: latitude = 40.357106, longitude = 116.821340
[insertNode] [1200]: (*it)->preSegmentId = 14's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[insertNode] [1248]: tempNode is = 0x563e366eb3e0, preSegmentId = 14, prevSegmentId = 12, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb580
[insertChildNode] [1144]: childNode = 0x563e366eb580
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = 1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.148416
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 11.999082
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = 0.148416
[coordinateSystemRotates] [183]: dY = 11.999082
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.001103
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 11.998751
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.148412
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.089213
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -11.999854
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.059199
[coordinateSystemRotates] [195]: coordinate system rotated X = -11.999854
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.059199
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 327.905410, accumulateXY.distanceY = 1.350260
[calcDestination] [78]: destinationCoord latitude = 40.356837  destinationCoord longitude = 116.821347
[insertNode] [1270]: childNode's preSegmentId = 14
[displayNodeCoordinate] [114]: 14's startCoordinate: latitude = 40.356944, longitude = 116.821346
[displayNodeCoordinate] [115]: 14's endCoordinate: latitude = 40.356837, longitude = 116.821347
[insertNode] [1200]: (*it)->preSegmentId = 15's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[findNodeById] [868]: result = 0x563e366eb3e0
[insertNode] [1248]: tempNode is = 0x563e366eb3e0, preSegmentId = 15, prevSegmentId = 12, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb650
[insertChildNode] [1144]: childNode = 0x563e366eb650
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.247360
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -19.998470
[coordinateSystemRotates] [181]: accumulateBranchAngle = -88.156703, accumulateBranchAngleRad = -1.538625
[coordinateSystemRotates] [182]: dX = 0.247360
[coordinateSystemRotates] [183]: dY = -19.998470
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.007957
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 19.988122
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.247232
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.643272
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -19.980165
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.890503
[coordinateSystemRotates] [195]: coordinate system rotated X = -19.980165
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.890503
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 319.925098, accumulateXY.distanceY = 0.400558
[calcDestination] [78]: destinationCoord latitude = 40.356765  destinationCoord longitude = 116.821336
[insertNode] [1270]: childNode's preSegmentId = 15
[displayNodeCoordinate] [114]: 15's startCoordinate: latitude = 40.356944, longitude = 116.821346
[displayNodeCoordinate] [115]: 15's endCoordinate: latitude = 40.356765, longitude = 116.821336
[insertNode] [1200]: (*it)->preSegmentId = 16's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[insertNode] [1248]: tempNode is = 0x563e366eb4b0, preSegmentId = 16, prevSegmentId = 13, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb720
[insertChildNode] [1144]: childNode = 0x563e366eb720
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 86.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 85.973689
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 2.127161
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 85.973689
[coordinateSystemRotates] [183]: dY = 2.127161
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 85.956831
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.042122
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.702452
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 2.126744
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 85.914709
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.829196
[coordinateSystemRotates] [195]: coordinate system rotated X = 85.914709
[coordinateSystemRotates] [196]: coordinate system rotated Y = 3.829196
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 443.812050, accumulateXY.distanceY = 4.586265
[calcDestination] [78]: destinationCoord latitude = 40.357878  destinationCoord longitude = 116.821385
[insertNode] [1270]: childNode's preSegmentId = 16
[displayNodeCoordinate] [114]: 16's startCoordinate: latitude = 40.357106, longitude = 116.821340
[displayNodeCoordinate] [115]: 16's endCoordinate: latitude = 40.357878, longitude = 116.821385
[insertNode] [1200]: (*it)->preSegmentId = 17's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[insertNode] [1248]: tempNode is = 0x563e366eb4b0, preSegmentId = 17, prevSegmentId = 13, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb7f0
[insertChildNode] [1144]: childNode = 0x563e366eb7f0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.445165
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 11.991740
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = -0.445165
[coordinateSystemRotates] [183]: dY = 11.991740
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.014319
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 11.985535
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.444935
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.385731
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -11.971215
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.830666
[coordinateSystemRotates] [195]: coordinate system rotated X = -11.971215
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.830666
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 345.926126, accumulateXY.distanceY = -0.073597
[calcDestination] [78]: destinationCoord latitude = 40.356999  destinationCoord longitude = 116.821330
[insertNode] [1270]: childNode's preSegmentId = 17
[displayNodeCoordinate] [114]: 17's startCoordinate: latitude = 40.357106, longitude = 116.821340
[displayNodeCoordinate] [115]: 17's endCoordinate: latitude = 40.356999, longitude = 116.821330
[insertNode] [1200]: (*it)->preSegmentId = 18's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[findNodeById] [868]: result = 0x563e366eb4b0
[insertNode] [1248]: tempNode is = 0x563e366eb4b0, preSegmentId = 18, prevSegmentId = 13, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb8c0
[insertChildNode] [1144]: childNode = 0x563e366eb8c0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = -87.874026
[calcStraightXYOffset] [206]: BranchAngleRad = -1.533691
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.741935
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -19.986234
[coordinateSystemRotates] [181]: accumulateBranchAngle = -88.156703, accumulateBranchAngleRad = -1.538625
[coordinateSystemRotates] [182]: dX = 0.741935
[coordinateSystemRotates] [183]: dY = -19.986234
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.023865
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 19.975891
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.741551
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.642878
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -19.952026
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -1.384429
[coordinateSystemRotates] [195]: coordinate system rotated X = -19.952026
[coordinateSystemRotates] [196]: coordinate system rotated Y = -1.384429
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 337.945315, accumulateXY.distanceY = -0.627360
[calcDestination] [78]: destinationCoord latitude = 40.356927  destinationCoord longitude = 116.821324
[insertNode] [1270]: childNode's preSegmentId = 18
[displayNodeCoordinate] [114]: 18's startCoordinate: latitude = 40.357106, longitude = 116.821340
[displayNodeCoordinate] [115]: 18's endCoordinate: latitude = 40.356927, longitude = 116.821324
[insertNode] [1200]: (*it)->preSegmentId = 19's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb720
[findNodeById] [868]: result = 0x563e366eb720
[findNodeById] [868]: result = 0x563e366eb720
[findNodeById] [868]: result = 0x563e366eb720
[findNodeById] [868]: result = 0x563e366eb720
[findNodeById] [868]: result = 0x563e366eb720
[findNodeById] [868]: result = 0x563e366eb720
[findNodeById] [868]: result = 0x563e366eb720
[insertNode] [1248]: tempNode is = 0x563e366eb720, preSegmentId = 19, prevSegmentId = 16, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eb990
[insertChildNode] [1144]: childNode = 0x563e366eb990
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 52.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 52.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 52.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 51.989804
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.029705
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 51.989804
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.029705
[coordinateSystemRotates] [195]: coordinate system rotated X = 51.989804
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.029705
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 495.801854, accumulateXY.distanceY = 5.615970
[calcDestination] [78]: destinationCoord latitude = 40.358345  destinationCoord longitude = 116.821397
[insertNode] [1270]: childNode's preSegmentId = 19
[displayNodeCoordinate] [114]: 19's startCoordinate: latitude = 40.357878, longitude = 116.821385
[displayNodeCoordinate] [115]: 19's endCoordinate: latitude = 40.358345, longitude = 116.821397
[insertNode] [1200]: (*it)->preSegmentId = 20's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[findNodeById] [868]: result = 0x563e366eb990
[insertNode] [1248]: tempNode is = 0x563e366eb990, preSegmentId = 20, prevSegmentId = 19, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eba60
[insertChildNode] [1144]: childNode = 0x563e366eba60
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 118.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 118.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 118.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 117.976863
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.336638
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 117.976863
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.336638
[coordinateSystemRotates] [195]: coordinate system rotated X = 117.976863
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.336638
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 613.778717, accumulateXY.distanceY = 7.952607
[calcDestination] [78]: destinationCoord latitude = 40.359405  destinationCoord longitude = 116.821425
[insertNode] [1270]: childNode's preSegmentId = 20
[displayNodeCoordinate] [114]: 20's startCoordinate: latitude = 40.358345, longitude = 116.821397
[displayNodeCoordinate] [115]: 20's endCoordinate: latitude = 40.359405, longitude = 116.821425
[insertNode] [1200]: (*it)->preSegmentId = 21's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[findNodeById] [868]: result = 0x563e366eba60
[insertNode] [1248]: tempNode is = 0x563e366eba60, preSegmentId = 21, prevSegmentId = 20, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ebb30
[insertChildNode] [1144]: childNode = 0x563e366ebb30
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 20.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 20.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 19.996078
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.396040
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.996078
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.396040
[coordinateSystemRotates] [195]: coordinate system rotated X = 19.996078
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.396040
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 633.774795, accumulateXY.distanceY = 8.348648
[calcDestination] [78]: destinationCoord latitude = 40.359584  destinationCoord longitude = 116.821429
[insertNode] [1270]: childNode's preSegmentId = 21
[displayNodeCoordinate] [114]: 21's startCoordinate: latitude = 40.359405, longitude = 116.821425
[displayNodeCoordinate] [115]: 21's endCoordinate: latitude = 40.359584, longitude = 116.821429
[insertNode] [1200]: (*it)->preSegmentId = 22's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[insertNode] [1248]: tempNode is = 0x563e366ebb30, preSegmentId = 22, prevSegmentId = 21, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ebc00
[insertChildNode] [1144]: childNode = 0x563e366ebc00
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 46.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 46.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 46.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 45.990980
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.910893
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 45.990980
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.910893
[coordinateSystemRotates] [195]: coordinate system rotated X = 45.990980
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.910893
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 679.765776, accumulateXY.distanceY = 9.259540
[calcDestination] [78]: destinationCoord latitude = 40.359997  destinationCoord longitude = 116.821440
[insertNode] [1270]: childNode's preSegmentId = 22
[displayNodeCoordinate] [114]: 22's startCoordinate: latitude = 40.359584, longitude = 116.821429
[displayNodeCoordinate] [115]: 22's endCoordinate: latitude = 40.359997, longitude = 116.821440
[insertNode] [1200]: (*it)->preSegmentId = 23's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[findNodeById] [868]: result = 0x563e366ebb30
[insertNode] [1248]: tempNode is = 0x563e366ebb30, preSegmentId = 23, prevSegmentId = 21, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ebcd0
[insertChildNode] [1144]: childNode = 0x563e366ebcd0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 14.000000, BranchAngle = 93.543318
[calcStraightXYOffset] [206]: BranchAngleRad = 1.632639
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.865244
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 13.973237
[coordinateSystemRotates] [181]: accumulateBranchAngle = 94.677964, accumulateBranchAngleRad = 1.652442
[coordinateSystemRotates] [182]: dX = -0.865244
[coordinateSystemRotates] [183]: dY = 13.973237
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.081555
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.996669
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.070565
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 13.926690
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.862362
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -1.139590
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -13.856125
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -2.001952
[coordinateSystemRotates] [195]: coordinate system rotated X = -13.856125
[coordinateSystemRotates] [196]: coordinate system rotated Y = -2.001952
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 619.918671, accumulateXY.distanceY = 6.346696
[calcDestination] [78]: destinationCoord latitude = 40.359460  destinationCoord longitude = 116.821406
[insertNode] [1270]: childNode's preSegmentId = 23
[displayNodeCoordinate] [114]: 23's startCoordinate: latitude = 40.359584, longitude = 116.821429
[displayNodeCoordinate] [115]: 23's endCoordinate: latitude = 40.359460, longitude = 116.821406
[insertNode] [1200]: (*it)->preSegmentId = 24's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[insertNode] [1248]: tempNode is = 0x563e366ebc00, preSegmentId = 24, prevSegmentId = 22, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ebda0
[insertChildNode] [1144]: childNode = 0x563e366ebda0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 111.978039
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.217826
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 111.978039
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.217826
[coordinateSystemRotates] [195]: coordinate system rotated X = 111.978039
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.217826
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 791.743815, accumulateXY.distanceY = 11.477366
[calcDestination] [78]: destinationCoord latitude = 40.361003  destinationCoord longitude = 116.821466
[insertNode] [1270]: childNode's preSegmentId = 24
[displayNodeCoordinate] [114]: 24's startCoordinate: latitude = 40.359997, longitude = 116.821440
[displayNodeCoordinate] [115]: 24's endCoordinate: latitude = 40.361003, longitude = 116.821466
[insertNode] [1200]: (*it)->preSegmentId = 25's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[insertNode] [1248]: tempNode is = 0x563e366ebc00, preSegmentId = 25, prevSegmentId = 22, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ebe70
[insertChildNode] [1144]: childNode = 0x563e366ebe70
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 38.000000, BranchAngle = -92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = -1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -1.409690
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -37.973843
[coordinateSystemRotates] [181]: accumulateBranchAngle = -90.991349, accumulateBranchAngleRad = -1.588099
[coordinateSystemRotates] [182]: dX = -1.409690
[coordinateSystemRotates] [183]: dY = -37.973843
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.017301
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.999850
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.024390
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 37.968159
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.409479
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.657002
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -37.943770
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.066481
[coordinateSystemRotates] [195]: coordinate system rotated X = -37.943770
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.066481
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 641.822006, accumulateXY.distanceY = 11.326021
[calcDestination] [78]: destinationCoord latitude = 40.359657  destinationCoord longitude = 116.821465
[insertNode] [1270]: childNode's preSegmentId = 25
[displayNodeCoordinate] [114]: 25's startCoordinate: latitude = 40.359997, longitude = 116.821440
[displayNodeCoordinate] [115]: 25's endCoordinate: latitude = 40.359657, longitude = 116.821465
[insertNode] [1200]: (*it)->preSegmentId = 26's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[findNodeById] [868]: result = 0x563e366ebc00
[insertNode] [1248]: tempNode is = 0x563e366ebc00, preSegmentId = 26, prevSegmentId = 22, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ebf40
[insertChildNode] [1144]: childNode = 0x563e366ebf40
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 120.000000, BranchAngle = 79.370088
[calcStraightXYOffset] [206]: BranchAngleRad = 1.385269
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 22.135738
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 117.940702
[coordinateSystemRotates] [181]: accumulateBranchAngle = 80.504734, accumulateBranchAngleRad = 1.405073
[coordinateSystemRotates] [182]: dX = 22.135738
[coordinateSystemRotates] [183]: dY = 117.940702
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.164966
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.986299
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 3.651647
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 116.324824
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 21.832461
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 19.456219
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -112.673177
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 41.288680
[coordinateSystemRotates] [195]: coordinate system rotated X = -112.673177
[coordinateSystemRotates] [196]: coordinate system rotated Y = 41.288680
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 567.092598, accumulateXY.distanceY = 50.548221
[calcDestination] [78]: destinationCoord latitude = 40.358985  destinationCoord longitude = 116.821927
[insertNode] [1270]: childNode's preSegmentId = 26
[displayNodeCoordinate] [114]: 26's startCoordinate: latitude = 40.359997, longitude = 116.821440
[displayNodeCoordinate] [115]: 26's endCoordinate: latitude = 40.358985, longitude = 116.821927
[insertNode] [1200]: (*it)->preSegmentId = 27's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[findNodeById] [868]: result = 0x563e366ebda0
[insertNode] [1248]: tempNode is = 0x563e366ebda0, preSegmentId = 27, prevSegmentId = 24, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec010
[insertChildNode] [1144]: childNode = 0x563e366ec010
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 110.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 110.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 110.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 109.978431
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.178222
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 109.978431
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.178222
[coordinateSystemRotates] [195]: coordinate system rotated X = 109.978431
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.178222
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 901.722246, accumulateXY.distanceY = 13.655588
[calcDestination] [78]: destinationCoord latitude = 40.361991  destinationCoord longitude = 116.821492
[insertNode] [1270]: childNode's preSegmentId = 27
[displayNodeCoordinate] [114]: 27's startCoordinate: latitude = 40.361003, longitude = 116.821466
[displayNodeCoordinate] [115]: 27's endCoordinate: latitude = 40.361991, longitude = 116.821492
[insertNode] [1200]: (*it)->preSegmentId = 28's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[insertNode] [1248]: tempNode is = 0x563e366ec010, preSegmentId = 28, prevSegmentId = 27, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec0e0
[insertChildNode] [1144]: childNode = 0x563e366ec0e0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 34.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 33.989598
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.840971
[coordinateSystemRotates] [181]: accumulateBranchAngle = 2.551969, accumulateBranchAngleRad = 0.044540
[coordinateSystemRotates] [182]: dX = 33.989598
[coordinateSystemRotates] [183]: dY = 0.840971
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999008
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.044526
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 33.955889
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.037445
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.513405
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.840137
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 33.918444
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.353542
[coordinateSystemRotates] [195]: coordinate system rotated X = 33.918444
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.353542
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 935.640690, accumulateXY.distanceY = 16.009129
[calcDestination] [78]: destinationCoord latitude = 40.362296  destinationCoord longitude = 116.821520
[insertNode] [1270]: childNode's preSegmentId = 28
[displayNodeCoordinate] [114]: 28's startCoordinate: latitude = 40.361991, longitude = 116.821492
[displayNodeCoordinate] [115]: 28's endCoordinate: latitude = 40.362296, longitude = 116.821520
[insertNode] [1200]: (*it)->preSegmentId = 29's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[findNodeById] [868]: result = 0x563e366ec010
[insertNode] [1248]: tempNode is = 0x563e366ec010, preSegmentId = 29, prevSegmentId = 27, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec1b0
[insertChildNode] [1144]: childNode = 0x563e366ec1b0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 87.874026
[calcStraightXYOffset] [206]: BranchAngleRad = 1.533691
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.445161
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 11.991740
[coordinateSystemRotates] [181]: accumulateBranchAngle = 89.008672, accumulateBranchAngleRad = 1.553494
[coordinateSystemRotates] [182]: dX = 0.445161
[coordinateSystemRotates] [183]: dY = 11.991740
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.017301
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999850
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.007702
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 11.989945
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.445094
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.207470
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -11.982244
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.652564
[coordinateSystemRotates] [195]: coordinate system rotated X = -11.982244
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.652564
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 889.740002, accumulateXY.distanceY = 14.308152
[calcDestination] [78]: destinationCoord latitude = 40.361884  destinationCoord longitude = 116.821500
[insertNode] [1270]: childNode's preSegmentId = 29
[displayNodeCoordinate] [114]: 29's startCoordinate: latitude = 40.361991, longitude = 116.821492
[displayNodeCoordinate] [115]: 29's endCoordinate: latitude = 40.361884, longitude = 116.821500
[insertNode] [1200]: (*it)->preSegmentId = 30's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[insertNode] [1248]: tempNode is = 0x563e366ec0e0, preSegmentId = 30, prevSegmentId = 28, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec280
[insertChildNode] [1144]: childNode = 0x563e366ec280
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 62.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 61.981032
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -1.533535
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 61.981032
[coordinateSystemRotates] [183]: dY = -1.533535
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 61.968878
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.030367
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.227349
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -1.533234
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 61.999245
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.305885
[coordinateSystemRotates] [195]: coordinate system rotated X = 61.999245
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.305885
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 997.639935, accumulateXY.distanceY = 15.703245
[calcDestination] [78]: destinationCoord latitude = 40.362853  destinationCoord longitude = 116.821516
[insertNode] [1270]: childNode's preSegmentId = 30
[displayNodeCoordinate] [114]: 30's startCoordinate: latitude = 40.362296, longitude = 116.821520
[displayNodeCoordinate] [115]: 30's endCoordinate: latitude = 40.362853, longitude = 116.821516
[insertNode] [1200]: (*it)->preSegmentId = 31's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[findNodeById] [868]: result = 0x563e366ec0e0
[insertNode] [1248]: tempNode is = 0x563e366ec0e0, preSegmentId = 31, prevSegmentId = 28, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec350
[insertChildNode] [1144]: childNode = 0x563e366ec350
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 10.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.370971
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 9.993117
[coordinateSystemRotates] [181]: accumulateBranchAngle = 94.677964, accumulateBranchAngleRad = 1.652442
[coordinateSystemRotates] [182]: dX = -0.370971
[coordinateSystemRotates] [183]: dY = 9.993117
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.081555
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.996669
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.030255
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 9.959828
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.369735
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.814991
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -9.929573
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -1.184726
[coordinateSystemRotates] [195]: coordinate system rotated X = -9.929573
[coordinateSystemRotates] [196]: coordinate system rotated Y = -1.184726
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 925.711117, accumulateXY.distanceY = 14.824403
[calcDestination] [78]: destinationCoord latitude = 40.362207  destinationCoord longitude = 116.821506
[insertNode] [1270]: childNode's preSegmentId = 31
[displayNodeCoordinate] [114]: 31's startCoordinate: latitude = 40.362296, longitude = 116.821520
[displayNodeCoordinate] [115]: 31's endCoordinate: latitude = 40.362207, longitude = 116.821506
[insertNode] [1200]: (*it)->preSegmentId = 32's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[insertNode] [1248]: tempNode is = 0x563e366ec280, preSegmentId = 32, prevSegmentId = 30, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec440
[insertChildNode] [1144]: childNode = 0x563e366ec440
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 66.000000, BranchAngle = -4.251969
[calcStraightXYOffset] [206]: BranchAngleRad = -0.074211
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 65.818344
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -4.893422
[coordinateSystemRotates] [181]: accumulateBranchAngle = -3.117323, accumulateBranchAngleRad = -0.054408
[coordinateSystemRotates] [182]: dX = 65.818344
[coordinateSystemRotates] [183]: dY = -4.893422
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.998520
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.054381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 65.720951
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.266108
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -3.579248
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -4.886181
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 65.454843
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -8.465430
[coordinateSystemRotates] [195]: coordinate system rotated X = 65.454843
[coordinateSystemRotates] [196]: coordinate system rotated Y = -8.465430
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 1063.094779, accumulateXY.distanceY = 7.237815
[calcDestination] [78]: destinationCoord latitude = 40.363441  destinationCoord longitude = 116.821416
[insertNode] [1270]: childNode's preSegmentId = 32
[displayNodeCoordinate] [114]: 32's startCoordinate: latitude = 40.362853, longitude = 116.821516
[displayNodeCoordinate] [115]: 32's endCoordinate: latitude = 40.363441, longitude = 116.821416
[insertNode] [1200]: (*it)->preSegmentId = 33's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[findNodeById] [868]: result = 0x563e366ec280
[insertNode] [1248]: tempNode is = 0x563e366ec280, preSegmentId = 33, prevSegmentId = 30, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec510
[insertChildNode] [1144]: childNode = 0x563e366ec510
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 79.370088
[calcStraightXYOffset] [206]: BranchAngleRad = 1.385269
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 3.689290
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 19.656784
[coordinateSystemRotates] [181]: accumulateBranchAngle = 80.504734, accumulateBranchAngleRad = 1.405073
[coordinateSystemRotates] [182]: dX = 3.689290
[coordinateSystemRotates] [183]: dY = 19.656784
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.164966
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.986299
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.608608
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 19.387471
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 3.638744
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 3.242703
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -18.778863
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 6.881447
[coordinateSystemRotates] [195]: coordinate system rotated X = -18.778863
[coordinateSystemRotates] [196]: coordinate system rotated Y = 6.881447
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 978.861073, accumulateXY.distanceY = 22.584691
[calcDestination] [78]: destinationCoord latitude = 40.362684  destinationCoord longitude = 116.821597
[insertNode] [1270]: childNode's preSegmentId = 33
[displayNodeCoordinate] [114]: 33's startCoordinate: latitude = 40.362853, longitude = 116.821516
[displayNodeCoordinate] [115]: 33's endCoordinate: latitude = 40.362684, longitude = 116.821597
[insertNode] [1200]: (*it)->preSegmentId = 34's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eb240
[findNodeById] [868]: result = 0x563e366eb240
[findNodeById] [868]: result = 0x563e366eb240
[findNodeById] [868]: result = 0x563e366eb240
[insertNode] [1248]: tempNode is = 0x563e366eb240, preSegmentId = 34, prevSegmentId = 10, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec600
[insertChildNode] [1144]: childNode = 0x563e366ec600
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 34.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 33.989598
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -0.840971
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = 33.989598
[coordinateSystemRotates] [183]: dY = -0.840971
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.252711
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.840947
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 33.988658
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.006253
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.588237
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 33.994911
[coordinateSystemRotates] [195]: coordinate system rotated X = 0.588237
[coordinateSystemRotates] [196]: coordinate system rotated Y = 33.994911
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 202.566572, accumulateXY.distanceY = 31.465943
[calcDestination] [78]: destinationCoord latitude = 40.355711  destinationCoord longitude = 116.821702
[insertNode] [1270]: childNode's preSegmentId = 34
[displayNodeCoordinate] [114]: 34's startCoordinate: latitude = 40.355705, longitude = 116.821301
[displayNodeCoordinate] [115]: 34's endCoordinate: latitude = 40.355711, longitude = 116.821702
[insertNode] [1200]: (*it)->preSegmentId = 35's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ec600
[findNodeById] [868]: result = 0x563e366ec600
[findNodeById] [868]: result = 0x563e366ec600
[findNodeById] [868]: result = 0x563e366ec600
[findNodeById] [868]: result = 0x563e366ec600
[insertNode] [1248]: tempNode is = 0x563e366ec600, preSegmentId = 35, prevSegmentId = 34, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec6d0
[insertChildNode] [1144]: childNode = 0x563e366ec6d0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.832714
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 111.996904
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.832714
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 111.996904
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.832714
[coordinateSystemRotates] [196]: coordinate system rotated Y = 111.996904
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 201.733858, accumulateXY.distanceY = 143.462848
[calcDestination] [78]: destinationCoord latitude = 40.355703  destinationCoord longitude = 116.823022
[insertNode] [1270]: childNode's preSegmentId = 35
[displayNodeCoordinate] [114]: 35's startCoordinate: latitude = 40.355711, longitude = 116.821702
[displayNodeCoordinate] [115]: 35's endCoordinate: latitude = 40.355703, longitude = 116.823022
[insertNode] [1200]: (*it)->preSegmentId = 36's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[insertNode] [1248]: tempNode is = 0x563e366ec440, preSegmentId = 36, prevSegmentId = 32, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec7c0
[insertChildNode] [1144]: childNode = 0x563e366ec7c0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 11.996329
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.296813
[coordinateSystemRotates] [181]: accumulateBranchAngle = -1.700000, accumulateBranchAngleRad = -0.029671
[coordinateSystemRotates] [182]: dX = 11.996329
[coordinateSystemRotates] [183]: dY = 0.296813
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 11.991049
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.008805
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.355886
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.296683
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 11.999854
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.059203
[coordinateSystemRotates] [195]: coordinate system rotated X = 11.999854
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.059203
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 1075.094633, accumulateXY.distanceY = 7.178611
[calcDestination] [78]: destinationCoord latitude = 40.363549  destinationCoord longitude = 116.821416
[insertNode] [1270]: childNode's preSegmentId = 36
[displayNodeCoordinate] [114]: 36's startCoordinate: latitude = 40.363441, longitude = 116.821416
[displayNodeCoordinate] [115]: 36's endCoordinate: latitude = 40.363549, longitude = 116.821416
[insertNode] [1200]: (*it)->preSegmentId = 37's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[findNodeById] [868]: result = 0x563e366ec440
[insertNode] [1248]: tempNode is = 0x563e366ec440, preSegmentId = 37, prevSegmentId = 32, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec8b0
[insertChildNode] [1144]: childNode = 0x563e366ec8b0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 72.000000, BranchAngle = -82.204734
[calcStraightXYOffset] [206]: BranchAngleRad = -1.434743
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 9.765627
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -71.334652
[coordinateSystemRotates] [181]: accumulateBranchAngle = -85.322057, accumulateBranchAngleRad = -1.489151
[coordinateSystemRotates] [182]: dX = 9.765627
[coordinateSystemRotates] [183]: dY = -71.334652
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.081555
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.996669
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.796434
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 71.097026
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -9.733097
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -5.817685
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -70.300592
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -15.550782
[coordinateSystemRotates] [195]: coordinate system rotated X = -70.300592
[coordinateSystemRotates] [196]: coordinate system rotated Y = -15.550782
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 992.794187, accumulateXY.distanceY = -8.312967
[calcDestination] [78]: destinationCoord latitude = 40.362809  destinationCoord longitude = 116.821233
[insertNode] [1270]: childNode's preSegmentId = 37
[displayNodeCoordinate] [114]: 37's startCoordinate: latitude = 40.363441, longitude = 116.821416
[displayNodeCoordinate] [115]: 37's endCoordinate: latitude = 40.362809, longitude = 116.821233
[insertNode] [1200]: (*it)->preSegmentId = 38's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[insertNode] [1248]: tempNode is = 0x563e366eb580, preSegmentId = 38, prevSegmentId = 14, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ec9a0
[insertChildNode] [1144]: childNode = 0x563e366ec9a0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 60.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 59.981643
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 1.484066
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 59.981643
[coordinateSystemRotates] [183]: dY = 1.484066
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -1.929395
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 1.483298
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 59.950605
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.047737
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -3.412693
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 59.902867
[coordinateSystemRotates] [195]: coordinate system rotated X = -3.412693
[coordinateSystemRotates] [196]: coordinate system rotated Y = 59.902867
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 324.492717, accumulateXY.distanceY = 61.253128
[calcDestination] [78]: destinationCoord latitude = 40.356806  destinationCoord longitude = 116.822053
[insertNode] [1270]: childNode's preSegmentId = 38
[displayNodeCoordinate] [114]: 38's startCoordinate: latitude = 40.356837, longitude = 116.821347
[displayNodeCoordinate] [115]: 38's endCoordinate: latitude = 40.356806, longitude = 116.822053
[insertNode] [1200]: (*it)->preSegmentId = 39's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[findNodeById] [868]: result = 0x563e366eb580
[insertNode] [1248]: tempNode is = 0x563e366eb580, preSegmentId = 39, prevSegmentId = 14, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eca70
[insertChildNode] [1144]: childNode = 0x563e366eca70
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.222624
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.998623
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 0.222624
[coordinateSystemRotates] [183]: dY = -17.998623
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.222580
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.356409
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.004408
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -17.995094
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.578989
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -17.990686
[coordinateSystemRotates] [195]: coordinate system rotated X = 0.578989
[coordinateSystemRotates] [196]: coordinate system rotated Y = -17.990686
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 328.484399, accumulateXY.distanceY = -16.640425
[calcDestination] [78]: destinationCoord latitude = 40.356842  destinationCoord longitude = 116.821135
[insertNode] [1270]: childNode's preSegmentId = 39
[displayNodeCoordinate] [114]: 39's startCoordinate: latitude = 40.356837, longitude = 116.821347
[displayNodeCoordinate] [115]: 39's endCoordinate: latitude = 40.356842, longitude = 116.821135
[insertNode] [1200]: (*it)->preSegmentId = 40's segIsInTree = 0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[findNodeById] [868]: result = 0x563e366ec7c0
[insertNode] [1248]: tempNode is = 0x563e366ec7c0, preSegmentId = 40, prevSegmentId = 36, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ecb60
[insertChildNode] [1144]: childNode = 0x563e366ecb60
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 22.000000, BranchAngle = 8.503938
[calcStraightXYOffset] [206]: BranchAngleRad = 0.148422
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 21.758125
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 3.253303
[coordinateSystemRotates] [181]: accumulateBranchAngle = 6.803938, accumulateBranchAngleRad = 0.118751
[coordinateSystemRotates] [182]: dX = 21.758125
[coordinateSystemRotates] [183]: dY = 3.253303
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.992957
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.118472
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 21.604891
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.385426
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.577733
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 3.230391
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 21.219465
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 5.808124
[coordinateSystemRotates] [195]: coordinate system rotated X = 21.219465
[coordinateSystemRotates] [196]: coordinate system rotated Y = 5.808124
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 1096.314098, accumulateXY.distanceY = 12.986735
[calcDestination] [78]: destinationCoord latitude = 40.363739  destinationCoord longitude = 116.821484
[insertNode] [1270]: childNode's preSegmentId = 40
[displayNodeCoordinate] [114]: 40's startCoordinate: latitude = 40.363549, longitude = 116.821416
[displayNodeCoordinate] [115]: 40's endCoordinate: latitude = 40.363739, longitude = 116.821484
[insertNode] [1200]: (*it)->preSegmentId = 41's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[insertNode] [1248]: tempNode is = 0x563e366eb8c0, preSegmentId = 41, prevSegmentId = 18, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ecc30
[insertChildNode] [1144]: childNode = 0x563e366ecc30
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -90.708672
[calcStraightXYOffset] [206]: BranchAngleRad = -1.583165
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.222630
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.998623
[coordinateSystemRotates] [181]: accumulateBranchAngle = -178.865375, accumulateBranchAngleRad = -3.121790
[coordinateSystemRotates] [182]: dX = -0.222630
[coordinateSystemRotates] [183]: dY = -17.998623
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.222587
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.356402
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.004408
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 17.995094
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.133816
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 17.999503
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.133816
[coordinateSystemRotates] [196]: coordinate system rotated Y = 17.999503
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 337.811499, accumulateXY.distanceY = 17.372143
[calcDestination] [78]: destinationCoord latitude = 40.356926  destinationCoord longitude = 116.821536
[insertNode] [1270]: childNode's preSegmentId = 41
[displayNodeCoordinate] [114]: 41's startCoordinate: latitude = 40.356927, longitude = 116.821324
[displayNodeCoordinate] [115]: 41's endCoordinate: latitude = 40.356926, longitude = 116.821536
[insertNode] [1200]: (*it)->preSegmentId = 42's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[findNodeById] [868]: result = 0x563e366eb8c0
[insertNode] [1248]: tempNode is = 0x563e366eb8c0, preSegmentId = 42, prevSegmentId = 18, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ecd20
[insertChildNode] [1144]: childNode = 0x563e366ecd20
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 80.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 79.975525
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 1.978754
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 79.975525
[coordinateSystemRotates] [183]: dY = 1.978754
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 4.548835
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -1.975551
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -79.846056
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.112547
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 6.524386
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -79.733509
[coordinateSystemRotates] [195]: coordinate system rotated X = 6.524386
[coordinateSystemRotates] [196]: coordinate system rotated Y = -79.733509
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 344.469701, accumulateXY.distanceY = -80.360869
[calcDestination] [78]: destinationCoord latitude = 40.356985  destinationCoord longitude = 116.820384
[insertNode] [1270]: childNode's preSegmentId = 42
[displayNodeCoordinate] [114]: 42's startCoordinate: latitude = 40.356927, longitude = 116.821324
[displayNodeCoordinate] [115]: 42's endCoordinate: latitude = 40.356985, longitude = 116.820384
[insertNode] [1200]: (*it)->preSegmentId = 43's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ec9a0
[findNodeById] [868]: result = 0x563e366ec9a0
[findNodeById] [868]: result = 0x563e366ec9a0
[findNodeById] [868]: result = 0x563e366ec9a0
[findNodeById] [868]: result = 0x563e366ec9a0
[findNodeById] [868]: result = 0x563e366ec9a0
[findNodeById] [868]: result = 0x563e366ec9a0
[findNodeById] [868]: result = 0x563e366ec9a0
[insertNode] [1248]: tempNode is = 0x563e366ec9a0, preSegmentId = 43, prevSegmentId = 38, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ece10
[insertChildNode] [1144]: childNode = 0x563e366ece10
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 30.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 30.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 30.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.964993
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 29.984476
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.964993
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 29.984476
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.964993
[coordinateSystemRotates] [196]: coordinate system rotated Y = 29.984476
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 323.527725, accumulateXY.distanceY = 91.237604
[calcDestination] [78]: destinationCoord latitude = 40.356797  destinationCoord longitude = 116.822407
[insertNode] [1270]: childNode's preSegmentId = 43
[displayNodeCoordinate] [114]: 43's startCoordinate: latitude = 40.356806, longitude = 116.822053
[displayNodeCoordinate] [115]: 43's endCoordinate: latitude = 40.356797, longitude = 116.822407
[insertNode] [1200]: (*it)->preSegmentId = 44's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[insertNode] [1248]: tempNode is = 0x563e366ece10, preSegmentId = 44, prevSegmentId = 43, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ecee0
[insertChildNode] [1144]: childNode = 0x563e366ecee0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.222624
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.998623
[coordinateSystemRotates] [181]: accumulateBranchAngle = 2.551969, accumulateBranchAngleRad = 0.044540
[coordinateSystemRotates] [182]: dX = 0.222624
[coordinateSystemRotates] [183]: dY = -17.998623
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999008
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.044526
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.222403
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.801398
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.009912
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -17.980773
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.023801
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -17.970861
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.023801
[coordinateSystemRotates] [196]: coordinate system rotated Y = -17.970861
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 324.551526, accumulateXY.distanceY = 73.266743
[calcDestination] [78]: destinationCoord latitude = 40.356806  destinationCoord longitude = 116.822195
[insertNode] [1270]: childNode's preSegmentId = 44
[displayNodeCoordinate] [114]: 44's startCoordinate: latitude = 40.356797, longitude = 116.822407
[displayNodeCoordinate] [115]: 44's endCoordinate: latitude = 40.356806, longitude = 116.822195
[insertNode] [1200]: (*it)->preSegmentId = 45's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[findNodeById] [868]: result = 0x563e366ece10
[insertNode] [1248]: tempNode is = 0x563e366ece10, preSegmentId = 45, prevSegmentId = 43, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ecfd0
[insertChildNode] [1144]: childNode = 0x563e366ecfd0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 42.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 42.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 42.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -1.350990
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 41.978266
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.350990
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 41.978266
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.350990
[coordinateSystemRotates] [196]: coordinate system rotated Y = 41.978266
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 322.176735, accumulateXY.distanceY = 133.215870
[calcDestination] [78]: destinationCoord latitude = 40.356785  destinationCoord longitude = 116.822901
[insertNode] [1270]: childNode's preSegmentId = 45
[displayNodeCoordinate] [114]: 45's startCoordinate: latitude = 40.356797, longitude = 116.822407
[displayNodeCoordinate] [115]: 45's endCoordinate: latitude = 40.356785, longitude = 116.822901
[insertNode] [1200]: (*it)->preSegmentId = 46's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[findNodeById] [868]: result = 0x563e366ecd20
[insertNode] [1248]: tempNode is = 0x563e366ecd20, preSegmentId = 46, prevSegmentId = 42, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed0c0
[insertChildNode] [1144]: childNode = 0x563e366ed0c0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 28.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 28.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 28.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 1.592580
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -27.954672
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.592580
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -27.954672
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.592580
[coordinateSystemRotates] [196]: coordinate system rotated Y = -27.954672
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 346.062281, accumulateXY.distanceY = -108.315541
[calcDestination] [78]: destinationCoord latitude = 40.357000  destinationCoord longitude = 116.820054
[insertNode] [1270]: childNode's preSegmentId = 46
[displayNodeCoordinate] [114]: 46's startCoordinate: latitude = 40.356985, longitude = 116.820384
[displayNodeCoordinate] [115]: 46's endCoordinate: latitude = 40.357000, longitude = 116.820054
[insertNode] [1200]: (*it)->preSegmentId = 47's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[insertNode] [1248]: tempNode is = 0x563e366ecee0, preSegmentId = 47, prevSegmentId = 44, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed190
[insertChildNode] [1144]: childNode = 0x563e366ed190
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 90.708672
[calcStraightXYOffset] [206]: BranchAngleRad = 1.583165
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.247367
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 19.998470
[coordinateSystemRotates] [181]: accumulateBranchAngle = 93.260641, accumulateBranchAngleRad = 1.627705
[coordinateSystemRotates] [182]: dX = -0.247367
[coordinateSystemRotates] [183]: dY = 19.998470
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.014070
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 19.966095
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.246966
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -1.137477
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -19.952025
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -1.384444
[coordinateSystemRotates] [195]: coordinate system rotated X = -19.952025
[coordinateSystemRotates] [196]: coordinate system rotated Y = -1.384444
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 304.599500, accumulateXY.distanceY = 71.882300
[calcDestination] [78]: destinationCoord latitude = 40.356627  destinationCoord longitude = 116.822178
[insertNode] [1270]: childNode's preSegmentId = 47
[displayNodeCoordinate] [114]: 47's startCoordinate: latitude = 40.356806, longitude = 116.822195
[displayNodeCoordinate] [115]: 47's endCoordinate: latitude = 40.356627, longitude = 116.822178
[insertNode] [1200]: (*it)->preSegmentId = 48's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[findNodeById] [868]: result = 0x563e366ecee0
[insertNode] [1248]: tempNode is = 0x563e366ecee0, preSegmentId = 48, prevSegmentId = 44, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed280
[insertChildNode] [1144]: childNode = 0x563e366ed280
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 38.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.469983
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -37.997094
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 0.469983
[coordinateSystemRotates] [183]: dY = -37.997094
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.026732
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 37.935582
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.469222
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -2.161193
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -37.908850
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -2.630415
[coordinateSystemRotates] [195]: coordinate system rotated X = -37.908850
[coordinateSystemRotates] [196]: coordinate system rotated Y = -2.630415
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 286.642676, accumulateXY.distanceY = 70.636328
[calcDestination] [78]: destinationCoord latitude = 40.356466  destinationCoord longitude = 116.822164
[insertNode] [1270]: childNode's preSegmentId = 48
[displayNodeCoordinate] [114]: 48's startCoordinate: latitude = 40.356806, longitude = 116.822195
[displayNodeCoordinate] [115]: 48's endCoordinate: latitude = 40.356466, longitude = 116.822164
[insertNode] [1200]: (*it)->preSegmentId = 49's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[insertNode] [1248]: tempNode is = 0x563e366ecfd0, preSegmentId = 49, prevSegmentId = 45, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed370
[insertChildNode] [1144]: childNode = 0x563e366ed370
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 120.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 120.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 120.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -3.859970
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 119.937903
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -3.859970
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 119.937903
[coordinateSystemRotates] [195]: coordinate system rotated X = -3.859970
[coordinateSystemRotates] [196]: coordinate system rotated Y = 119.937903
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 318.316765, accumulateXY.distanceY = 253.153773
[calcDestination] [78]: destinationCoord latitude = 40.356750  destinationCoord longitude = 116.824315
[insertNode] [1270]: childNode's preSegmentId = 49
[displayNodeCoordinate] [114]: 49's startCoordinate: latitude = 40.356785, longitude = 116.822901
[displayNodeCoordinate] [115]: 49's endCoordinate: latitude = 40.356750, longitude = 116.824315
[insertNode] [1200]: (*it)->preSegmentId = 50's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[findNodeById] [868]: result = 0x563e366ecfd0
[insertNode] [1248]: tempNode is = 0x563e366ecfd0, preSegmentId = 50, prevSegmentId = 45, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed440
[insertChildNode] [1144]: childNode = 0x563e366ed440
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 90.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -3.338739
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 89.938050
[coordinateSystemRotates] [181]: accumulateBranchAngle = 183.969313, accumulateBranchAngleRad = 3.210870
[coordinateSystemRotates] [182]: dX = -3.338739
[coordinateSystemRotates] [183]: dY = 89.938050
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.997601
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.069222
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 3.330730
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -6.225708
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.231115
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -89.722313
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 9.556438
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -89.491198
[coordinateSystemRotates] [195]: coordinate system rotated X = 9.556438
[coordinateSystemRotates] [196]: coordinate system rotated Y = -89.491198
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 331.733173, accumulateXY.distanceY = 43.724672
[calcDestination] [78]: destinationCoord latitude = 40.356871  destinationCoord longitude = 116.821846
[insertNode] [1270]: childNode's preSegmentId = 50
[displayNodeCoordinate] [114]: 50's startCoordinate: latitude = 40.356785, longitude = 116.822901
[displayNodeCoordinate] [115]: 50's endCoordinate: latitude = 40.356871, longitude = 116.821846
[insertNode] [1200]: (*it)->preSegmentId = 51's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[findNodeById] [868]: result = 0x563e366ed0c0
[insertNode] [1248]: tempNode is = 0x563e366ed0c0, preSegmentId = 51, prevSegmentId = 46, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed530
[insertChildNode] [1144]: childNode = 0x563e366ed530
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 18.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 18.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 1.023801
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -17.970861
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.023801
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -17.970861
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.023801
[coordinateSystemRotates] [196]: coordinate system rotated Y = -17.970861
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 347.086082, accumulateXY.distanceY = -126.286401
[calcDestination] [78]: destinationCoord latitude = 40.357009  destinationCoord longitude = 116.819842
[insertNode] [1270]: childNode's preSegmentId = 51
[displayNodeCoordinate] [114]: 51's startCoordinate: latitude = 40.357000, longitude = 116.820054
[displayNodeCoordinate] [115]: 51's endCoordinate: latitude = 40.357009, longitude = 116.819842
[insertNode] [1200]: (*it)->preSegmentId = 52's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[findNodeById] [868]: result = 0x563e366ed280
[insertNode] [1248]: tempNode is = 0x563e366ed280, preSegmentId = 52, prevSegmentId = 48, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed600
[insertChildNode] [1144]: childNode = 0x563e366ed600
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 52.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 52.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 52.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 2.957648
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -51.915820
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 2.957648
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -51.915820
[coordinateSystemRotates] [195]: coordinate system rotated X = 2.957648
[coordinateSystemRotates] [196]: coordinate system rotated Y = -51.915820
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 289.600323, accumulateXY.distanceY = 18.720509
[calcDestination] [78]: destinationCoord latitude = 40.356493  destinationCoord longitude = 116.821552
[insertNode] [1270]: childNode's preSegmentId = 52
[displayNodeCoordinate] [114]: 52's startCoordinate: latitude = 40.356466, longitude = 116.822164
[displayNodeCoordinate] [115]: 52's endCoordinate: latitude = 40.356493, longitude = 116.821552
[insertNode] [1200]: (*it)->preSegmentId = 53's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[insertNode] [1248]: tempNode is = 0x563e366ed530, preSegmentId = 53, prevSegmentId = 51, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed6f0
[insertChildNode] [1144]: childNode = 0x563e366ed6f0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 16.000000, BranchAngle = 97.795287
[calcStraightXYOffset] [206]: BranchAngleRad = 1.706850
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -2.170145
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 15.852144
[coordinateSystemRotates] [181]: accumulateBranchAngle = 11.055907, accumulateBranchAngleRad = 0.192962
[coordinateSystemRotates] [182]: dX = -2.170145
[coordinateSystemRotates] [183]: dY = 15.852144
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.981441
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.191767
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -2.129868
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 3.039914
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.416162
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 15.557937
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -5.169782
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 15.141775
[coordinateSystemRotates] [195]: coordinate system rotated X = -5.169782
[coordinateSystemRotates] [196]: coordinate system rotated Y = 15.141775
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 341.916299, accumulateXY.distanceY = -111.144626
[calcDestination] [78]: destinationCoord latitude = 40.356962  destinationCoord longitude = 116.820021
[insertNode] [1270]: childNode's preSegmentId = 53
[displayNodeCoordinate] [114]: 53's startCoordinate: latitude = 40.357009, longitude = 116.819842
[displayNodeCoordinate] [115]: 53's endCoordinate: latitude = 40.356962, longitude = 116.820021
[insertNode] [1200]: (*it)->preSegmentId = 54's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[insertNode] [1248]: tempNode is = 0x563e366ed530, preSegmentId = 54, prevSegmentId = 51, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed7e0
[insertChildNode] [1144]: childNode = 0x563e366ed7e0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -87.874026
[calcStraightXYOffset] [206]: BranchAngleRad = -1.533691
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.667741
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.987610
[coordinateSystemRotates] [181]: accumulateBranchAngle = -174.613406, accumulateBranchAngleRad = -3.047579
[coordinateSystemRotates] [182]: dX = 0.667741
[coordinateSystemRotates] [183]: dY = -17.987610
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.995584
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.093875
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.664792
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 1.688594
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.062684
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 17.908176
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.353386
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 17.845492
[coordinateSystemRotates] [195]: coordinate system rotated X = -2.353386
[coordinateSystemRotates] [196]: coordinate system rotated Y = 17.845492
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 344.732696, accumulateXY.distanceY = -108.440909
[calcDestination] [78]: destinationCoord latitude = 40.356988  destinationCoord longitude = 116.820053
[insertNode] [1270]: childNode's preSegmentId = 54
[displayNodeCoordinate] [114]: 54's startCoordinate: latitude = 40.357009, longitude = 116.819842
[displayNodeCoordinate] [115]: 54's endCoordinate: latitude = 40.356988, longitude = 116.820053
[insertNode] [1200]: (*it)->preSegmentId = 55's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[findNodeById] [868]: result = 0x563e366ed530
[insertNode] [1248]: tempNode is = 0x563e366ed530, preSegmentId = 55, prevSegmentId = 51, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed8d0
[insertChildNode] [1144]: childNode = 0x563e366ed8d0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 16.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 16.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 16.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.910045
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -15.974098
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.910045
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -15.974098
[coordinateSystemRotates] [195]: coordinate system rotated X = 0.910045
[coordinateSystemRotates] [196]: coordinate system rotated Y = -15.974098
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 347.996127, accumulateXY.distanceY = -142.260500
[calcDestination] [78]: destinationCoord latitude = 40.357017  destinationCoord longitude = 116.819654
[insertNode] [1270]: childNode's preSegmentId = 55
[displayNodeCoordinate] [114]: 55's startCoordinate: latitude = 40.357009, longitude = 116.819842
[displayNodeCoordinate] [115]: 55's endCoordinate: latitude = 40.357017, longitude = 116.819654
[insertNode] [1200]: (*it)->preSegmentId = 56's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[insertNode] [1248]: tempNode is = 0x563e366ed8d0, preSegmentId = 56, prevSegmentId = 55, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ed9a0
[insertChildNode] [1144]: childNode = 0x563e366ed9a0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 80.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 80.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 80.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [195]: coordinate system rotated X = 4.550227
[coordinateSystemRotates] [196]: coordinate system rotated Y = -79.870492
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 352.546355, accumulateXY.distanceY = -222.130991
[calcDestination] [78]: destinationCoord latitude = 40.357058  destinationCoord longitude = 116.818713
[insertNode] [1270]: childNode's preSegmentId = 56
[displayNodeCoordinate] [114]: 56's startCoordinate: latitude = 40.357017, longitude = 116.819654
[displayNodeCoordinate] [115]: 56's endCoordinate: latitude = 40.357058, longitude = 116.818713
[insertNode] [1200]: (*it)->preSegmentId = 56's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[findNodeById] [868]: result = 0x563e366ed8d0
[insertNode] [1248]: tempNode is = 0x563e366ed8d0, preSegmentId = 56, prevSegmentId = 55, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eda70
[insertChildNode] [1144]: childNode = 0x563e366eda70
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 80.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 80.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 80.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [195]: coordinate system rotated X = 4.550227
[coordinateSystemRotates] [196]: coordinate system rotated Y = -79.870492
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 352.546355, accumulateXY.distanceY = -222.130991
[calcDestination] [78]: destinationCoord latitude = 40.357058  destinationCoord longitude = 116.818713
[insertNode] [1270]: childNode's preSegmentId = 56
[displayNodeCoordinate] [114]: 56's startCoordinate: latitude = 40.357017, longitude = 116.819654
[displayNodeCoordinate] [115]: 56's endCoordinate: latitude = 40.357058, longitude = 116.818713
[insertNode] [1200]: (*it)->preSegmentId = 57's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[insertNode] [1248]: tempNode is = 0x563e366ed7e0, preSegmentId = 57, prevSegmentId = 54, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366edb40
[insertChildNode] [1144]: childNode = 0x563e366edb40
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 16.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.197888
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -15.998776
[coordinateSystemRotates] [181]: accumulateBranchAngle = -263.904755, accumulateBranchAngleRad = -4.606007
[coordinateSystemRotates] [182]: dX = 0.197888
[coordinateSystemRotates] [183]: dY = -15.998776
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.106182
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.994347
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.021012
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -15.908331
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.196769
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 1.698775
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 15.887319
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.895544
[coordinateSystemRotates] [195]: coordinate system rotated X = 15.887319
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.895544
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 360.620015, accumulateXY.distanceY = -106.545366
[calcDestination] [78]: destinationCoord latitude = 40.357131  destinationCoord longitude = 116.820075
[insertNode] [1270]: childNode's preSegmentId = 57
[displayNodeCoordinate] [114]: 57's startCoordinate: latitude = 40.356988, longitude = 116.820053
[displayNodeCoordinate] [115]: 57's endCoordinate: latitude = 40.357131, longitude = 116.820075
[insertNode] [1200]: (*it)->preSegmentId = 58's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[insertNode] [1248]: tempNode is = 0x563e366ed7e0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366edc10
[insertChildNode] [1144]: childNode = 0x563e366edc10
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 14.000000, BranchAngle = 89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = 1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.173152
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 13.998929
[coordinateSystemRotates] [181]: accumulateBranchAngle = -85.322057, accumulateBranchAngleRad = -1.489151
[coordinateSystemRotates] [182]: dX = 0.173152
[coordinateSystemRotates] [183]: dY = 13.998929
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.081555
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.996669
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.014121
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -13.952297
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.172575
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 1.141680
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 13.966418
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.969105
[coordinateSystemRotates] [195]: coordinate system rotated X = 13.966418
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.969105
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 358.699114, accumulateXY.distanceY = -107.471804
[calcDestination] [78]: destinationCoord latitude = 40.357113  destinationCoord longitude = 116.820064
[insertNode] [1270]: childNode's preSegmentId = 58
[displayNodeCoordinate] [114]: 58's startCoordinate: latitude = 40.356988, longitude = 116.820053
[displayNodeCoordinate] [115]: 58's endCoordinate: latitude = 40.357113, longitude = 116.820064
[insertNode] [1200]: (*it)->preSegmentId = 58's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[findNodeById] [868]: result = 0x563e366ed7e0
[insertNode] [1248]: tempNode is = 0x563e366ed7e0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366edd00
[insertChildNode] [1144]: childNode = 0x563e366edd00
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 14.000000, BranchAngle = 89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = 1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.173152
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 13.998929
[coordinateSystemRotates] [181]: accumulateBranchAngle = -85.322057, accumulateBranchAngleRad = -1.489151
[coordinateSystemRotates] [182]: dX = 0.173152
[coordinateSystemRotates] [183]: dY = 13.998929
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.081555
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.996669
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.014121
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -13.952297
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.172575
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 1.141680
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 13.966418
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.969105
[coordinateSystemRotates] [195]: coordinate system rotated X = 13.966418
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.969105
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 358.699114, accumulateXY.distanceY = -107.471804
[calcDestination] [78]: destinationCoord latitude = 40.357113  destinationCoord longitude = 116.820064
[insertNode] [1270]: childNode's preSegmentId = 58
[displayNodeCoordinate] [114]: 58's startCoordinate: latitude = 40.356988, longitude = 116.820053
[displayNodeCoordinate] [115]: 58's endCoordinate: latitude = 40.357113, longitude = 116.820064
[insertNode] [1200]: (*it)->preSegmentId = 59's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[insertNode] [1248]: tempNode is = 0x563e366edb40, preSegmentId = 59, prevSegmentId = 57, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366eddd0
[insertChildNode] [1144]: childNode = 0x563e366eddd0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 10.000000, BranchAngle = 96.377964
[calcStraightXYOffset] [206]: BranchAngleRad = 1.682113
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -1.110867
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 9.938107
[coordinateSystemRotates] [181]: accumulateBranchAngle = -167.526791, accumulateBranchAngleRad = -2.923894
[coordinateSystemRotates] [182]: dX = -1.110867
[coordinateSystemRotates] [183]: dY = 9.938107
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.976397
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.215983
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 1.084648
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -2.146463
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.239929
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -9.703539
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.231111
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -9.463611
[coordinateSystemRotates] [195]: coordinate system rotated X = 3.231111
[coordinateSystemRotates] [196]: coordinate system rotated Y = -9.463611
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 363.851126, accumulateXY.distanceY = -116.008976
[calcDestination] [78]: destinationCoord latitude = 40.357160  destinationCoord longitude = 116.819963
[insertNode] [1270]: childNode's preSegmentId = 59
[displayNodeCoordinate] [114]: 59's startCoordinate: latitude = 40.357131, longitude = 116.820075
[displayNodeCoordinate] [115]: 59's endCoordinate: latitude = 40.357160, longitude = 116.819963
[insertNode] [1200]: (*it)->preSegmentId = 60's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[findNodeById] [868]: result = 0x563e366edb40
[insertNode] [1248]: tempNode is = 0x563e366edb40, preSegmentId = 60, prevSegmentId = 57, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366edea0
[insertChildNode] [1144]: childNode = 0x563e366edea0
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -263.904755, accumulateBranchAngleRad = -4.606007
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.106182
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.994347
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -11.892334
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 111.366837
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -11.892334
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 111.366837
[coordinateSystemRotates] [195]: coordinate system rotated X = -11.892334
[coordinateSystemRotates] [196]: coordinate system rotated Y = 111.366837
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 348.727681, accumulateXY.distanceY = 4.821471
[calcDestination] [78]: destinationCoord latitude = 40.357024  destinationCoord longitude = 116.821388
[insertNode] [1270]: childNode's preSegmentId = 60
[displayNodeCoordinate] [114]: 60's startCoordinate: latitude = 40.357131, longitude = 116.820075
[displayNodeCoordinate] [115]: 60's endCoordinate: latitude = 40.357024, longitude = 116.821388
[insertNode] [1200]: (*it)->preSegmentId = 61's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[findNodeById] [868]: result = 0x563e366eddd0
[insertNode] [1248]: tempNode is = 0x563e366eddd0, preSegmentId = 61, prevSegmentId = 59, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366edf70
[insertChildNode] [1144]: childNode = 0x563e366edf70
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 22.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 21.993269
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -0.544157
[coordinateSystemRotates] [181]: accumulateBranchAngle = -168.944114, accumulateBranchAngleRad = -2.948631
[coordinateSystemRotates] [182]: dX = 21.993269
[coordinateSystemRotates] [183]: dY = -0.544157
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.981441
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.191766
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -21.585087
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.104351
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -4.217570
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.534058
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -21.689439
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -3.683511
[coordinateSystemRotates] [195]: coordinate system rotated X = -21.689439
[coordinateSystemRotates] [196]: coordinate system rotated Y = -3.683511
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 342.161687, accumulateXY.distanceY = -119.692488
[calcDestination] [78]: destinationCoord latitude = 40.356965  destinationCoord longitude = 116.819920
[insertNode] [1270]: childNode's preSegmentId = 61
[displayNodeCoordinate] [114]: 61's startCoordinate: latitude = 40.357160, longitude = 116.819963
[displayNodeCoordinate] [115]: 61's endCoordinate: latitude = 40.356965, longitude = 116.819920
[insertNode] [1200]: (*it)->preSegmentId = 62's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[findNodeById] [868]: result = 0x563e366ed9a0
[insertNode] [1248]: tempNode is = 0x563e366ed9a0, preSegmentId = 62, prevSegmentId = 56, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ee040
[insertChildNode] [1144]: childNode = 0x563e366ee040
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 34.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 34.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 34.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 1.933847
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -33.944959
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.933847
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -33.944959
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.933847
[coordinateSystemRotates] [196]: coordinate system rotated Y = -33.944959
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 354.480201, accumulateXY.distanceY = -256.075950
[calcDestination] [78]: destinationCoord latitude = 40.357075  destinationCoord longitude = 116.818312
[insertNode] [1270]: childNode's preSegmentId = 62
[displayNodeCoordinate] [114]: 62's startCoordinate: latitude = 40.357058, longitude = 116.818713
[displayNodeCoordinate] [115]: 62's endCoordinate: latitude = 40.357075, longitude = 116.818312
[insertNode] [1200]: (*it)->preSegmentId = 63's segIsInTree = 0
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [873]: result = (nil)
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[findNodeById] [868]: result = 0x563e366ebcd0
[insertNode] [1248]: tempNode is = 0x563e366ebcd0, preSegmentId = 63, prevSegmentId = 23, segIsInTree = 0
[createNode] [1136]: newNode = 0x563e366ee130
[insertChildNode] [1144]: childNode = 0x563e366ee130
[calcChildSegmentCoordinate] [259]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 6.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 6.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 94.677964, accumulateBranchAngleRad = 1.652442
[coordinateSystemRotates] [182]: dX = 6.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.081555
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.996669
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.489331
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 5.980013
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.489331
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 5.980013
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.489331
[coordinateSystemRotates] [196]: coordinate system rotated Y = 5.980013
[calcChildSegmentCoordinate] [283]: accumulateXY.distanceX = 619.429339, accumulateXY.distanceY = 12.326709
[calcDestination] [78]: destinationCoord latitude = 40.359455  destinationCoord longitude = 116.821476
[insertNode] [1270]: childNode's preSegmentId = 63
[displayNodeCoordinate] [114]: 63's startCoordinate: latitude = 40.359460, longitude = 116.821406
[displayNodeCoordinate] [115]: 63's endCoordinate: latitude = 40.359455, longitude = 116.821476
[       OK ] PsdMapTest.useRealRecordPsdWithSP (9 ms)
[----------] 1 test from PsdMapTest (9 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (9 ms total)
[  PASSED  ] 1 test.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename PsdModule.info --test-name PsdModule --rc lcov_branch_coverage=1 --branch-coverage'
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_dat9kZy
Scanning . for .gcda files ...
Found 6 data files in .
using: chunkSize: 1, nchunks:6, intervalLength:0
Finished processing 6 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 23
  lines.......: 26.2% (468 of 1786 lines)
  functions...: 53.7% (205 of 382 functions)
  branches....: 14.0% (86 of 616 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile PsdModule.info.
Found 23 entries.
Found common filename prefix "/usr/include/c++"
Generating output.
Processing file /home/zhao/Documents/Psd/inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file 7/bits/vector.tcc
  lines=86 hit=40 functions=9 hit=4 branches=22 hit=6
Processing file 7/iostream
  lines=1 hit=1
Processing file 7/bits/alloc_traits.h
  lines=22 hit=15 functions=21 hit=11
Processing file /home/zhao/Documents/Psd/src/GeometricCalc.cpp
  lines=29 hit=0 functions=1 hit=0
Processing file /home/zhao/Documents/Psd/src/PsdMessageDecoder.cpp
  lines=102 hit=14 functions=19 hit=7 branches=40 hit=4
Processing file 7/bits/move.h
  lines=13 hit=9 functions=11 hit=6
Processing file 7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file /home/zhao/Documents/Psd/src/PsdMap.cpp
  lines=916 hit=191 functions=42 hit=18 branches=256 hit=48
Processing file 7/ext/new_allocator.h
  lines=15 hit=13 functions=22 hit=13 branches=14 hit=3
Processing file /home/zhao/Documents/Psd/src/Location.cpp
  lines=11 hit=1 functions=5 hit=2 branches=4 hit=2
Processing file 7/bits/ptr_traits.h
  lines=2 hit=0 functions=1 hit=0
Processing file 7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=11
Processing file 7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=3
Processing file 7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file /home/zhao/Documents/Psd/inc/PsdMap.h
  lines=1 hit=1 functions=1 hit=1
Processing file 7/bits/stl_iterator.h
  lines=41 hit=22 functions=56 hit=26
Processing file /home/zhao/Documents/Psd/src/PsdLocation.cpp
  lines=320 hit=1 functions=22 hit=2 branches=224 hit=2
Processing file 7/bits/stl_algobase.h
  lines=37 hit=20 functions=33 hit=18 branches=14 hit=7
Processing file 7/new
  lines=2 hit=2 functions=1 hit=1
Processing file 7/bits/allocator.h
  lines=6 hit=4 functions=7 hit=5
Processing file /home/zhao/Documents/Psd/src/Haversine.cpp
  lines=35 hit=19 functions=8 hit=5 branches=4 hit=2
Processing file 7/bits/stl_vector.h
  lines=121 hit=91 functions=79 hit=53 branches=38 hit=12
Overall coverage rate:
  source files: 23
  lines.......: 26.2% (468 of 1786 lines)
  functions...: 53.7% (205 of 382 functions)
  branches....: 14.0% (86 of 616 branches)
Message summary:
  no messages were reported
