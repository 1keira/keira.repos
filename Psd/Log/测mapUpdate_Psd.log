-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd/build
[ 12%] Building CXX object CMakeFiles/PsdModule.dir/src/GeometricCalc.cpp.o
[ 25%] Building CXX object CMakeFiles/PsdModule.dir/src/Haversine.cpp.o
[ 37%] Building CXX object CMakeFiles/PsdModule.dir/src/Location.cpp.o
[ 50%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdLocation.cpp.o
[ 62%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMap.cpp.o
[ 75%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMessageDecoder.cpp.o
[ 87%] Building CXX object CMakeFiles/PsdModule.dir/gtest/src/PsdTest.cpp.o
[100%] Linking CXX executable /home/zhao/Documents/Psd/gtest/output/bin/PsdModule
[100%] Built target PsdModule
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from PsdMapTest
[ RUN      ] PsdMapTest.useRealRecordPsdWithCurve
open successfully
[TestBody] [4713]: hvHeading = 0.000000
[TestBody] [4724]: headingAccuracy = 2.250000
[TestBody] [4448]: preSegmentId = 54
[TestBody] [4462]: prevSegmentId = 51
[TestBody] [4475]: preSegTotalLength = 40
[TestBody] [4448]: preSegmentId = 58
[TestBody] [4462]: prevSegmentId = 54
[TestBody] [4475]: preSegTotalLength = 26
[TestBody] [4448]: preSegmentId = 16
[TestBody] [4462]: prevSegmentId = 58
[TestBody] [4475]: preSegTotalLength = 24
[TestBody] [4448]: preSegmentId = 33
[TestBody] [4462]: prevSegmentId = 16
[TestBody] [4475]: preSegTotalLength = 2
[TestBody] [4448]: preSegmentId = 35
[TestBody] [4462]: prevSegmentId = 33
[TestBody] [4475]: preSegTotalLength = 30
[TestBody] [4448]: preSegmentId = 42
[TestBody] [4462]: prevSegmentId = 35
[TestBody] [4475]: preSegTotalLength = 34
[TestBody] [4448]: preSegmentId = 47
[TestBody] [4462]: prevSegmentId = 42
[TestBody] [4475]: preSegTotalLength = 20
[TestBody] [4448]: preSegmentId = 52
[TestBody] [4462]: prevSegmentId = 47
[TestBody] [4475]: preSegTotalLength = 10
[TestBody] [4448]: preSegmentId = 53
[TestBody] [4462]: prevSegmentId = 52
[TestBody] [4475]: preSegTotalLength = 36
[TestBody] [4448]: preSegmentId = 50
[TestBody] [4462]: prevSegmentId = 47
[TestBody] [4475]: preSegTotalLength = 34
[TestBody] [4598]: curSegmentId = 54
[TestBody] [4610]: curRemainLength = 38
[TestBody] [4677]: curSegment's latitude = 40.344001
[TestBody] [4696]: curSegment's longitude = 116.818758
[TestBody] [4713]: hvHeading = 143.600000
[TestBody] [4724]: headingAccuracy = 2.250000
[TestBody] [4448]: preSegmentId = 5
[TestBody] [4462]: prevSegmentId = 50
[TestBody] [4475]: preSegTotalLength = 26
[TestBody] [4448]: preSegmentId = 9
[TestBody] [4462]: prevSegmentId = 5
[TestBody] [4475]: preSegTotalLength = 26
[TestBody] [4448]: preSegmentId = 11
[TestBody] [4462]: prevSegmentId = 9
[TestBody] [4475]: preSegTotalLength = 34
[TestBody] [4448]: preSegmentId = 13
[TestBody] [4462]: prevSegmentId = 11
[TestBody] [4475]: preSegTotalLength = 28
[TestBody] [4448]: preSegmentId = 15
[TestBody] [4462]: prevSegmentId = 13
[TestBody] [4475]: preSegTotalLength = 32
[TestBody] [4448]: preSegmentId = 17
[TestBody] [4462]: prevSegmentId = 15
[TestBody] [4475]: preSegTotalLength = 32
[TestBody] [4448]: preSegmentId = 21
[TestBody] [4462]: prevSegmentId = 17
[TestBody] [4475]: preSegTotalLength = 26
[getInstance] [51]: first new a pInstance
[mapCreate] [1437]: --------------------------mapCreate------------------------------
[createNode] [1098]: newNode = 0x55a257cdfdc0
[insertNodeInTree] [1247]: curNode = 0x55a257cdfdc0
[curIdIsInList] [1451]: curSegmentId is in list = 54
[insertNodeInTree] [1273]: count = 1
[insertNodeInTree] [1274]: current tree is = 0x55a257cdfdc0, current tree Id is = 54, curSegmentId is = 54
[calcCurSegmentCoordinate] [532]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [565]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [590]: R = 52.900776
[calcCurSegmentCoordinate] [623]: finalRemainLength = 38.000000
[calcCurSegmentCoordinate] [650]: Sa = 27.605887, Se = 10.394113
[calcCurveXYOffset] [219]: arcR = 52.900776, arcRotationAngle = 29.899388, arcRotationAngleRad = 0.521843, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.133098
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -7.040984
[calcCurveXYOffset] [225]: dX = 26.369898
[calcCurveXYOffset] [226]: dY = 7.040984
[coordinateSystemRotates] [162]: accumulateBranchAngle = 143.600000, accumulateBranchAngleRad = 2.506293
[coordinateSystemRotates] [163]: dX = 26.369898
[coordinateSystemRotates] [164]: dY = 7.040984
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.804894
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.593419
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -21.224968
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 4.178253
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 15.648396
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.667244
[coordinateSystemRotates] [174]: coordinate system rotated X = -25.403220
[coordinateSystemRotates] [175]: coordinate system rotated Y = 9.981152
[calcCurSegmentCoordinate] [658]: first half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -25.403220, disHv2EndAfterRotatingCoord.distanceY = 9.981152
[calcDestination] [78]: destinationCoord latitude = 40.343773  destinationCoord longitude = 116.818876
[calcCurSegmentCoordinate] [661]: HV's one SampleCoord before the endCoord  latitude = 40.343773  longitude = 116.818876
[calcCurSegmentCoordinate] [664]: accumulateBranchAngleHv2End = 173.499388
[calcCurSegmentCoordinate] [666]: fixed accumulateBranchAngleHv2End = 173.499388
[calcCurveXYOffset] [219]: arcR = 140.500000, arcRotationAngle = 4.238710, arcRotationAngleRad = 0.073979, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.002735
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.384300
[calcCurveXYOffset] [225]: dX = 10.384634
[calcCurveXYOffset] [226]: dY = 0.384300
[coordinateSystemRotates] [162]: accumulateBranchAngle = 173.499388, accumulateBranchAngleRad = 3.028136
[coordinateSystemRotates] [163]: dX = 10.384634
[coordinateSystemRotates] [164]: dY = 0.384300
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.993571
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.113214
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -10.317868
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.043508
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 1.175684
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.381829
[coordinateSystemRotates] [174]: coordinate system rotated X = -10.361376
[coordinateSystemRotates] [175]: coordinate system rotated Y = 0.793855
[calcCurSegmentCoordinate] [674]: second half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -35.764596, disHv2EndAfterRotatingCoord.distanceY = 10.775007
[calcDestination] [78]: destinationCoord latitude = 40.343680  destinationCoord longitude = 116.818885
[calcCurSegmentCoordinate] [676]: HV's endCoordinate latitude = 40.343680  longitude = 116.818885
[calcCurSegmentCoordinate] [679]: accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [681]: fixed accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [685]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [688]: accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [690]: fixed accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [700]: R = 52.900776
[calcCurSegmentCoordinate] [728]: finalRemainLength = 2.000000
[calcCurSegmentCoordinate] [752]: Sa = 0.983857, Se = 1.016143
[calcCurveXYOffset] [219]: arcR = 52.900776, arcRotationAngle = 1.065596, arcRotationAngleRad = 0.018598, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.000173
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.009149
[calcCurveXYOffset] [225]: dX = 0.983801
[calcCurveXYOffset] [226]: dY = 0.009149
[coordinateSystemRotates] [162]: accumulateBranchAngle = 323.600000, accumulateBranchAngleRad = 5.647885
[coordinateSystemRotates] [163]: dX = 0.983801
[coordinateSystemRotates] [164]: dY = 0.983801
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.804894
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.593419
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [174]: coordinate system rotated X = 1.375661
[coordinateSystemRotates] [175]: coordinate system rotated Y = 0.208049
[calcCurSegmentCoordinate] [760]: first half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 1.375661, disHv2StartAfterRotatingCoord.distanceY = 0.208049
[calcDestination] [78]: destinationCoord latitude = 40.344013  destinationCoord longitude = 116.818760
[calcCurSegmentCoordinate] [763]: HV's one SampleCoord before the startCoord latitude = 40.344013  longitude = 116.818760
[calcCurSegmentCoordinate] [766]: accumulateBranchAngleHv2Start = 322.534404
[calcCurSegmentCoordinate] [768]: fixed accumulateBranchAngleHv2Start = 322.534404
[calcCurveXYOffset] [219]: arcR = 51.220000, arcRotationAngle = 1.136679, arcRotationAngleRad = 0.019839, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.000197
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.010079
[calcCurveXYOffset] [225]: dX = 1.016076
[calcCurveXYOffset] [226]: dY = 0.010079
[coordinateSystemRotates] [162]: accumulateBranchAngle = 322.534404, accumulateBranchAngleRad = 5.629287
[coordinateSystemRotates] [163]: dX = 1.016076
[coordinateSystemRotates] [164]: dY = 0.010079
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.793719
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.608285
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 0.806478
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.006131
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -0.618064
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.008000
[coordinateSystemRotates] [174]: coordinate system rotated X = 0.812609
[coordinateSystemRotates] [175]: coordinate system rotated Y = -0.610064
[calcCurSegmentCoordinate] [775]: second half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 2.188271, disHv2StartAfterRotatingCoord.distanceY = -0.402014
[calcDestination] [78]: destinationCoord latitude = 40.344021  destinationCoord longitude = 116.818753
[calcCurSegmentCoordinate] [777]: HV's startCoordinate latitude = 40.344021  longitude = 116.818753
[calcCurSegmentCoordinate] [780]: accumulateBranchAngleHv2Start = 321.397725
[calcCurSegmentCoordinate] [782]: fixed accumulateBranchAngleHv2Start = 321.397725
[displayNodeCoordinate] [100]: 54's startCoordinate: latitude = 40.344021, longitude = 116.818753
[displayNodeCoordinate] [103]: 54's SampleCoord: latitude = 40.344013, longitude = 116.818760
[displayNodeCoordinate] [103]: 54's SampleCoord: latitude = 40.343773, longitude = 116.818876
[displayNodeCoordinate] [105]: 54's endCoordinate: latitude = 40.343680, longitude = 116.818885
[insertNode] [1162]: (*it)->preSegmentId = 54's segIsInTree = 1
[findNodeById] [835]: result = (nil)
[insertNode] [1208]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[insertNode] [1240]: goto check the next segment info from vPsdMap
[insertNode] [1162]: (*it)->preSegmentId = 58's segIsInTree = 0
[insertNode] [1208]: tempNode is = 0x55a257cdfdc0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257cdfe80
[insertChildNode] [1106]: childNode = 0x55a257cdfe80
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [225]: dX = 25.106327
[calcCurveXYOffset] [226]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 213.171173, accumulateBranchAngleRad = 3.720539
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.837040
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.547142
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -21.014992
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.191023
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -13.736730
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.881753
[coordinateSystemRotates] [174]: coordinate system rotated X = -24.206015
[coordinateSystemRotates] [175]: coordinate system rotated Y = -8.854977
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -59.970611, accumulateXY.distanceY = 1.920030
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818781
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818781
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 187.015607
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 187.015607
[insertNode] [1229]: childNode's preSegmentId = 58
[displayNodeCoordinate] [100]: 58's startCoordinate: latitude = 40.343680, longitude = 116.818885
[displayNodeCoordinate] [105]: 58's endCoordinate: latitude = 40.343462, longitude = 116.818781
[insertNode] [1162]: (*it)->preSegmentId = 16's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257cdfe80
[insertNode] [1208]: tempNode is = 0x55a257cdfe80, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257cdff40
[insertChildNode] [1106]: childNode = 0x55a257cdff40
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 24.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [225]: dX = 23.296017
[calcCurveXYOffset] [226]: dY = -4.982242
[coordinateSystemRotates] [162]: accumulateBranchAngle = 187.015607, accumulateBranchAngleRad = 3.264038
[coordinateSystemRotates] [163]: dX = 23.296017
[coordinateSystemRotates] [164]: dY = -4.982242
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.992513
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.122140
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -23.121598
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.608530
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -2.845369
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.944939
[coordinateSystemRotates] [174]: coordinate system rotated X = -23.730127
[coordinateSystemRotates] [175]: coordinate system rotated Y = 2.099571
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -83.700738, accumulateXY.distanceY = 4.019600
[calcDestination] [78]: destinationCoord latitude = 40.343249  destinationCoord longitude = 116.818805
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343249  longitude = 116.818805
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 162.872007
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 162.872007
[insertNode] [1229]: childNode's preSegmentId = 16
[displayNodeCoordinate] [100]: 16's startCoordinate: latitude = 40.343462, longitude = 116.818781
[displayNodeCoordinate] [105]: 16's endCoordinate: latitude = 40.343249, longitude = 116.818805
[insertNode] [1162]: (*it)->preSegmentId = 33's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257cdff40
[findNodeById] [830]: result = 0x55a257cdff40
[insertNode] [1208]: tempNode is = 0x55a257cdff40, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0000
[insertChildNode] [1106]: childNode = 0x55a257ce0000
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [225]: dX = 1.999589
[calcCurveXYOffset] [226]: dY = -0.035112
[coordinateSystemRotates] [162]: accumulateBranchAngle = 162.872007, accumulateBranchAngleRad = 2.842653
[coordinateSystemRotates] [163]: dX = 1.999589
[coordinateSystemRotates] [164]: dY = -0.035112
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.955649
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.294507
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.910906
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.010341
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 0.588893
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.033555
[coordinateSystemRotates] [174]: coordinate system rotated X = -1.900565
[coordinateSystemRotates] [175]: coordinate system rotated Y = 0.622448
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -85.601303, accumulateXY.distanceY = 4.642048
[calcDestination] [78]: destinationCoord latitude = 40.343232  destinationCoord longitude = 116.818813
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343232  longitude = 116.818813
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 160.860041
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 160.860041
[insertNode] [1229]: childNode's preSegmentId = 33
[displayNodeCoordinate] [100]: 33's startCoordinate: latitude = 40.343249, longitude = 116.818805
[displayNodeCoordinate] [105]: 33's endCoordinate: latitude = 40.343232, longitude = 116.818813
[insertNode] [1162]: (*it)->preSegmentId = 35's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257ce0000
[findNodeById] [830]: result = 0x55a257ce0000
[findNodeById] [830]: result = 0x55a257ce0000
[insertNode] [1208]: tempNode is = 0x55a257ce0000, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce00c0
[insertChildNode] [1106]: childNode = 0x55a257ce00c0
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [225]: dX = 28.631886
[calcCurveXYOffset] [226]: dY = -7.719981
[coordinateSystemRotates] [162]: accumulateBranchAngle = 160.860041, accumulateBranchAngleRad = 2.807537
[coordinateSystemRotates] [163]: dX = 28.631886
[coordinateSystemRotates] [164]: dY = -7.719981
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.944720
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.327877
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -27.049129
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -2.531203
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 9.387733
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 7.293224
[coordinateSystemRotates] [174]: coordinate system rotated X = -24.517926
[coordinateSystemRotates] [175]: coordinate system rotated Y = 16.680957
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -110.119230, accumulateXY.distanceY = 21.323005
[calcDestination] [78]: destinationCoord latitude = 40.343012  destinationCoord longitude = 116.819009
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343012  longitude = 116.819009
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 130.680542
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 130.680542
[insertNode] [1229]: childNode's preSegmentId = 35
[displayNodeCoordinate] [100]: 35's startCoordinate: latitude = 40.343232, longitude = 116.818813
[displayNodeCoordinate] [105]: 35's endCoordinate: latitude = 40.343012, longitude = 116.819009
[insertNode] [1162]: (*it)->preSegmentId = 42's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257ce00c0
[findNodeById] [830]: result = 0x55a257ce00c0
[findNodeById] [830]: result = 0x55a257ce00c0
[findNodeById] [830]: result = 0x55a257ce00c0
[insertNode] [1208]: tempNode is = 0x55a257ce00c0, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0180
[insertChildNode] [1106]: childNode = 0x55a257ce0180
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [225]: dX = 32.016281
[calcCurveXYOffset] [226]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 126.428573, accumulateBranchAngleRad = 2.206595
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.593820
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.804598
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -19.011914
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -7.925726
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 25.760228
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 5.849452
[coordinateSystemRotates] [174]: coordinate system rotated X = -11.086189
[coordinateSystemRotates] [175]: coordinate system rotated Y = 31.609680
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -121.205418, accumulateXY.distanceY = 52.932685
[calcDestination] [78]: destinationCoord latitude = 40.342912  destinationCoord longitude = 116.819382
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.342912  longitude = 116.819382
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 92.225140
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 92.225140
[insertNode] [1229]: childNode's preSegmentId = 42
[displayNodeCoordinate] [100]: 42's startCoordinate: latitude = 40.343012, longitude = 116.819009
[displayNodeCoordinate] [105]: 42's endCoordinate: latitude = 40.342912, longitude = 116.819382
[insertNode] [1162]: (*it)->preSegmentId = 47's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[insertNode] [1208]: tempNode is = 0x55a257ce0180, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0240
[insertChildNode] [1106]: childNode = 0x55a257ce0240
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [225]: dX = 19.591495
[calcCurveXYOffset] [226]: dY = -3.475608
[coordinateSystemRotates] [162]: accumulateBranchAngle = 92.225140, accumulateBranchAngleRad = 1.609632
[coordinateSystemRotates] [163]: dX = 19.591495
[coordinateSystemRotates] [164]: dY = -3.475608
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.038826
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.999246
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -0.760664
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.472988
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 19.576723
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.134945
[coordinateSystemRotates] [174]: coordinate system rotated X = 2.712323
[coordinateSystemRotates] [175]: coordinate system rotated Y = 19.711668
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -118.493095, accumulateXY.distanceY = 72.644353
[calcDestination] [78]: destinationCoord latitude = 40.342937  destinationCoord longitude = 116.819614
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.342937  longitude = 116.819614
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 72.105474
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 72.105474
[insertNode] [1229]: childNode's preSegmentId = 47
[displayNodeCoordinate] [100]: 47's startCoordinate: latitude = 40.342912, longitude = 116.819382
[displayNodeCoordinate] [105]: 47's endCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1162]: (*it)->preSegmentId = 52's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[insertNode] [1208]: tempNode is = 0x55a257ce0240, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0300
[insertChildNode] [1106]: childNode = 0x55a257ce0300
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 97.875000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [341]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [347]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [219]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [225]: dX = 4.146041
[calcCurveXYOffset] [226]: dY = -0.087854
[coordinateSystemRotates] [162]: accumulateBranchAngle = 104.703903, accumulateBranchAngleRad = 1.827428
[coordinateSystemRotates] [163]: dX = 4.146041
[coordinateSystemRotates] [164]: dY = -0.087854
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.253824
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.967250
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.052364
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.084977
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 4.010260
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.022299
[coordinateSystemRotates] [174]: coordinate system rotated X = -0.967387
[coordinateSystemRotates] [175]: coordinate system rotated Y = 4.032560
[calcChildSegmentCoordinate] [355]: first half of the curvature curve: accumulateXY.distanceX = -119.460483, accumulateXY.distanceY = 76.676912
[calcDestination] [78]: destinationCoord latitude = 40.342928  destinationCoord longitude = 116.819662
[calcChildSegmentCoordinate] [358]: one SampleCoord before the endCoord  latitude = 40.342928  longitude = 116.819662
[calcChildSegmentCoordinate] [361]: childNode->MapData.accumulateBranchAngle = 102.276094
[calcChildSegmentCoordinate] [363]: fixed childNode->MapData.accumulateBranchAngle = 102.276094
[calcCurveXYOffset] [219]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [225]: dX = 5.845774
[calcCurveXYOffset] [226]: dY = 0.246803
[coordinateSystemRotates] [162]: accumulateBranchAngle = 102.276094, accumulateBranchAngleRad = 1.785055
[coordinateSystemRotates] [163]: dX = 5.845774
[coordinateSystemRotates] [164]: dY = 0.246803
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.212623
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.977134
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.242944
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.241159
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.712107
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.052476
[coordinateSystemRotates] [174]: coordinate system rotated X = -1.484104
[coordinateSystemRotates] [175]: coordinate system rotated Y = 5.659631
[calcChildSegmentCoordinate] [371]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -120.944586, childNode->MapData.accumulateXY.distanceY = 82.336543
[calcDestination] [78]: destinationCoord latitude = 40.342915  destinationCoord longitude = 116.819728
[calcChildSegmentCoordinate] [373]: childSegment's endCoordinate latitude = 40.342915  longitude = 116.819728
[calcChildSegmentCoordinate] [376]: childNode->MapData.accumulateBranchAngle = 107.111160
[calcChildSegmentCoordinate] [378]: fixed accumulateBranchAngleHv2End = 107.111160
[insertNode] [1229]: childNode's preSegmentId = 52
[displayNodeCoordinate] [100]: 52's startCoordinate: latitude = 40.342937, longitude = 116.819614
[displayNodeCoordinate] [103]: 52's SampleCoord: latitude = 40.342928, longitude = 116.819662
[displayNodeCoordinate] [105]: 52's endCoordinate: latitude = 40.342915, longitude = 116.819728
[insertNode] [1162]: (*it)->preSegmentId = 53's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[insertNode] [1208]: tempNode is = 0x55a257ce0300, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce03c0
[insertChildNode] [1106]: childNode = 0x55a257ce03c0
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 35.875000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [341]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [347]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [219]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [225]: dX = 24.800115
[calcCurveXYOffset] [226]: dY = 9.952618
[coordinateSystemRotates] [162]: accumulateBranchAngle = 107.111160, accumulateBranchAngleRad = 1.869442
[coordinateSystemRotates] [163]: dX = 24.800115
[coordinateSystemRotates] [164]: dY = 9.952618
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.294226
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.955736
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -7.296851
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 9.512072
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 23.702356
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -2.928324
[coordinateSystemRotates] [174]: coordinate system rotated X = -16.808923
[coordinateSystemRotates] [175]: coordinate system rotated Y = 20.774032
[calcChildSegmentCoordinate] [355]: first half of the curvature curve: accumulateXY.distanceX = -137.753509, accumulateXY.distanceY = 103.110575
[calcDestination] [78]: destinationCoord latitude = 40.342764  destinationCoord longitude = 116.819973
[calcChildSegmentCoordinate] [358]: one SampleCoord before the endCoord  latitude = 40.342764  longitude = 116.819973
[calcChildSegmentCoordinate] [361]: childNode->MapData.accumulateBranchAngle = 150.843662
[calcChildSegmentCoordinate] [363]: fixed childNode->MapData.accumulateBranchAngle = 150.843662
[calcCurveXYOffset] [219]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [225]: dX = 8.609263
[calcCurveXYOffset] [226]: dY = 0.325564
[coordinateSystemRotates] [162]: accumulateBranchAngle = 150.843662, accumulateBranchAngleRad = 2.632719
[coordinateSystemRotates] [163]: dX = 8.609263
[coordinateSystemRotates] [164]: dY = 0.325564
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.873294
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.487194
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -7.518414
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.158613
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 4.194384
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.284313
[coordinateSystemRotates] [174]: coordinate system rotated X = -7.677027
[coordinateSystemRotates] [175]: coordinate system rotated Y = 3.910071
[calcChildSegmentCoordinate] [371]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -145.430537, childNode->MapData.accumulateXY.distanceY = 107.020646
[calcDestination] [78]: destinationCoord latitude = 40.342695  destinationCoord longitude = 116.820019
[calcChildSegmentCoordinate] [373]: childSegment's endCoordinate latitude = 40.342695  longitude = 116.820019
[calcChildSegmentCoordinate] [376]: childNode->MapData.accumulateBranchAngle = 155.174945
[calcChildSegmentCoordinate] [378]: fixed accumulateBranchAngleHv2End = 155.174945
[insertNode] [1229]: childNode's preSegmentId = 53
[displayNodeCoordinate] [100]: 53's startCoordinate: latitude = 40.342915, longitude = 116.819728
[displayNodeCoordinate] [103]: 53's SampleCoord: latitude = 40.342764, longitude = 116.819973
[displayNodeCoordinate] [105]: 53's endCoordinate: latitude = 40.342695, longitude = 116.820019
[insertNode] [1162]: (*it)->preSegmentId = 50's segIsInTree = 0
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[insertNode] [1208]: tempNode is = 0x55a257ce0240, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0480
[insertChildNode] [1106]: childNode = 0x55a257ce0480
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [225]: dX = 32.016281
[calcCurveXYOffset] [226]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 72.105474, accumulateBranchAngleRad = 1.258478
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.307266
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.951624
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 9.837505
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -9.374012
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 30.467454
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -3.026734
[coordinateSystemRotates] [174]: coordinate system rotated X = 19.211517
[coordinateSystemRotates] [175]: coordinate system rotated Y = 27.440719
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -99.281578, accumulateXY.distanceY = 100.085072
[calcDestination] [78]: destinationCoord latitude = 40.343109  destinationCoord longitude = 116.819938
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343109  longitude = 116.819938
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 37.902041
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 37.902041
[insertNode] [1229]: childNode's preSegmentId = 50
[displayNodeCoordinate] [100]: 50's startCoordinate: latitude = 40.342937, longitude = 116.819614
[displayNodeCoordinate] [105]: 50's endCoordinate: latitude = 40.343109, longitude = 116.819938
[insertNode] [1162]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[insertNode] [1208]: tempNode is = 0x55a257ce0480, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0540
[insertChildNode] [1106]: childNode = 0x55a257ce0540
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [225]: dX = 25.106327
[calcCurveXYOffset] [226]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 37.902041, accumulateBranchAngleRad = 0.661515
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.789062
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.614313
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 19.810453
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.582776
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 15.423151
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.601940
[coordinateSystemRotates] [174]: coordinate system rotated X = 23.393229
[coordinateSystemRotates] [175]: coordinate system rotated Y = 10.821211
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -75.888349, accumulateXY.distanceY = 110.906283
[calcDestination] [78]: destinationCoord latitude = 40.343319  destinationCoord longitude = 116.820065
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343319  longitude = 116.820065
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 11.746475
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 11.746475
[insertNode] [1229]: childNode's preSegmentId = 5
[displayNodeCoordinate] [100]: 5's startCoordinate: latitude = 40.343109, longitude = 116.819938
[displayNodeCoordinate] [105]: 5's endCoordinate: latitude = 40.343319, longitude = 116.820065
[insertNode] [1162]: (*it)->preSegmentId = 9's segIsInTree = 0
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[insertNode] [1208]: tempNode is = 0x55a257ce0540, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0600
[insertChildNode] [1106]: childNode = 0x55a257ce0600
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [225]: dX = 25.106327
[calcCurveXYOffset] [226]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 11.746475, accumulateBranchAngleRad = 0.205015
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.979058
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.203582
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 24.580550
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -1.187321
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.111184
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.710027
[coordinateSystemRotates] [174]: coordinate system rotated X = 25.767871
[coordinateSystemRotates] [175]: coordinate system rotated Y = -0.598843
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -50.120478, accumulateXY.distanceY = 110.307440
[calcDestination] [78]: destinationCoord latitude = 40.343551  destinationCoord longitude = 116.820058
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343551  longitude = 116.820058
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -14.409091
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -14.409091
[insertNode] [1229]: childNode's preSegmentId = 9
[displayNodeCoordinate] [100]: 9's startCoordinate: latitude = 40.343319, longitude = 116.820065
[displayNodeCoordinate] [105]: 9's endCoordinate: latitude = 40.343551, longitude = 116.820058
[insertNode] [1162]: (*it)->preSegmentId = 11's segIsInTree = 0
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[insertNode] [1208]: tempNode is = 0x55a257ce0600, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce06c0
[insertChildNode] [1106]: childNode = 0x55a257ce06c0
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [225]: dX = 32.016281
[calcCurveXYOffset] [226]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = -18.661060, accumulateBranchAngleRad = -0.325697
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.947428
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.319969
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 30.333120
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.151870
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -10.244223
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -9.332681
[coordinateSystemRotates] [174]: coordinate system rotated X = 27.181249
[coordinateSystemRotates] [175]: coordinate system rotated Y = -19.576903
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -22.939229, accumulateXY.distanceY = 90.730537
[calcDestination] [78]: destinationCoord latitude = 40.343795  destinationCoord longitude = 116.819827
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343795  longitude = 116.819827
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -52.864493
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -52.864493
[insertNode] [1229]: childNode's preSegmentId = 11
[displayNodeCoordinate] [100]: 11's startCoordinate: latitude = 40.343551, longitude = 116.820058
[displayNodeCoordinate] [105]: 11's endCoordinate: latitude = 40.343795, longitude = 116.819827
[insertNode] [1162]: (*it)->preSegmentId = 13's segIsInTree = 0
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[insertNode] [1208]: tempNode is = 0x55a257ce06c0, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0780
[insertChildNode] [1106]: childNode = 0x55a257ce0780
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [225]: dX = 26.885681
[calcCurveXYOffset] [226]: dY = -6.745119
[coordinateSystemRotates] [162]: accumulateBranchAngle = -52.864493, accumulateBranchAngleRad = -0.922659
[coordinateSystemRotates] [163]: dX = 26.885681
[coordinateSystemRotates] [164]: dY = -6.745119
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.603702
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.797210
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 16.230944
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 5.377276
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -21.433533
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.072043
[coordinateSystemRotates] [174]: coordinate system rotated X = 10.853668
[coordinateSystemRotates] [175]: coordinate system rotated Y = -25.505575
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -12.085561, accumulateXY.distanceY = 65.224961
[calcDestination] [78]: destinationCoord latitude = 40.343892  destinationCoord longitude = 116.819527
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343892  longitude = 116.819527
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -81.032025
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -81.032025
[insertNode] [1229]: childNode's preSegmentId = 13
[displayNodeCoordinate] [100]: 13's startCoordinate: latitude = 40.343795, longitude = 116.819827
[displayNodeCoordinate] [105]: 13's endCoordinate: latitude = 40.343892, longitude = 116.819527
[insertNode] [1162]: (*it)->preSegmentId = 15's segIsInTree = 0
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[insertNode] [1208]: tempNode is = 0x55a257ce0780, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0860
[insertChildNode] [1106]: childNode = 0x55a257ce0860
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [225]: dX = 30.342789
[calcCurveXYOffset] [226]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -81.032025, accumulateBranchAngleRad = -1.414276
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.155882
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.987776
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 4.729906
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.648517
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -29.971868
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -1.364836
[coordinateSystemRotates] [174]: coordinate system rotated X = -3.918611
[coordinateSystemRotates] [175]: coordinate system rotated Y = -31.336703
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -16.004173, accumulateXY.distanceY = 33.888258
[calcDestination] [78]: destinationCoord latitude = 40.343857  destinationCoord longitude = 116.819157
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343857  longitude = 116.819157
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -113.223491
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -113.223491
[insertNode] [1229]: childNode's preSegmentId = 15
[displayNodeCoordinate] [100]: 15's startCoordinate: latitude = 40.343892, longitude = 116.819527
[displayNodeCoordinate] [105]: 15's endCoordinate: latitude = 40.343857, longitude = 116.819157
[insertNode] [1162]: (*it)->preSegmentId = 17's segIsInTree = 0
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[insertNode] [1208]: tempNode is = 0x55a257ce0860, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0940
[insertChildNode] [1106]: childNode = 0x55a257ce0940
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [225]: dX = 30.342789
[calcCurveXYOffset] [226]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -113.223491, accumulateBranchAngleRad = -1.976123
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.394319
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.918974
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -11.964730
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.046119
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -27.884227
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 3.452477
[coordinateSystemRotates] [174]: coordinate system rotated X = -20.010849
[coordinateSystemRotates] [175]: coordinate system rotated Y = -24.431750
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -36.015021, accumulateXY.distanceY = 9.456508
[calcDestination] [78]: destinationCoord latitude = 40.343677  destinationCoord longitude = 116.818869
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343677  longitude = 116.818869
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -145.414957
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -145.414957
[insertNode] [1229]: childNode's preSegmentId = 17
[displayNodeCoordinate] [100]: 17's startCoordinate: latitude = 40.343857, longitude = 116.819157
[displayNodeCoordinate] [105]: 17's endCoordinate: latitude = 40.343677, longitude = 116.818869
[insertNode] [1162]: (*it)->preSegmentId = 21's segIsInTree = 0
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[insertNode] [1208]: tempNode is = 0x55a257ce0940, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 0
[createNode] [1098]: newNode = 0x55a257ce0a20
[insertChildNode] [1106]: childNode = 0x55a257ce0a20
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [225]: dX = 25.106327
[calcCurveXYOffset] [226]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = -145.414957, accumulateBranchAngleRad = -2.537970
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.823285
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.567629
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -20.669652
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 3.310504
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -14.251075
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.801531
[coordinateSystemRotates] [174]: coordinate system rotated X = -23.980156
[coordinateSystemRotates] [175]: coordinate system rotated Y = -9.449545
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -59.995178, accumulateXY.distanceY = 0.006963
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818758
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818758
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -171.570523
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -171.570523
[insertNode] [1229]: childNode's preSegmentId = 21
[displayNodeCoordinate] [100]: 21's startCoordinate: latitude = 40.343677, longitude = 116.818869
[displayNodeCoordinate] [105]: 21's endCoordinate: latitude = 40.343462, longitude = 116.818758
[PsdLocation] [76]: initialize mRoMatchedSegId = 0
[PsdLocation] [77]: initialize mRoMatchedNode = (nil)
[PsdLocation] [78]: initialize mIsMatch = 0
[PsdLocation] [79]: initialize PsdAvailable = 0
[PsdLocation] [80]: initialize MPP = 0
[PsdLocation] [81]: initialize roadSegClass = 0
[PsdLocation] [82]: initialize relativePos = 0
[PsdLocation] [83]: initialize RelativeDir = 0
[PsdLocation] [84]: initialize RvRelevancy = 0
[PsdLocation] [85]: initialize dis2Event = 0.000000
[PsdLocation] [86]: initialize HvDTIP = 0.000000
[PsdLocation] [87]: initialize RvDTIP = 0.000000
[coordinateTransform] [47]: dn = 115.000659
[coordinateTransform] [48]: de = -25.297353
[coordinateTransform] [58]: y_ = 88.605246
[coordinateTransform] [59]: x_ = -77.551390
[coordinateTransform] [47]: dn = 114.190083
[coordinateTransform] [48]: de = -24.686423
[coordinateTransform] [58]: y_ = 87.632500
[coordinateTransform] [59]: x_ = -77.261500
[RoMatchSegment] [495]: Point_1.x = -77.551390, Point_1.y = 88.605246
[RoMatchSegment] [496]: Point_2.x = -77.261500, Point_2.y = 87.632500
[RoMatchSegment] [502]: orthogonalDistance = 49.015641
[RoMatchSegment] [506]: Alpha = 0.429337, Beta = 3.574546
[coordinateTransform] [47]: dn = 114.190083
[coordinateTransform] [48]: de = -24.686423
[coordinateTransform] [58]: y_ = 87.632500
[coordinateTransform] [59]: x_ = -77.261500
[coordinateTransform] [47]: dn = 87.478161
[coordinateTransform] [48]: de = -14.899435
[coordinateTransform] [58]: y_ = 63.903655
[coordinateTransform] [59]: x_ = -61.569023
[RoMatchSegment] [495]: Point_1.x = -77.261500, Point_1.y = 87.632500
[RoMatchSegment] [496]: Point_2.x = -61.569023, Point_2.y = 63.903655
[RoMatchSegment] [502]: orthogonalDistance = 16.104774
[RoMatchSegment] [506]: Alpha = 0.138291, Beta = 3.324091
[coordinateTransform] [47]: dn = 87.478161
[coordinateTransform] [48]: de = -14.899435
[coordinateTransform] [58]: y_ = 63.903655
[coordinateTransform] [59]: x_ = -61.569023
[coordinateTransform] [47]: dn = 77.142685
[coordinateTransform] [48]: de = -14.104452
[coordinateTransform] [58]: y_ = 57.130512
[coordinateTransform] [59]: x_ = -53.721820
[RoMatchSegment] [495]: Point_1.x = -61.569023, Point_1.y = 63.903655
[RoMatchSegment] [496]: Point_2.x = -53.721820, Point_2.y = 57.130512
[RoMatchSegment] [502]: orthogonalDistance = 8.146736
[RoMatchSegment] [506]: Alpha = 0.091936, Beta = 3.037521
[coordinateTransform] [47]: dn = 77.142685
[coordinateTransform] [48]: de = -14.104452
[coordinateTransform] [58]: y_ = 57.130512
[coordinateTransform] [59]: x_ = -53.721820
[coordinateTransform] [47]: dn = 52.997152
[coordinateTransform] [48]: de = -22.972010
[coordinateTransform] [58]: y_ = 49.939539
[coordinateTransform] [59]: x_ = -29.025055
[RoMatchSegment] [495]: Point_1.x = -53.721820, Point_1.y = 57.130512
[RoMatchSegment] [496]: Point_2.x = -29.025055, Point_2.y = 49.939539
[RoMatchSegment] [502]: orthogonalDistance = 39.834072
[RoMatchSegment] [506]: Alpha = 0.532801, Beta = 2.380617
[coordinateTransform] [47]: dn = 52.997152
[coordinateTransform] [48]: de = -22.972010
[coordinateTransform] [58]: y_ = 49.939539
[coordinateTransform] [59]: x_ = -29.025055
[coordinateTransform] [47]: dn = 29.326347
[coordinateTransform] [48]: de = -20.869456
[coordinateTransform] [58]: y_ = 34.200504
[coordinateTransform] [59]: x_ = -11.220265
[RoMatchSegment] [495]: Point_1.x = -29.025055, Point_1.y = 49.939539
[RoMatchSegment] [496]: Point_2.x = -11.220265, Point_2.y = 34.200504
[RoMatchSegment] [502]: orthogonalDistance = 18.192922
[RoMatchSegment] [506]: Alpha = 0.320420, Beta = 2.611697
[coordinateTransform] [47]: dn = 29.326347
[coordinateTransform] [48]: de = -20.869456
[coordinateTransform] [58]: y_ = 34.200504
[coordinateTransform] [59]: x_ = -11.220265
[coordinateTransform] [47]: dn = 27.430534
[coordinateTransform] [48]: de = -20.246124
[coordinateTransform] [58]: y_ = 32.573776
[coordinateTransform] [59]: x_ = -10.064234
[RoMatchSegment] [495]: Point_1.x = -11.220265, Point_1.y = 34.200504
[RoMatchSegment] [496]: Point_2.x = -10.064234, Point_2.y = 32.573776
[RoMatchSegment] [502]: orthogonalDistance = 10.665416
[RoMatchSegment] [506]: Alpha = 0.300828, Beta = 2.823419
[coordinateTransform] [47]: dn = 27.430534
[coordinateTransform] [48]: de = -20.246124
[coordinateTransform] [58]: y_ = 32.573776
[coordinateTransform] [59]: x_ = -10.064234
[coordinateTransform] [47]: dn = 2.973920
[coordinateTransform] [48]: de = -3.541467
[coordinateTransform] [58]: y_ = 4.615285
[coordinateTransform] [59]: x_ = -0.292116
[RoMatchSegment] [495]: Point_1.x = -10.064234, Point_1.y = 32.573776
[RoMatchSegment] [496]: Point_2.x = -0.292116, Point_2.y = 4.615285
[RoMatchSegment] [502]: orthogonalDistance = 1.247050
[RoMatchSegment] [506]: Alpha = 0.036586, Beta = 2.868552
[coordinateTransform] [47]: dn = 2.973920
[coordinateTransform] [48]: de = -3.541467
[coordinateTransform] [58]: y_ = 4.615285
[coordinateTransform] [59]: x_ = -0.292116
[coordinateTransform] [47]: dn = -8.084609
[coordinateTransform] [48]: de = 28.113123
[coordinateTransform] [58]: y_ = -27.425638
[coordinateTransform] [59]: x_ = -10.175606
[RoMatchSegment] [495]: Point_1.x = -0.292116, Point_1.y = 4.615285
[RoMatchSegment] [496]: Point_2.x = -10.175606, Point_2.y = -27.425638
[RoMatchSegment] [502]: orthogonalDistance = 1.639539
[RoMatchSegment] [506]: Alpha = 0.362413, Beta = 0.056077
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[RoMatchSegment] [514]: mIsMatch = 1
[RoMatchSegment] [515]: mRoMatchedSegId = 42
[RoMatchSegment] [516]: mRoMatchedNode = 0x55a257ce0180
###### RoPoint_1 is 1 matched ######
open successfully
[TestBody] [4879]: curSegment's latitude = 40.343751
[TestBody] [4898]: curSegment's longitude = 116.818822
[TestBody] [4915]: hvHeading = 191.600000
[TestBody] [4926]: headingAccuracy = 1.650000
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4802]: curSegmentId = 58
[TestBody] [4813]: curRemainLength = 18
[TestBody] [4879]: curSegment's latitude = 40.343698
[TestBody] [4898]: curSegment's longitude = 116.818810
[TestBody] [4915]: hvHeading = 194.500000
[TestBody] [4926]: headingAccuracy = 1.650000
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[mapUpdate] [1326]: --------------------------update the attribute of root, parent and current and delete out of date childs------------------------------
[updateRootNode] [1066]: updateRootNode
[mapUpdate] [1334]: mTree->MapData.nodeAttribute = 3
[updateOtherNode] [1013]: mTree->MapData.nodeAttribute = 3
[updateOtherNode] [1016]: mTree->MapData.nodeAttribute need update from RootAndCurSegment/CurSegment to ParentSegment
[mapUpdate] [1340]: updateOtherNode
[mapUpdate] [1344]: mTree->MapData.nodeAttribute = 2
[mapUpdate] [1350]: updateChildNode
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[updateChildNode] [969]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[updateChildNode] [1002]: goto check the next segment info from vPsdMap
[updateChildNode] [969]: tempNode is = 0x55a257cdfdc0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 1
[findNodeById] [830]: result = 0x55a257cdfe80
[updateChildNode] [969]: tempNode is = 0x55a257cdfe80, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [830]: result = 0x55a257cdff40
[findNodeById] [830]: result = 0x55a257cdff40
[updateChildNode] [969]: tempNode is = 0x55a257cdff40, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [830]: result = 0x55a257ce0000
[findNodeById] [830]: result = 0x55a257ce0000
[findNodeById] [830]: result = 0x55a257ce0000
[updateChildNode] [969]: tempNode is = 0x55a257ce0000, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [830]: result = 0x55a257ce00c0
[findNodeById] [830]: result = 0x55a257ce00c0
[findNodeById] [830]: result = 0x55a257ce00c0
[findNodeById] [830]: result = 0x55a257ce00c0
[updateChildNode] [969]: tempNode is = 0x55a257ce00c0, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[findNodeById] [830]: result = 0x55a257ce0180
[updateChildNode] [969]: tempNode is = 0x55a257ce0180, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[updateChildNode] [969]: tempNode is = 0x55a257ce0240, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[findNodeById] [830]: result = 0x55a257ce0300
[updateChildNode] [969]: tempNode is = 0x55a257ce0300, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[findNodeById] [830]: result = 0x55a257ce0240
[updateChildNode] [969]: tempNode is = 0x55a257ce0240, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[findNodeById] [830]: result = 0x55a257ce0480
[updateChildNode] [969]: tempNode is = 0x55a257ce0480, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[findNodeById] [830]: result = 0x55a257ce0540
[updateChildNode] [969]: tempNode is = 0x55a257ce0540, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[findNodeById] [830]: result = 0x55a257ce0600
[updateChildNode] [969]: tempNode is = 0x55a257ce0600, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[findNodeById] [830]: result = 0x55a257ce06c0
[updateChildNode] [969]: tempNode is = 0x55a257ce06c0, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[findNodeById] [830]: result = 0x55a257ce0780
[updateChildNode] [969]: tempNode is = 0x55a257ce0780, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[findNodeById] [830]: result = 0x55a257ce0860
[updateChildNode] [969]: tempNode is = 0x55a257ce0860, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[findNodeById] [835]: result = (nil)
[findNodeById] [835]: result = (nil)
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[findNodeById] [830]: result = 0x55a257ce0940
[updateChildNode] [969]: tempNode is = 0x55a257ce0940, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 1
[updateChildNode] [995]: some nodes are already in tree
[mapUpdate] [1372]: --------------------------update the Coordinate of root, parent, current and childs------------------------------
[findNodeById] [830]: result = 0x55a257cdfe80
[mapUpdate] [1381]: curNode->MapData.nodeAttribute = 3
[calcCurSegmentCoordinate] [532]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [565]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [590]: R = 56.955000
[calcCurSegmentCoordinate] [623]: finalRemainLength = 18.000000
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 18.107700, arcRotationAngleRad = 0.316039, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.049526
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -2.820755
[calcCurveXYOffset] [225]: dX = 17.701851
[calcCurveXYOffset] [226]: dY = -2.820755
[coordinateSystemRotates] [162]: accumulateBranchAngle = 194.500000, accumulateBranchAngleRad = 3.394665
[coordinateSystemRotates] [163]: dX = 17.701851
[coordinateSystemRotates] [164]: dY = -2.820755
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.968148
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.250380
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -17.138005
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.706261
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -4.432190
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 2.730907
[coordinateSystemRotates] [174]: coordinate system rotated X = -17.844266
[coordinateSystemRotates] [175]: coordinate system rotated Y = -1.701282
[calcCurSegmentCoordinate] [632]: disHv2EndAfterRotatingCoord.distanceX = -17.844266, disHv2EndAfterRotatingCoord.distanceY = -1.701282
[calcDestination] [78]: destinationCoord latitude = 40.343538  destinationCoord longitude = 116.818790
[calcCurSegmentCoordinate] [634]: HV's endCoordinate latitude = 40.343538  longitude = 116.818790
[calcCurSegmentCoordinate] [638]: accumulateBranchAngleHv2End = 176.392300
[calcCurSegmentCoordinate] [640]: fixed accumulateBranchAngleHv2End = 176.392300
[calcCurSegmentCoordinate] [685]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [688]: accumulateBranchAngleHv2Start = 374.500000
[calcCurSegmentCoordinate] [690]: fixed accumulateBranchAngleHv2Start = 14.500000
[calcCurSegmentCoordinate] [700]: R = 56.955000
[calcCurSegmentCoordinate] [728]: finalRemainLength = 8.000000
[calcCurveXYOffset] [219]: arcR = -56.955000, arcRotationAngle = 8.047866, arcRotationAngleRad = 0.140462, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.009849
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = 0.560924
[calcCurveXYOffset] [225]: dX = -7.973720
[calcCurveXYOffset] [226]: dY = 0.560924
[coordinateSystemRotates] [162]: accumulateBranchAngle = 14.500000, accumulateBranchAngleRad = 0.253073
[coordinateSystemRotates] [163]: dX = -7.973720
[coordinateSystemRotates] [164]: dY = -7.973720
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.968148
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.250380
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -7.719738
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -1.996460
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -1.996460
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -7.719738
[coordinateSystemRotates] [174]: coordinate system rotated X = -5.723278
[coordinateSystemRotates] [175]: coordinate system rotated Y = -9.716198
[calcCurSegmentCoordinate] [736]: disHv2StartAfterRotatingCoord.distanceX = -5.723278, disHv2StartAfterRotatingCoord.distanceY = -9.716198
[calcDestination] [78]: destinationCoord latitude = 40.343647  destinationCoord longitude = 116.818695
[calcCurSegmentCoordinate] [738]: HV's startCoordinate latitude = 40.343647  longitude = 116.818695
[calcCurSegmentCoordinate] [742]: accumulateBranchAngleHv2Start = 22.547866
[calcCurSegmentCoordinate] [744]: fixed accumulateBranchAngleHv2Start = 22.547866
[displayNodeCoordinate] [100]: 58's startCoordinate: latitude = 40.343647, longitude = 116.818695
[displayNodeCoordinate] [105]: 58's endCoordinate: latitude = 40.343538, longitude = 116.818790
[calcRootOrParentSegmentCoordinate] [387]: --------------------------Is rootSegment or parentSegment--------------------------
[calcRootOrParentSegmentCoordinate] [441]: R = 140.500000
[calcRootOrParentSegmentCoordinate] [469]: finalRemainLength = 40.000000
[calcRootOrParentSegmentCoordinate] [493]: Sa = 10.686418, Se = 29.313582
[calcCurveXYOffset] [219]: arcR = 140.500000, arcRotationAngle = 4.357912, arcRotationAngleRad = 0.076060, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.002891
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.406208
[calcCurveXYOffset] [225]: dX = 10.676117
[calcCurveXYOffset] [226]: dY = 0.406208
[coordinateSystemRotates] [162]: accumulateBranchAngle = -12.885209, accumulateBranchAngleRad = -0.224889
[coordinateSystemRotates] [163]: dX = 10.676117
[coordinateSystemRotates] [164]: dY = 10.676117
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.974819
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.222998
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 10.407280
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -2.380758
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -2.380758
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 10.407280
[coordinateSystemRotates] [174]: coordinate system rotated X = 12.788037
[coordinateSystemRotates] [175]: coordinate system rotated Y = 8.026522
[calcRootOrParentSegmentCoordinate] [501]: first half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 7.064759, rootOrParentNode->MapData.accumulateXY.distanceY = -1.689676
[calcDestination] [78]: destinationCoord latitude = 40.343761  destinationCoord longitude = 116.818790
[calcRootOrParentSegmentCoordinate] [504]: one SampleCoord before the startCoord latitude = 40.343761  longitude = 116.818790
[calcRootOrParentSegmentCoordinate] [507]: rootOrParentNode->MapData.accumulateBranchAngle = -17.243120
[calcRootOrParentSegmentCoordinate] [509]: fixed rootOrParentNode->MapData.accumulateBranchAngle = -17.243120
[calcCurveXYOffset] [219]: arcR = 51.220000, arcRotationAngle = 32.790796, arcRotationAngleRad = 0.572307, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.159346
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -8.161722
[calcCurveXYOffset] [225]: dX = 27.739378
[calcCurveXYOffset] [226]: dY = 8.161722
[coordinateSystemRotates] [162]: accumulateBranchAngle = -17.243120, accumulateBranchAngleRad = -0.300949
[coordinateSystemRotates] [163]: dX = 27.739378
[coordinateSystemRotates] [164]: dY = 8.161722
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.955056
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.296427
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 26.492646
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -2.419354
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -8.222698
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 7.794898
[coordinateSystemRotates] [174]: coordinate system rotated X = 28.912000
[coordinateSystemRotates] [175]: coordinate system rotated Y = -0.427800
[calcRootOrParentSegmentCoordinate] [516]: second half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 35.976759, rootOrParentNode->MapData.accumulateXY.distanceY = -2.117477
[calcDestination] [78]: destinationCoord latitude = 40.344021  destinationCoord longitude = 116.818785
[calcRootOrParentSegmentCoordinate] [518]: rootSegment or parentSegment's startCoordinate latitude = 40.344021  longitude = 116.818785
[calcRootOrParentSegmentCoordinate] [521]: rootOrParentNode->MapData.accumulateBranchAngle = -50.033916
[calcRootOrParentSegmentCoordinate] [523]: fixed rootOrParentNode->MapData.accumulateBranchAngle = -50.033916
[displayNodeCoordinate] [100]: 54's startCoordinate: latitude = 40.344021, longitude = 116.818785
[displayNodeCoordinate] [103]: 54's SampleCoord: latitude = 40.343761, longitude = 116.818790
[displayNodeCoordinate] [105]: 54's endCoordinate: latitude = 40.343647, longitude = 116.818695
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 24.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [225]: dX = 23.296017
[calcCurveXYOffset] [226]: dY = -4.982242
[coordinateSystemRotates] [162]: accumulateBranchAngle = 176.392300, accumulateBranchAngleRad = 3.078626
[coordinateSystemRotates] [163]: dX = 23.296017
[coordinateSystemRotates] [164]: dY = -4.982242
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.998018
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.062925
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -23.249851
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.313506
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 1.465893
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.972368
[coordinateSystemRotates] [174]: coordinate system rotated X = -22.936345
[coordinateSystemRotates] [175]: coordinate system rotated Y = 6.438262
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -40.780611, accumulateXY.distanceY = 4.736979
[calcDestination] [78]: destinationCoord latitude = 40.343332  destinationCoord longitude = 116.818866
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343332  longitude = 116.818866
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 152.248701
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 152.248701
[displayNodeCoordinate] [100]: 16's startCoordinate: latitude = 40.343538, longitude = 116.818790
[displayNodeCoordinate] [105]: 16's endCoordinate: latitude = 40.343332, longitude = 116.818866
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [225]: dX = 1.999589
[calcCurveXYOffset] [226]: dY = -0.035112
[coordinateSystemRotates] [162]: accumulateBranchAngle = 152.248701, accumulateBranchAngleRad = 2.657241
[coordinateSystemRotates] [163]: dX = 1.999589
[coordinateSystemRotates] [164]: dY = -0.035112
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.884977
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.465635
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -1.769590
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.016349
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 0.931078
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.031073
[coordinateSystemRotates] [174]: coordinate system rotated X = -1.753241
[coordinateSystemRotates] [175]: coordinate system rotated Y = 0.962151
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -42.533852, accumulateXY.distanceY = 5.699130
[calcDestination] [78]: destinationCoord latitude = 40.343316  destinationCoord longitude = 116.818877
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343316  longitude = 116.818877
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 150.236734
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 150.236734
[displayNodeCoordinate] [100]: 33's startCoordinate: latitude = 40.343332, longitude = 116.818866
[displayNodeCoordinate] [105]: 33's endCoordinate: latitude = 40.343316, longitude = 116.818877
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [225]: dX = 28.631886
[calcCurveXYOffset] [226]: dY = -7.719981
[coordinateSystemRotates] [162]: accumulateBranchAngle = 150.236734, accumulateBranchAngleRad = 2.622126
[coordinateSystemRotates] [163]: dX = 28.631886
[coordinateSystemRotates] [164]: dY = -7.719981
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.868084
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.496418
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -24.854880
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.832334
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 14.213370
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 6.701591
[coordinateSystemRotates] [174]: coordinate system rotated X = -21.022546
[coordinateSystemRotates] [175]: coordinate system rotated Y = 20.914961
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -63.556398, accumulateXY.distanceY = 26.614091
[calcDestination] [78]: destinationCoord latitude = 40.343127  destinationCoord longitude = 116.819124
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343127  longitude = 116.819124
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 120.057235
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 120.057235
[displayNodeCoordinate] [100]: 35's startCoordinate: latitude = 40.343316, longitude = 116.818877
[displayNodeCoordinate] [105]: 35's endCoordinate: latitude = 40.343127, longitude = 116.819124
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [225]: dX = 32.016281
[calcCurveXYOffset] [226]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 115.805266, accumulateBranchAngleRad = 2.021183
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.435314
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.900279
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -13.937130
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -8.868236
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 28.823578
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.288078
[coordinateSystemRotates] [174]: coordinate system rotated X = -5.068895
[coordinateSystemRotates] [175]: coordinate system rotated Y = 33.111656
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -68.625293, accumulateXY.distanceY = 59.725747
[calcDestination] [78]: destinationCoord latitude = 40.343082  destinationCoord longitude = 116.819514
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343082  longitude = 116.819514
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 81.601833
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 81.601833
[displayNodeCoordinate] [100]: 42's startCoordinate: latitude = 40.343127, longitude = 116.819124
[displayNodeCoordinate] [105]: 42's endCoordinate: latitude = 40.343082, longitude = 116.819514
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [225]: dX = 19.591495
[calcCurveXYOffset] [226]: dY = -3.475608
[coordinateSystemRotates] [162]: accumulateBranchAngle = 81.601833, accumulateBranchAngleRad = 1.424221
[coordinateSystemRotates] [163]: dX = 19.591495
[coordinateSystemRotates] [164]: dY = -3.475608
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.146051
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.989277
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 2.861365
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -3.438339
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 19.381416
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.507617
[coordinateSystemRotates] [174]: coordinate system rotated X = 6.299704
[coordinateSystemRotates] [175]: coordinate system rotated Y = 18.873799
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -62.325589, accumulateXY.distanceY = 78.599545
[calcDestination] [78]: destinationCoord latitude = 40.343138  destinationCoord longitude = 116.819736
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343138  longitude = 116.819736
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 61.482167
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 61.482167
[displayNodeCoordinate] [100]: 47's startCoordinate: latitude = 40.343082, longitude = 116.819514
[displayNodeCoordinate] [105]: 47's endCoordinate: latitude = 40.343138, longitude = 116.819736
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 97.875000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [341]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [347]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [219]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [225]: dX = 4.146041
[calcCurveXYOffset] [226]: dY = -0.087854
[coordinateSystemRotates] [162]: accumulateBranchAngle = 94.080596, accumulateBranchAngleRad = 1.642016
[coordinateSystemRotates] [163]: dX = 4.146041
[coordinateSystemRotates] [164]: dY = -0.087854
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.071160
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.997465
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -0.295031
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.087631
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 4.135531
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.006252
[coordinateSystemRotates] [174]: coordinate system rotated X = -0.207400
[coordinateSystemRotates] [175]: coordinate system rotated Y = 4.141782
[calcChildSegmentCoordinate] [355]: first half of the curvature curve: accumulateXY.distanceX = -62.532988, accumulateXY.distanceY = 82.741328
[calcDestination] [78]: destinationCoord latitude = 40.343136  destinationCoord longitude = 116.819785
[calcChildSegmentCoordinate] [358]: one SampleCoord before the endCoord  latitude = 40.343136  longitude = 116.819785
[calcChildSegmentCoordinate] [361]: childNode->MapData.accumulateBranchAngle = 91.652788
[calcChildSegmentCoordinate] [363]: fixed childNode->MapData.accumulateBranchAngle = 91.652788
[calcCurveXYOffset] [219]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [225]: dX = 5.845774
[calcCurveXYOffset] [226]: dY = 0.246803
[coordinateSystemRotates] [162]: accumulateBranchAngle = 91.652788, accumulateBranchAngleRad = 1.599643
[coordinateSystemRotates] [163]: dX = 5.845774
[coordinateSystemRotates] [164]: dY = 0.246803
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.028843
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.999584
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -0.168607
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.246700
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.843342
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.007118
[coordinateSystemRotates] [174]: coordinate system rotated X = -0.415307
[coordinateSystemRotates] [175]: coordinate system rotated Y = 5.836223
[calcChildSegmentCoordinate] [371]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -62.948296, childNode->MapData.accumulateXY.distanceY = 88.577551
[calcDestination] [78]: destinationCoord latitude = 40.343133  destinationCoord longitude = 116.819854
[calcChildSegmentCoordinate] [373]: childSegment's endCoordinate latitude = 40.343133  longitude = 116.819854
[calcChildSegmentCoordinate] [376]: childNode->MapData.accumulateBranchAngle = 96.487854
[calcChildSegmentCoordinate] [378]: fixed accumulateBranchAngleHv2End = 96.487854
[displayNodeCoordinate] [100]: 52's startCoordinate: latitude = 40.343138, longitude = 116.819736
[displayNodeCoordinate] [103]: 52's SampleCoord: latitude = 40.343136, longitude = 116.819785
[displayNodeCoordinate] [105]: 52's endCoordinate: latitude = 40.343133, longitude = 116.819854
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [225]: dX = 32.016281
[calcCurveXYOffset] [226]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = 61.482167, accumulateBranchAngleRad = 1.073066
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.477432
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.878669
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 15.285605
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -8.655363
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 28.131699
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -4.702967
[coordinateSystemRotates] [174]: coordinate system rotated X = 23.940969
[coordinateSystemRotates] [175]: coordinate system rotated Y = 23.428732
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -38.384620, accumulateXY.distanceY = 102.028277
[calcDestination] [78]: destinationCoord latitude = 40.343353  destinationCoord longitude = 116.820013
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343353  longitude = 116.820013
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 27.278735
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 27.278735
[displayNodeCoordinate] [100]: 50's startCoordinate: latitude = 40.343138, longitude = 116.819736
[displayNodeCoordinate] [105]: 50's endCoordinate: latitude = 40.343353, longitude = 116.820013
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 35.875000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [341]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [347]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [219]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [225]: dX = 24.800115
[calcCurveXYOffset] [226]: dY = 9.952618
[coordinateSystemRotates] [162]: accumulateBranchAngle = 96.487854, accumulateBranchAngleRad = 1.684031
[coordinateSystemRotates] [163]: dX = 24.800115
[coordinateSystemRotates] [164]: dY = 9.952618
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.112993
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.993596
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -2.802229
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 9.888879
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 24.641291
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -1.124572
[coordinateSystemRotates] [174]: coordinate system rotated X = -12.691108
[coordinateSystemRotates] [175]: coordinate system rotated Y = 23.516719
[calcChildSegmentCoordinate] [355]: first half of the curvature curve: accumulateXY.distanceX = -75.639404, accumulateXY.distanceY = 112.094270
[calcDestination] [78]: destinationCoord latitude = 40.343019  destinationCoord longitude = 116.820131
[calcChildSegmentCoordinate] [358]: one SampleCoord before the endCoord  latitude = 40.343019  longitude = 116.820131
[calcChildSegmentCoordinate] [361]: childNode->MapData.accumulateBranchAngle = 140.220355
[calcChildSegmentCoordinate] [363]: fixed childNode->MapData.accumulateBranchAngle = 140.220355
[calcCurveXYOffset] [219]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [225]: dX = 8.609263
[calcCurveXYOffset] [226]: dY = 0.325564
[coordinateSystemRotates] [162]: accumulateBranchAngle = 140.220355, accumulateBranchAngleRad = 2.447307
[coordinateSystemRotates] [163]: dX = 8.609263
[coordinateSystemRotates] [164]: dY = 0.325564
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.768511
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.639837
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -6.616312
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 0.208308
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 5.508523
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -0.250200
[coordinateSystemRotates] [174]: coordinate system rotated X = -6.824620
[coordinateSystemRotates] [175]: coordinate system rotated Y = 5.258323
[calcChildSegmentCoordinate] [371]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -82.464024, childNode->MapData.accumulateXY.distanceY = 117.352593
[calcDestination] [78]: destinationCoord latitude = 40.342957  destinationCoord longitude = 116.820193
[calcChildSegmentCoordinate] [373]: childSegment's endCoordinate latitude = 40.342957  longitude = 116.820193
[calcChildSegmentCoordinate] [376]: childNode->MapData.accumulateBranchAngle = 144.551638
[calcChildSegmentCoordinate] [378]: fixed accumulateBranchAngleHv2End = 144.551638
[displayNodeCoordinate] [100]: 53's startCoordinate: latitude = 40.343133, longitude = 116.819854
[displayNodeCoordinate] [103]: 53's SampleCoord: latitude = 40.343019, longitude = 116.820131
[displayNodeCoordinate] [105]: 53's endCoordinate: latitude = 40.342957, longitude = 116.820193
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [225]: dX = 25.106327
[calcCurveXYOffset] [226]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 27.278735, accumulateBranchAngleRad = 0.476104
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.888787
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.458320
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 22.314187
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -2.672996
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 11.506724
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.183554
[coordinateSystemRotates] [174]: coordinate system rotated X = 24.987182
[coordinateSystemRotates] [175]: coordinate system rotated Y = 6.323171
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -13.397438, accumulateXY.distanceY = 108.351448
[calcDestination] [78]: destinationCoord latitude = 40.343578  destinationCoord longitude = 116.820087
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343578  longitude = 116.820087
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = 1.123168
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = 1.123168
[displayNodeCoordinate] [100]: 5's startCoordinate: latitude = 40.343353, longitude = 116.820013
[displayNodeCoordinate] [105]: 5's endCoordinate: latitude = 40.343578, longitude = 116.820087
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [225]: dX = 25.106327
[calcCurveXYOffset] [226]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = 1.123168, accumulateBranchAngleRad = 0.019603
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.999808
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = 0.019602
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 25.101503
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = -0.114321
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = 0.492127
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -5.831043
[coordinateSystemRotates] [174]: coordinate system rotated X = 25.215823
[coordinateSystemRotates] [175]: coordinate system rotated Y = -5.338916
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = 11.818386, accumulateXY.distanceY = 103.012532
[calcDestination] [78]: destinationCoord latitude = 40.343804  destinationCoord longitude = 116.820024
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343804  longitude = 116.820024
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -25.032398
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -25.032398
[displayNodeCoordinate] [100]: 9's startCoordinate: latitude = 40.343578, longitude = 116.820087
[displayNodeCoordinate] [105]: 9's endCoordinate: latitude = 40.343804, longitude = 116.820024
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [225]: dX = 32.016281
[calcCurveXYOffset] [226]: dY = -9.850544
[coordinateSystemRotates] [162]: accumulateBranchAngle = -29.284367, accumulateBranchAngleRad = -0.511109
[coordinateSystemRotates] [163]: dX = 32.016281
[coordinateSystemRotates] [164]: dY = -9.850544
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.872203
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.489144
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 27.924689
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 4.818339
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -15.660587
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -8.591672
[coordinateSystemRotates] [174]: coordinate system rotated X = 23.106350
[coordinateSystemRotates] [175]: coordinate system rotated Y = -24.252259
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = 34.924735, accumulateXY.distanceY = 78.760273
[calcDestination] [78]: destinationCoord latitude = 40.344012  destinationCoord longitude = 116.819738
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.344012  longitude = 116.819738
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -63.487799
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -63.487799
[displayNodeCoordinate] [100]: 11's startCoordinate: latitude = 40.343804, longitude = 116.820024
[displayNodeCoordinate] [105]: 11's endCoordinate: latitude = 40.344012, longitude = 116.819738
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [225]: dX = 26.885681
[calcCurveXYOffset] [226]: dY = -6.745119
[coordinateSystemRotates] [162]: accumulateBranchAngle = -63.487799, accumulateBranchAngleRad = -1.108071
[coordinateSystemRotates] [163]: dX = 26.885681
[coordinateSystemRotates] [164]: dY = -6.745119
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = 0.446388
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.894839
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = 12.001455
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 6.035798
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -24.058365
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = -3.010943
[coordinateSystemRotates] [174]: coordinate system rotated X = 5.965658
[coordinateSystemRotates] [175]: coordinate system rotated Y = -27.069307
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = 40.890393, accumulateXY.distanceY = 51.690966
[calcDestination] [78]: destinationCoord latitude = 40.344065  destinationCoord longitude = 116.819419
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.344065  longitude = 116.819419
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -91.655332
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -91.655332
[displayNodeCoordinate] [100]: 13's startCoordinate: latitude = 40.344012, longitude = 116.819738
[displayNodeCoordinate] [105]: 13's endCoordinate: latitude = 40.344065, longitude = 116.819419
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [225]: dX = 30.342789
[calcCurveXYOffset] [226]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -91.655332, accumulateBranchAngleRad = -1.599687
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.028887
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.999583
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -0.876511
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 8.751894
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -30.330127
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 0.252921
[coordinateSystemRotates] [174]: coordinate system rotated X = -9.628406
[coordinateSystemRotates] [175]: coordinate system rotated Y = -30.077206
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = 31.261988, accumulateXY.distanceY = 21.613760
[calcDestination] [78]: destinationCoord latitude = 40.343979  destinationCoord longitude = 116.819065
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343979  longitude = 116.819065
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -123.846798
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -123.846798
[displayNodeCoordinate] [100]: 15's startCoordinate: latitude = 40.344065, longitude = 116.819419
[displayNodeCoordinate] [105]: 15's endCoordinate: latitude = 40.343979, longitude = 116.819065
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [225]: dX = 30.342789
[calcCurveXYOffset] [226]: dY = -8.755548
[coordinateSystemRotates] [162]: accumulateBranchAngle = -123.846798, accumulateBranchAngleRad = -2.161534
[coordinateSystemRotates] [163]: dX = 30.342789
[coordinateSystemRotates] [164]: dY = -8.755548
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.556974
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.830530
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -16.900150
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 7.271744
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -25.200592
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 4.876614
[coordinateSystemRotates] [174]: coordinate system rotated X = -24.171894
[coordinateSystemRotates] [175]: coordinate system rotated Y = -20.323977
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = 7.090094, accumulateXY.distanceY = 1.289783
[calcDestination] [78]: destinationCoord latitude = 40.343762  destinationCoord longitude = 116.818825
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343762  longitude = 116.818825
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -156.038264
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -156.038264
[displayNodeCoordinate] [100]: 17's startCoordinate: latitude = 40.343979, longitude = 116.819065
[displayNodeCoordinate] [105]: 17's endCoordinate: latitude = 40.343762, longitude = 116.818825
[calcChildSegmentCoordinate] [233]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [290]: R = 56.955000
[calcChildSegmentCoordinate] [318]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [322]: KL == Kstart
[calcCurveXYOffset] [219]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [223]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [224]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [225]: dX = 25.106327
[calcCurveXYOffset] [226]: dY = -5.832164
[coordinateSystemRotates] [162]: accumulateBranchAngle = -156.038264, accumulateBranchAngleRad = -2.723381
[coordinateSystemRotates] [163]: dX = 25.106327
[coordinateSystemRotates] [164]: dY = -5.832164
[coordinateSystemRotates] [165]: cos(accumulateBranchAngleRad) = -0.913817
[coordinateSystemRotates] [166]: sin(accumulateBranchAngleRad) = -0.406126
[coordinateSystemRotates] [167]: distanceX * cos(accumulateBranchAngleRad) = -22.942585
[coordinateSystemRotates] [168]: distanceY * sin(accumulateBranchAngleRad) = 2.368596
[coordinateSystemRotates] [169]: distanceX * sin(accumulateBranchAngleRad) = -10.196344
[coordinateSystemRotates] [170]: distanceY * cos(accumulateBranchAngleRad) = 5.329530
[coordinateSystemRotates] [174]: coordinate system rotated X = -25.311181
[coordinateSystemRotates] [175]: coordinate system rotated Y = -4.866814
[calcChildSegmentCoordinate] [328]: accumulateXY.distanceX = -18.221087, accumulateXY.distanceY = -3.577031
[calcDestination] [78]: destinationCoord latitude = 40.343534  destinationCoord longitude = 116.818768
[calcChildSegmentCoordinate] [330]: childSegment's endCoordinate latitude = 40.343534  longitude = 116.818768
[calcChildSegmentCoordinate] [334]: childNode->MapData.accumulateBranchAngle = -182.193830
[calcChildSegmentCoordinate] [336]: fixed childNode->MapData.accumulateBranchAngle = -182.193830
[displayNodeCoordinate] [100]: 21's startCoordinate: latitude = 40.343762, longitude = 116.818825
[displayNodeCoordinate] [105]: 21's endCoordinate: latitude = 40.343534, longitude = 116.818768
[       OK ] PsdMapTest.useRealRecordPsdWithCurve (3 ms)
[----------] 1 test from PsdMapTest (3 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (3 ms total)
[  PASSED  ] 1 test.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename PsdModule.info --test-name PsdModule --rc lcov_branch_coverage=1 --branch-coverage'
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_datSbtK
Scanning . for .gcda files ...
Found 6 data files in .
using: chunkSize: 1, nchunks:6, intervalLength:0
Finished processing 6 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 23
  lines.......: 56.3% (996 of 1770 lines)
  functions...: 70.9% (271 of 382 functions)
  branches....: 30.9% (187 of 606 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile PsdModule.info.
Found 23 entries.
Found common filename prefix "/usr/include/c++"
Generating output.
Processing file 7/ext/new_allocator.h
  lines=15 hit=13 functions=22 hit=17 branches=14 hit=4
Processing file 7/bits/allocator.h
  lines=6 hit=4 functions=7 hit=5
Processing file /home/zhao/Documents/Psd/src/PsdLocation.cpp
  lines=317 hit=70 functions=22 hit=5 branches=222 hit=19
Processing file /home/zhao/Documents/Psd/inc/PsdMap.h
  lines=1 hit=1 functions=1 hit=1
Processing file 7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file 7/iostream
  lines=1 hit=1
Processing file 7/bits/alloc_traits.h
  lines=22 hit=15 functions=21 hit=15
Processing file /home/zhao/Documents/Psd/src/Haversine.cpp
  lines=35 hit=19 functions=8 hit=5 branches=4 hit=2
Processing file 7/bits/ptr_traits.h
  lines=2 hit=0 functions=1 hit=0
Processing file 7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=18
Processing file 7/bits/stl_iterator.h
  lines=41 hit=37 functions=56 hit=42
Processing file 7/new
  lines=2 hit=2 functions=1 hit=1
Processing file 7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=4
Processing file 7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file 7/bits/stl_algobase.h
  lines=37 hit=20 functions=33 hit=25 branches=14 hit=8
Processing file /home/zhao/Documents/Psd/src/PsdMessageDecoder.cpp
  lines=110 hit=18 functions=21 hit=8 branches=42 hit=7
Processing file /home/zhao/Documents/Psd/src/PsdMap.cpp
  lines=895 hit=565 functions=40 hit=27 branches=246 hit=117
Processing file 7/bits/vector.tcc
  lines=86 hit=60 functions=9 hit=6 branches=22 hit=11
Processing file 7/bits/move.h
  lines=13 hit=9 functions=11 hit=7
Processing file /home/zhao/Documents/Psd/src/Location.cpp
  lines=11 hit=1 functions=5 hit=2 branches=4 hit=2
Processing file 7/bits/stl_vector.h
  lines=121 hit=108 functions=79 hit=63 branches=38 hit=17
Processing file /home/zhao/Documents/Psd/inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file /home/zhao/Documents/Psd/src/GeometricCalc.cpp
  lines=29 hit=29 functions=1 hit=1
Overall coverage rate:
  source files: 23
  lines.......: 56.3% (996 of 1770 lines)
  functions...: 70.9% (271 of 382 functions)
  branches....: 30.9% (187 of 606 branches)
Message summary:
  no messages were reported
