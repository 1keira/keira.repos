-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd/build
[ 12%] Building CXX object CMakeFiles/PsdModule.dir/src/GeometricCalc.cpp.o
[ 25%] Building CXX object CMakeFiles/PsdModule.dir/src/Haversine.cpp.o
[ 37%] Building CXX object CMakeFiles/PsdModule.dir/src/Location.cpp.o
[ 50%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdLocation.cpp.o
[ 62%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMap.cpp.o
[ 75%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMessageDecoder.cpp.o
[ 87%] Building CXX object CMakeFiles/PsdModule.dir/gtest/src/PsdTest.cpp.o
[100%] Linking CXX executable /home/zhao/Documents/Psd/gtest/output/bin/PsdModule
[100%] Built target PsdModule
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from PsdMapTest
[ RUN      ] PsdMapTest.useRealRecordPsdWithCurve
open successfully
[TestBody] [4713]: hvHeading = 0.000000
[TestBody] [4724]: headingAccuracy = 2.250000
[TestBody] [4448]: preSegmentId = 54
[TestBody] [4462]: prevSegmentId = 51
[TestBody] [4475]: preSegTotalLength = 40
[TestBody] [4448]: preSegmentId = 58
[TestBody] [4462]: prevSegmentId = 54
[TestBody] [4475]: preSegTotalLength = 26
[TestBody] [4448]: preSegmentId = 16
[TestBody] [4462]: prevSegmentId = 58
[TestBody] [4475]: preSegTotalLength = 24
[TestBody] [4448]: preSegmentId = 33
[TestBody] [4462]: prevSegmentId = 16
[TestBody] [4475]: preSegTotalLength = 2
[TestBody] [4448]: preSegmentId = 35
[TestBody] [4462]: prevSegmentId = 33
[TestBody] [4475]: preSegTotalLength = 30
[TestBody] [4448]: preSegmentId = 42
[TestBody] [4462]: prevSegmentId = 35
[TestBody] [4475]: preSegTotalLength = 34
[TestBody] [4448]: preSegmentId = 47
[TestBody] [4462]: prevSegmentId = 42
[TestBody] [4475]: preSegTotalLength = 20
[TestBody] [4448]: preSegmentId = 52
[TestBody] [4462]: prevSegmentId = 47
[TestBody] [4475]: preSegTotalLength = 10
[TestBody] [4448]: preSegmentId = 53
[TestBody] [4462]: prevSegmentId = 52
[TestBody] [4475]: preSegTotalLength = 36
[TestBody] [4448]: preSegmentId = 50
[TestBody] [4462]: prevSegmentId = 47
[TestBody] [4475]: preSegTotalLength = 34
[TestBody] [4598]: curSegmentId = 54
[TestBody] [4610]: curRemainLength = 38
[TestBody] [4677]: curSegment's latitude = 40.344001
[TestBody] [4696]: curSegment's longitude = 116.818758
[TestBody] [4713]: hvHeading = 143.600000
[TestBody] [4724]: headingAccuracy = 2.250000
[TestBody] [4448]: preSegmentId = 5
[TestBody] [4462]: prevSegmentId = 50
[TestBody] [4475]: preSegTotalLength = 26
[TestBody] [4448]: preSegmentId = 9
[TestBody] [4462]: prevSegmentId = 5
[TestBody] [4475]: preSegTotalLength = 26
[TestBody] [4448]: preSegmentId = 11
[TestBody] [4462]: prevSegmentId = 9
[TestBody] [4475]: preSegTotalLength = 34
[TestBody] [4448]: preSegmentId = 13
[TestBody] [4462]: prevSegmentId = 11
[TestBody] [4475]: preSegTotalLength = 28
[TestBody] [4448]: preSegmentId = 15
[TestBody] [4462]: prevSegmentId = 13
[TestBody] [4475]: preSegTotalLength = 32
[TestBody] [4448]: preSegmentId = 17
[TestBody] [4462]: prevSegmentId = 15
[TestBody] [4475]: preSegTotalLength = 32
[TestBody] [4448]: preSegmentId = 21
[TestBody] [4462]: prevSegmentId = 17
[TestBody] [4475]: preSegTotalLength = 26
[getInstance] [51]: first new a pInstance
[mapCreate] [1403]: --------------------------mapCreate------------------------------
[createNode] [1073]: newNode = 0x563dee2b5dc0
[insertNodeInTree] [1222]: curNode = 0x563dee2b5dc0
[curIdIsInList] [1417]: curSegmentId is in list = 54
[insertNodeInTree] [1248]: count = 1
[insertNodeInTree] [1249]: current tree is = 0x563dee2b5dc0, current tree Id is = 54, curSegmentId is = 54
[calcCurSegmentCoordinate] [507]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [540]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [565]: R = 52.900776
[calcCurSegmentCoordinate] [598]: finalRemainLength = 38.000000
[calcCurSegmentCoordinate] [625]: Sa = 27.605887, Se = 10.394113
[calcCurveXYOffset] [194]: arcR = 52.900776, arcRotationAngle = 29.899388, arcRotationAngleRad = 0.521843, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.133098
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -7.040984
[calcCurveXYOffset] [200]: dX = 26.369898
[calcCurveXYOffset] [201]: dY = 7.040984
[coordinateSystemRotates] [137]: accumulateBranchAngle = 143.600000, accumulateBranchAngleRad = 2.506293
[coordinateSystemRotates] [138]: dX = 26.369898
[coordinateSystemRotates] [139]: dY = 7.040984
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.804894
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.593419
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -21.224968
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 4.178253
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 15.648396
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -5.667244
[coordinateSystemRotates] [149]: coordinate system rotated X = -25.403220
[coordinateSystemRotates] [150]: coordinate system rotated Y = 9.981152
[calcCurSegmentCoordinate] [633]: first half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -25.403220, disHv2EndAfterRotatingCoord.distanceY = 9.981152
[calcDestination] [78]: destinationCoord latitude = 40.343773  destinationCoord longitude = 116.818876
[calcCurSegmentCoordinate] [636]: HV's one SampleCoord before the endCoord  latitude = 40.343773  longitude = 116.818876
[calcCurSegmentCoordinate] [639]: accumulateBranchAngleHv2End = 173.499388
[calcCurSegmentCoordinate] [641]: fixed accumulateBranchAngleHv2End = 173.499388
[calcCurveXYOffset] [194]: arcR = 140.500000, arcRotationAngle = 4.238710, arcRotationAngleRad = 0.073979, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.002735
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.384300
[calcCurveXYOffset] [200]: dX = 10.384634
[calcCurveXYOffset] [201]: dY = 0.384300
[coordinateSystemRotates] [137]: accumulateBranchAngle = 173.499388, accumulateBranchAngleRad = 3.028136
[coordinateSystemRotates] [138]: dX = 10.384634
[coordinateSystemRotates] [139]: dY = 0.384300
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.993571
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.113214
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -10.317868
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 0.043508
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 1.175684
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.381829
[coordinateSystemRotates] [149]: coordinate system rotated X = -10.361376
[coordinateSystemRotates] [150]: coordinate system rotated Y = 0.793855
[calcCurSegmentCoordinate] [649]: second half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -35.764596, disHv2EndAfterRotatingCoord.distanceY = 10.775007
[calcDestination] [78]: destinationCoord latitude = 40.343680  destinationCoord longitude = 116.818885
[calcCurSegmentCoordinate] [651]: HV's endCoordinate latitude = 40.343680  longitude = 116.818885
[calcCurSegmentCoordinate] [654]: accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [656]: fixed accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [660]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [663]: accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [665]: fixed accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [675]: R = 52.900776
[calcCurSegmentCoordinate] [703]: finalRemainLength = 2.000000
[calcCurSegmentCoordinate] [727]: Sa = 0.983857, Se = 1.016143
[calcCurveXYOffset] [194]: arcR = 52.900776, arcRotationAngle = 1.065596, arcRotationAngleRad = 0.018598, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.000173
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.009149
[calcCurveXYOffset] [200]: dX = 0.983801
[calcCurveXYOffset] [201]: dY = 0.009149
[coordinateSystemRotates] [137]: accumulateBranchAngle = 323.600000, accumulateBranchAngleRad = 5.647885
[coordinateSystemRotates] [138]: dX = 0.983801
[coordinateSystemRotates] [139]: dY = 0.983801
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.804894
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.593419
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [149]: coordinate system rotated X = 1.375661
[coordinateSystemRotates] [150]: coordinate system rotated Y = 0.208049
[calcCurSegmentCoordinate] [735]: first half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 1.375661, disHv2StartAfterRotatingCoord.distanceY = 0.208049
[calcDestination] [78]: destinationCoord latitude = 40.344013  destinationCoord longitude = 116.818760
[calcCurSegmentCoordinate] [738]: HV's one SampleCoord before the startCoord latitude = 40.344013  longitude = 116.818760
[calcCurSegmentCoordinate] [741]: accumulateBranchAngleHv2Start = 322.534404
[calcCurSegmentCoordinate] [743]: fixed accumulateBranchAngleHv2Start = 322.534404
[calcCurveXYOffset] [194]: arcR = 51.220000, arcRotationAngle = 1.136679, arcRotationAngleRad = 0.019839, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.000197
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.010079
[calcCurveXYOffset] [200]: dX = 1.016076
[calcCurveXYOffset] [201]: dY = 0.010079
[coordinateSystemRotates] [137]: accumulateBranchAngle = 322.534404, accumulateBranchAngleRad = 5.629287
[coordinateSystemRotates] [138]: dX = 1.016076
[coordinateSystemRotates] [139]: dY = 0.010079
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.793719
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.608285
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 0.806478
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.006131
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -0.618064
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.008000
[coordinateSystemRotates] [149]: coordinate system rotated X = 0.812609
[coordinateSystemRotates] [150]: coordinate system rotated Y = -0.610064
[calcCurSegmentCoordinate] [750]: second half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 2.188271, disHv2StartAfterRotatingCoord.distanceY = -0.402014
[calcDestination] [78]: destinationCoord latitude = 40.344021  destinationCoord longitude = 116.818753
[calcCurSegmentCoordinate] [752]: HV's startCoordinate latitude = 40.344021  longitude = 116.818753
[calcCurSegmentCoordinate] [755]: accumulateBranchAngleHv2Start = 321.397725
[calcCurSegmentCoordinate] [757]: fixed accumulateBranchAngleHv2Start = 321.397725
[displayNodeCoordinate] [75]: 54's startCoordinate: latitude = 40.344021, longitude = 116.818753
[displayNodeCoordinate] [78]: 54's SampleCoord: latitude = 40.344013, longitude = 116.818760
[displayNodeCoordinate] [78]: 54's SampleCoord: latitude = 40.343773, longitude = 116.818876
[displayNodeCoordinate] [80]: 54's endCoordinate: latitude = 40.343680, longitude = 116.818885
[insertNode] [1137]: (*it)->preSegmentId = 54's segIsInTree = 1
[findNodeById] [810]: result = (nil)
[insertNode] [1183]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[insertNode] [1215]: goto check the next segment info from vPsdMap
[insertNode] [1137]: (*it)->preSegmentId = 58's segIsInTree = 0
[insertNode] [1183]: tempNode is = 0x563dee2b5dc0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b5e80
[insertChildNode] [1081]: childNode = 0x563dee2b5e80
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = 213.171173, accumulateBranchAngleRad = 3.720539
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.837040
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.547142
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -21.014992
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 3.191023
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -13.736730
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 4.881753
[coordinateSystemRotates] [149]: coordinate system rotated X = -24.206015
[coordinateSystemRotates] [150]: coordinate system rotated Y = -8.854977
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -59.970611, accumulateXY.distanceY = 1.920030
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818781
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818781
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 187.015607
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 187.015607
[insertNode] [1204]: childNode's preSegmentId = 58
[displayNodeCoordinate] [75]: 58's startCoordinate: latitude = 40.343680, longitude = 116.818885
[displayNodeCoordinate] [80]: 58's endCoordinate: latitude = 40.343462, longitude = 116.818781
[insertNode] [1137]: (*it)->preSegmentId = 16's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b5e80
[insertNode] [1183]: tempNode is = 0x563dee2b5e80, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b5f40
[insertChildNode] [1081]: childNode = 0x563dee2b5f40
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 24.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [200]: dX = 23.296017
[calcCurveXYOffset] [201]: dY = -4.982242
[coordinateSystemRotates] [137]: accumulateBranchAngle = 187.015607, accumulateBranchAngleRad = 3.264038
[coordinateSystemRotates] [138]: dX = 23.296017
[coordinateSystemRotates] [139]: dY = -4.982242
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.992513
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.122140
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -23.121598
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 0.608530
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -2.845369
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 4.944939
[coordinateSystemRotates] [149]: coordinate system rotated X = -23.730127
[coordinateSystemRotates] [150]: coordinate system rotated Y = 2.099571
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -83.700738, accumulateXY.distanceY = 4.019600
[calcDestination] [78]: destinationCoord latitude = 40.343249  destinationCoord longitude = 116.818805
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343249  longitude = 116.818805
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 162.872007
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 162.872007
[insertNode] [1204]: childNode's preSegmentId = 16
[displayNodeCoordinate] [75]: 16's startCoordinate: latitude = 40.343462, longitude = 116.818781
[displayNodeCoordinate] [80]: 16's endCoordinate: latitude = 40.343249, longitude = 116.818805
[insertNode] [1137]: (*it)->preSegmentId = 33's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b5f40
[findNodeById] [805]: result = 0x563dee2b5f40
[insertNode] [1183]: tempNode is = 0x563dee2b5f40, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6000
[insertChildNode] [1081]: childNode = 0x563dee2b6000
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [200]: dX = 1.999589
[calcCurveXYOffset] [201]: dY = -0.035112
[coordinateSystemRotates] [137]: accumulateBranchAngle = 162.872007, accumulateBranchAngleRad = 2.842653
[coordinateSystemRotates] [138]: dX = 1.999589
[coordinateSystemRotates] [139]: dY = -0.035112
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.955649
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.294507
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -1.910906
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.010341
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 0.588893
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.033555
[coordinateSystemRotates] [149]: coordinate system rotated X = -1.900565
[coordinateSystemRotates] [150]: coordinate system rotated Y = 0.622448
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -85.601303, accumulateXY.distanceY = 4.642048
[calcDestination] [78]: destinationCoord latitude = 40.343232  destinationCoord longitude = 116.818813
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343232  longitude = 116.818813
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 160.860041
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 160.860041
[insertNode] [1204]: childNode's preSegmentId = 33
[displayNodeCoordinate] [75]: 33's startCoordinate: latitude = 40.343249, longitude = 116.818805
[displayNodeCoordinate] [80]: 33's endCoordinate: latitude = 40.343232, longitude = 116.818813
[insertNode] [1137]: (*it)->preSegmentId = 35's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b6000
[findNodeById] [805]: result = 0x563dee2b6000
[findNodeById] [805]: result = 0x563dee2b6000
[insertNode] [1183]: tempNode is = 0x563dee2b6000, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b60c0
[insertChildNode] [1081]: childNode = 0x563dee2b60c0
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [200]: dX = 28.631886
[calcCurveXYOffset] [201]: dY = -7.719981
[coordinateSystemRotates] [137]: accumulateBranchAngle = 160.860041, accumulateBranchAngleRad = 2.807537
[coordinateSystemRotates] [138]: dX = 28.631886
[coordinateSystemRotates] [139]: dY = -7.719981
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.944720
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.327877
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -27.049129
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -2.531203
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 9.387733
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 7.293224
[coordinateSystemRotates] [149]: coordinate system rotated X = -24.517926
[coordinateSystemRotates] [150]: coordinate system rotated Y = 16.680957
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -110.119230, accumulateXY.distanceY = 21.323005
[calcDestination] [78]: destinationCoord latitude = 40.343012  destinationCoord longitude = 116.819009
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343012  longitude = 116.819009
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 130.680542
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 130.680542
[insertNode] [1204]: childNode's preSegmentId = 35
[displayNodeCoordinate] [75]: 35's startCoordinate: latitude = 40.343232, longitude = 116.818813
[displayNodeCoordinate] [80]: 35's endCoordinate: latitude = 40.343012, longitude = 116.819009
[insertNode] [1137]: (*it)->preSegmentId = 42's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b60c0
[findNodeById] [805]: result = 0x563dee2b60c0
[findNodeById] [805]: result = 0x563dee2b60c0
[findNodeById] [805]: result = 0x563dee2b60c0
[insertNode] [1183]: tempNode is = 0x563dee2b60c0, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6180
[insertChildNode] [1081]: childNode = 0x563dee2b6180
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [200]: dX = 32.016281
[calcCurveXYOffset] [201]: dY = -9.850544
[coordinateSystemRotates] [137]: accumulateBranchAngle = 126.428573, accumulateBranchAngleRad = 2.206595
[coordinateSystemRotates] [138]: dX = 32.016281
[coordinateSystemRotates] [139]: dY = -9.850544
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.593820
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.804598
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -19.011914
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -7.925726
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 25.760228
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 5.849452
[coordinateSystemRotates] [149]: coordinate system rotated X = -11.086189
[coordinateSystemRotates] [150]: coordinate system rotated Y = 31.609680
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -121.205418, accumulateXY.distanceY = 52.932685
[calcDestination] [78]: destinationCoord latitude = 40.342912  destinationCoord longitude = 116.819382
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.342912  longitude = 116.819382
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 92.225140
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 92.225140
[insertNode] [1204]: childNode's preSegmentId = 42
[displayNodeCoordinate] [75]: 42's startCoordinate: latitude = 40.343012, longitude = 116.819009
[displayNodeCoordinate] [80]: 42's endCoordinate: latitude = 40.342912, longitude = 116.819382
[insertNode] [1137]: (*it)->preSegmentId = 47's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[insertNode] [1183]: tempNode is = 0x563dee2b6180, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6240
[insertChildNode] [1081]: childNode = 0x563dee2b6240
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [200]: dX = 19.591495
[calcCurveXYOffset] [201]: dY = -3.475608
[coordinateSystemRotates] [137]: accumulateBranchAngle = 92.225140, accumulateBranchAngleRad = 1.609632
[coordinateSystemRotates] [138]: dX = 19.591495
[coordinateSystemRotates] [139]: dY = -3.475608
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.038826
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.999246
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -0.760664
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -3.472988
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 19.576723
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.134945
[coordinateSystemRotates] [149]: coordinate system rotated X = 2.712323
[coordinateSystemRotates] [150]: coordinate system rotated Y = 19.711668
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -118.493095, accumulateXY.distanceY = 72.644353
[calcDestination] [78]: destinationCoord latitude = 40.342937  destinationCoord longitude = 116.819614
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.342937  longitude = 116.819614
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 72.105474
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 72.105474
[insertNode] [1204]: childNode's preSegmentId = 47
[displayNodeCoordinate] [75]: 47's startCoordinate: latitude = 40.342912, longitude = 116.819382
[displayNodeCoordinate] [80]: 47's endCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1137]: (*it)->preSegmentId = 52's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[insertNode] [1183]: tempNode is = 0x563dee2b6240, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6300
[insertChildNode] [1081]: childNode = 0x563dee2b6300
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 97.875000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [316]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [322]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [194]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [200]: dX = 4.146041
[calcCurveXYOffset] [201]: dY = -0.087854
[coordinateSystemRotates] [137]: accumulateBranchAngle = 104.703903, accumulateBranchAngleRad = 1.827428
[coordinateSystemRotates] [138]: dX = 4.146041
[coordinateSystemRotates] [139]: dY = -0.087854
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.253824
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.967250
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -1.052364
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.084977
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 4.010260
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.022299
[coordinateSystemRotates] [149]: coordinate system rotated X = -0.967387
[coordinateSystemRotates] [150]: coordinate system rotated Y = 4.032560
[calcChildSegmentCoordinate] [330]: first half of the curvature curve: accumulateXY.distanceX = -119.460483, accumulateXY.distanceY = 76.676912
[calcDestination] [78]: destinationCoord latitude = 40.342928  destinationCoord longitude = 116.819662
[calcChildSegmentCoordinate] [333]: one SampleCoord before the endCoord  latitude = 40.342928  longitude = 116.819662
[calcChildSegmentCoordinate] [336]: childNode->MapData.accumulateBranchAngle = 102.276094
[calcChildSegmentCoordinate] [338]: fixed childNode->MapData.accumulateBranchAngle = 102.276094
[calcCurveXYOffset] [194]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [200]: dX = 5.845774
[calcCurveXYOffset] [201]: dY = 0.246803
[coordinateSystemRotates] [137]: accumulateBranchAngle = 102.276094, accumulateBranchAngleRad = 1.785055
[coordinateSystemRotates] [138]: dX = 5.845774
[coordinateSystemRotates] [139]: dY = 0.246803
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.212623
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.977134
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -1.242944
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 0.241159
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 5.712107
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.052476
[coordinateSystemRotates] [149]: coordinate system rotated X = -1.484104
[coordinateSystemRotates] [150]: coordinate system rotated Y = 5.659631
[calcChildSegmentCoordinate] [346]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -120.944586, childNode->MapData.accumulateXY.distanceY = 82.336543
[calcDestination] [78]: destinationCoord latitude = 40.342915  destinationCoord longitude = 116.819728
[calcChildSegmentCoordinate] [348]: childSegment's endCoordinate latitude = 40.342915  longitude = 116.819728
[calcChildSegmentCoordinate] [351]: childNode->MapData.accumulateBranchAngle = 107.111160
[calcChildSegmentCoordinate] [353]: fixed accumulateBranchAngleHv2End = 107.111160
[insertNode] [1204]: childNode's preSegmentId = 52
[displayNodeCoordinate] [75]: 52's startCoordinate: latitude = 40.342937, longitude = 116.819614
[displayNodeCoordinate] [78]: 52's SampleCoord: latitude = 40.342928, longitude = 116.819662
[displayNodeCoordinate] [80]: 52's endCoordinate: latitude = 40.342915, longitude = 116.819728
[insertNode] [1137]: (*it)->preSegmentId = 53's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[insertNode] [1183]: tempNode is = 0x563dee2b6300, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b63c0
[insertChildNode] [1081]: childNode = 0x563dee2b63c0
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 35.875000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [316]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [322]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [194]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [200]: dX = 24.800115
[calcCurveXYOffset] [201]: dY = 9.952618
[coordinateSystemRotates] [137]: accumulateBranchAngle = 107.111160, accumulateBranchAngleRad = 1.869442
[coordinateSystemRotates] [138]: dX = 24.800115
[coordinateSystemRotates] [139]: dY = 9.952618
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.294226
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.955736
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -7.296851
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 9.512072
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 23.702356
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -2.928324
[coordinateSystemRotates] [149]: coordinate system rotated X = -16.808923
[coordinateSystemRotates] [150]: coordinate system rotated Y = 20.774032
[calcChildSegmentCoordinate] [330]: first half of the curvature curve: accumulateXY.distanceX = -137.753509, accumulateXY.distanceY = 103.110575
[calcDestination] [78]: destinationCoord latitude = 40.342764  destinationCoord longitude = 116.819973
[calcChildSegmentCoordinate] [333]: one SampleCoord before the endCoord  latitude = 40.342764  longitude = 116.819973
[calcChildSegmentCoordinate] [336]: childNode->MapData.accumulateBranchAngle = 150.843662
[calcChildSegmentCoordinate] [338]: fixed childNode->MapData.accumulateBranchAngle = 150.843662
[calcCurveXYOffset] [194]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [200]: dX = 8.609263
[calcCurveXYOffset] [201]: dY = 0.325564
[coordinateSystemRotates] [137]: accumulateBranchAngle = 150.843662, accumulateBranchAngleRad = 2.632719
[coordinateSystemRotates] [138]: dX = 8.609263
[coordinateSystemRotates] [139]: dY = 0.325564
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.873294
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.487194
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -7.518414
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 0.158613
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 4.194384
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.284313
[coordinateSystemRotates] [149]: coordinate system rotated X = -7.677027
[coordinateSystemRotates] [150]: coordinate system rotated Y = 3.910071
[calcChildSegmentCoordinate] [346]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -145.430537, childNode->MapData.accumulateXY.distanceY = 107.020646
[calcDestination] [78]: destinationCoord latitude = 40.342695  destinationCoord longitude = 116.820019
[calcChildSegmentCoordinate] [348]: childSegment's endCoordinate latitude = 40.342695  longitude = 116.820019
[calcChildSegmentCoordinate] [351]: childNode->MapData.accumulateBranchAngle = 155.174945
[calcChildSegmentCoordinate] [353]: fixed accumulateBranchAngleHv2End = 155.174945
[insertNode] [1204]: childNode's preSegmentId = 53
[displayNodeCoordinate] [75]: 53's startCoordinate: latitude = 40.342915, longitude = 116.819728
[displayNodeCoordinate] [78]: 53's SampleCoord: latitude = 40.342764, longitude = 116.819973
[displayNodeCoordinate] [80]: 53's endCoordinate: latitude = 40.342695, longitude = 116.820019
[insertNode] [1137]: (*it)->preSegmentId = 50's segIsInTree = 0
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[insertNode] [1183]: tempNode is = 0x563dee2b6240, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6480
[insertChildNode] [1081]: childNode = 0x563dee2b6480
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [200]: dX = 32.016281
[calcCurveXYOffset] [201]: dY = -9.850544
[coordinateSystemRotates] [137]: accumulateBranchAngle = 72.105474, accumulateBranchAngleRad = 1.258478
[coordinateSystemRotates] [138]: dX = 32.016281
[coordinateSystemRotates] [139]: dY = -9.850544
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.307266
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.951624
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 9.837505
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -9.374012
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 30.467454
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -3.026734
[coordinateSystemRotates] [149]: coordinate system rotated X = 19.211517
[coordinateSystemRotates] [150]: coordinate system rotated Y = 27.440719
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -99.281578, accumulateXY.distanceY = 100.085072
[calcDestination] [78]: destinationCoord latitude = 40.343109  destinationCoord longitude = 116.819938
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343109  longitude = 116.819938
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 37.902041
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 37.902041
[insertNode] [1204]: childNode's preSegmentId = 50
[displayNodeCoordinate] [75]: 50's startCoordinate: latitude = 40.342937, longitude = 116.819614
[displayNodeCoordinate] [80]: 50's endCoordinate: latitude = 40.343109, longitude = 116.819938
[insertNode] [1137]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[insertNode] [1183]: tempNode is = 0x563dee2b6480, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6540
[insertChildNode] [1081]: childNode = 0x563dee2b6540
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = 37.902041, accumulateBranchAngleRad = 0.661515
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.789062
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.614313
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 19.810453
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -3.582776
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 15.423151
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -4.601940
[coordinateSystemRotates] [149]: coordinate system rotated X = 23.393229
[coordinateSystemRotates] [150]: coordinate system rotated Y = 10.821211
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -75.888349, accumulateXY.distanceY = 110.906283
[calcDestination] [78]: destinationCoord latitude = 40.343319  destinationCoord longitude = 116.820065
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343319  longitude = 116.820065
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 11.746475
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 11.746475
[insertNode] [1204]: childNode's preSegmentId = 5
[displayNodeCoordinate] [75]: 5's startCoordinate: latitude = 40.343109, longitude = 116.819938
[displayNodeCoordinate] [80]: 5's endCoordinate: latitude = 40.343319, longitude = 116.820065
[insertNode] [1137]: (*it)->preSegmentId = 9's segIsInTree = 0
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[insertNode] [1183]: tempNode is = 0x563dee2b6540, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6600
[insertChildNode] [1081]: childNode = 0x563dee2b6600
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = 11.746475, accumulateBranchAngleRad = 0.205015
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.979058
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.203582
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 24.580550
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -1.187321
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 5.111184
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -5.710027
[coordinateSystemRotates] [149]: coordinate system rotated X = 25.767871
[coordinateSystemRotates] [150]: coordinate system rotated Y = -0.598843
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -50.120478, accumulateXY.distanceY = 110.307440
[calcDestination] [78]: destinationCoord latitude = 40.343551  destinationCoord longitude = 116.820058
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343551  longitude = 116.820058
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -14.409091
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -14.409091
[insertNode] [1204]: childNode's preSegmentId = 9
[displayNodeCoordinate] [75]: 9's startCoordinate: latitude = 40.343319, longitude = 116.820065
[displayNodeCoordinate] [80]: 9's endCoordinate: latitude = 40.343551, longitude = 116.820058
[insertNode] [1137]: (*it)->preSegmentId = 11's segIsInTree = 0
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[insertNode] [1183]: tempNode is = 0x563dee2b6600, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b66c0
[insertChildNode] [1081]: childNode = 0x563dee2b66c0
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [200]: dX = 32.016281
[calcCurveXYOffset] [201]: dY = -9.850544
[coordinateSystemRotates] [137]: accumulateBranchAngle = -18.661060, accumulateBranchAngleRad = -0.325697
[coordinateSystemRotates] [138]: dX = 32.016281
[coordinateSystemRotates] [139]: dY = -9.850544
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.947428
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.319969
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 30.333120
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 3.151870
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -10.244223
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -9.332681
[coordinateSystemRotates] [149]: coordinate system rotated X = 27.181249
[coordinateSystemRotates] [150]: coordinate system rotated Y = -19.576903
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -22.939229, accumulateXY.distanceY = 90.730537
[calcDestination] [78]: destinationCoord latitude = 40.343795  destinationCoord longitude = 116.819827
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343795  longitude = 116.819827
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -52.864493
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -52.864493
[insertNode] [1204]: childNode's preSegmentId = 11
[displayNodeCoordinate] [75]: 11's startCoordinate: latitude = 40.343551, longitude = 116.820058
[displayNodeCoordinate] [80]: 11's endCoordinate: latitude = 40.343795, longitude = 116.819827
[insertNode] [1137]: (*it)->preSegmentId = 13's segIsInTree = 0
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[insertNode] [1183]: tempNode is = 0x563dee2b66c0, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6780
[insertChildNode] [1081]: childNode = 0x563dee2b6780
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [200]: dX = 26.885681
[calcCurveXYOffset] [201]: dY = -6.745119
[coordinateSystemRotates] [137]: accumulateBranchAngle = -52.864493, accumulateBranchAngleRad = -0.922659
[coordinateSystemRotates] [138]: dX = 26.885681
[coordinateSystemRotates] [139]: dY = -6.745119
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.603702
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.797210
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 16.230944
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 5.377276
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -21.433533
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -4.072043
[coordinateSystemRotates] [149]: coordinate system rotated X = 10.853668
[coordinateSystemRotates] [150]: coordinate system rotated Y = -25.505575
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -12.085561, accumulateXY.distanceY = 65.224961
[calcDestination] [78]: destinationCoord latitude = 40.343892  destinationCoord longitude = 116.819527
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343892  longitude = 116.819527
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -81.032025
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -81.032025
[insertNode] [1204]: childNode's preSegmentId = 13
[displayNodeCoordinate] [75]: 13's startCoordinate: latitude = 40.343795, longitude = 116.819827
[displayNodeCoordinate] [80]: 13's endCoordinate: latitude = 40.343892, longitude = 116.819527
[insertNode] [1137]: (*it)->preSegmentId = 15's segIsInTree = 0
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[insertNode] [1183]: tempNode is = 0x563dee2b6780, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6860
[insertChildNode] [1081]: childNode = 0x563dee2b6860
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [200]: dX = 30.342789
[calcCurveXYOffset] [201]: dY = -8.755548
[coordinateSystemRotates] [137]: accumulateBranchAngle = -81.032025, accumulateBranchAngleRad = -1.414276
[coordinateSystemRotates] [138]: dX = 30.342789
[coordinateSystemRotates] [139]: dY = -8.755548
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.155882
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.987776
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 4.729906
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 8.648517
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -29.971868
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -1.364836
[coordinateSystemRotates] [149]: coordinate system rotated X = -3.918611
[coordinateSystemRotates] [150]: coordinate system rotated Y = -31.336703
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -16.004173, accumulateXY.distanceY = 33.888258
[calcDestination] [78]: destinationCoord latitude = 40.343857  destinationCoord longitude = 116.819157
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343857  longitude = 116.819157
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -113.223491
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -113.223491
[insertNode] [1204]: childNode's preSegmentId = 15
[displayNodeCoordinate] [75]: 15's startCoordinate: latitude = 40.343892, longitude = 116.819527
[displayNodeCoordinate] [80]: 15's endCoordinate: latitude = 40.343857, longitude = 116.819157
[insertNode] [1137]: (*it)->preSegmentId = 17's segIsInTree = 0
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[insertNode] [1183]: tempNode is = 0x563dee2b6860, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6940
[insertChildNode] [1081]: childNode = 0x563dee2b6940
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [200]: dX = 30.342789
[calcCurveXYOffset] [201]: dY = -8.755548
[coordinateSystemRotates] [137]: accumulateBranchAngle = -113.223491, accumulateBranchAngleRad = -1.976123
[coordinateSystemRotates] [138]: dX = 30.342789
[coordinateSystemRotates] [139]: dY = -8.755548
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.394319
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.918974
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -11.964730
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 8.046119
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -27.884227
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 3.452477
[coordinateSystemRotates] [149]: coordinate system rotated X = -20.010849
[coordinateSystemRotates] [150]: coordinate system rotated Y = -24.431750
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -36.015021, accumulateXY.distanceY = 9.456508
[calcDestination] [78]: destinationCoord latitude = 40.343677  destinationCoord longitude = 116.818869
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343677  longitude = 116.818869
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -145.414957
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -145.414957
[insertNode] [1204]: childNode's preSegmentId = 17
[displayNodeCoordinate] [75]: 17's startCoordinate: latitude = 40.343857, longitude = 116.819157
[displayNodeCoordinate] [80]: 17's endCoordinate: latitude = 40.343677, longitude = 116.818869
[insertNode] [1137]: (*it)->preSegmentId = 21's segIsInTree = 0
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[insertNode] [1183]: tempNode is = 0x563dee2b6940, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 0
[createNode] [1073]: newNode = 0x563dee2b6a20
[insertChildNode] [1081]: childNode = 0x563dee2b6a20
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = -145.414957, accumulateBranchAngleRad = -2.537970
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.823285
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.567629
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -20.669652
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 3.310504
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -14.251075
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 4.801531
[coordinateSystemRotates] [149]: coordinate system rotated X = -23.980156
[coordinateSystemRotates] [150]: coordinate system rotated Y = -9.449545
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -59.995178, accumulateXY.distanceY = 0.006963
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818758
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818758
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -171.570523
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -171.570523
[insertNode] [1204]: childNode's preSegmentId = 21
[displayNodeCoordinate] [75]: 21's startCoordinate: latitude = 40.343677, longitude = 116.818869
[displayNodeCoordinate] [80]: 21's endCoordinate: latitude = 40.343462, longitude = 116.818758
open successfully
[TestBody] [4880]: curSegment's latitude = 40.343751
[TestBody] [4899]: curSegment's longitude = 116.818822
[TestBody] [4916]: hvHeading = 191.600000
[TestBody] [4927]: headingAccuracy = 1.650000
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[TestBody] [4803]: curSegmentId = 58
[TestBody] [4814]: curRemainLength = 18
[TestBody] [4880]: curSegment's latitude = 40.343698
[TestBody] [4899]: curSegment's longitude = 116.818810
[TestBody] [4916]: hvHeading = 194.500000
[TestBody] [4927]: headingAccuracy = 1.650000
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
键为 PSD_Pos_Segment_ID GNSS_Nachrichtenpaket_ID1 GNSS_Nachrichtenpaket_ID2  的不存在
[mapUpdate] [1301]: --------------------------update the attribute of root, parent and current and delete out of date childs------------------------------
[updateRootNode] [1041]: updateRootNode
[mapUpdate] [1313]: updateOtherNode
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[updateChildNode] [944]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[updateChildNode] [977]: goto check the next segment info from vPsdMap
[updateChildNode] [944]: tempNode is = 0x563dee2b5dc0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b5e80
[updateChildNode] [944]: tempNode is = 0x563dee2b5e80, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b5f40
[findNodeById] [805]: result = 0x563dee2b5f40
[updateChildNode] [944]: tempNode is = 0x563dee2b5f40, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b6000
[findNodeById] [805]: result = 0x563dee2b6000
[findNodeById] [805]: result = 0x563dee2b6000
[updateChildNode] [944]: tempNode is = 0x563dee2b6000, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b60c0
[findNodeById] [805]: result = 0x563dee2b60c0
[findNodeById] [805]: result = 0x563dee2b60c0
[findNodeById] [805]: result = 0x563dee2b60c0
[updateChildNode] [944]: tempNode is = 0x563dee2b60c0, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[findNodeById] [805]: result = 0x563dee2b6180
[updateChildNode] [944]: tempNode is = 0x563dee2b6180, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[updateChildNode] [944]: tempNode is = 0x563dee2b6240, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[findNodeById] [805]: result = 0x563dee2b6300
[updateChildNode] [944]: tempNode is = 0x563dee2b6300, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[findNodeById] [805]: result = 0x563dee2b6240
[updateChildNode] [944]: tempNode is = 0x563dee2b6240, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[findNodeById] [805]: result = 0x563dee2b6480
[updateChildNode] [944]: tempNode is = 0x563dee2b6480, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[findNodeById] [805]: result = 0x563dee2b6540
[updateChildNode] [944]: tempNode is = 0x563dee2b6540, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[findNodeById] [805]: result = 0x563dee2b6600
[updateChildNode] [944]: tempNode is = 0x563dee2b6600, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[findNodeById] [805]: result = 0x563dee2b66c0
[updateChildNode] [944]: tempNode is = 0x563dee2b66c0, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[findNodeById] [805]: result = 0x563dee2b6780
[updateChildNode] [944]: tempNode is = 0x563dee2b6780, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[findNodeById] [805]: result = 0x563dee2b6860
[updateChildNode] [944]: tempNode is = 0x563dee2b6860, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[findNodeById] [810]: result = (nil)
[findNodeById] [810]: result = (nil)
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[findNodeById] [805]: result = 0x563dee2b6940
[updateChildNode] [944]: tempNode is = 0x563dee2b6940, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 1
[updateChildNode] [970]: some nodes are already in tree
[mapUpdate] [1339]: --------------------------update the Coordinate of root, parent, current and childs------------------------------
[findNodeById] [805]: result = 0x563dee2b5e80
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = 177.738098, accumulateBranchAngleRad = 3.102115
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.999221
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.039467
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -25.086765
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.230180
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 0.990881
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 5.827620
[coordinateSystemRotates] [149]: coordinate system rotated X = -24.856585
[coordinateSystemRotates] [150]: coordinate system rotated Y = 6.818501
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -60.621181, accumulateXY.distanceY = 17.593507
[calcDestination] [78]: destinationCoord latitude = 40.343153  destinationCoord longitude = 116.819017
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343153  longitude = 116.819017
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 151.582532
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 151.582532
[displayNodeCoordinate] [75]: 58's startCoordinate: latitude = 40.343680, longitude = 116.818885
[displayNodeCoordinate] [80]: 58's endCoordinate: latitude = 40.343153, longitude = 116.819017
[calcCurSegmentCoordinate] [507]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [540]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [565]: R = 78.738785
[calcCurSegmentCoordinate] [598]: finalRemainLength = 18.000000
[calcCurSegmentCoordinate] [625]: Sa = 11.535368, Se = 6.464632
[calcCurveXYOffset] [194]: arcR = 78.738785, arcRotationAngle = 8.393930, arcRotationAngleRad = 0.146502, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.010712
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.843465
[calcCurveXYOffset] [200]: dX = 11.494148
[calcCurveXYOffset] [201]: dY = 0.843465
[coordinateSystemRotates] [137]: accumulateBranchAngle = 194.500000, accumulateBranchAngleRad = 3.394665
[coordinateSystemRotates] [138]: dX = 11.494148
[coordinateSystemRotates] [139]: dY = 0.843465
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.968148
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.250380
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -11.128033
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.211187
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -2.877905
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.816599
[coordinateSystemRotates] [149]: coordinate system rotated X = -10.916846
[coordinateSystemRotates] [150]: coordinate system rotated Y = -3.694504
[calcCurSegmentCoordinate] [633]: first half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -10.916846, disHv2EndAfterRotatingCoord.distanceY = -3.694504
[calcDestination] [78]: destinationCoord latitude = 40.343600  destinationCoord longitude = 116.818766
[calcCurSegmentCoordinate] [636]: HV's one SampleCoord before the endCoord  latitude = 40.343600  longitude = 116.818766
[calcCurSegmentCoordinate] [639]: accumulateBranchAngleHv2End = 202.893930
[calcCurSegmentCoordinate] [641]: fixed accumulateBranchAngleHv2End = 202.893930
[calcCurveXYOffset] [194]: arcR = 140.500000, arcRotationAngle = 2.636272, arcRotationAngleRad = 0.046012, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.001058
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.148698
[calcCurveXYOffset] [200]: dX = 6.462352
[calcCurveXYOffset] [201]: dY = 0.148698
[coordinateSystemRotates] [137]: accumulateBranchAngle = 202.893930, accumulateBranchAngleRad = 3.541167
[coordinateSystemRotates] [138]: dX = 6.462352
[coordinateSystemRotates] [139]: dY = 0.148698
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.921227
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.389026
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -5.953290
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.057847
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -2.514025
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.136984
[coordinateSystemRotates] [149]: coordinate system rotated X = -5.895443
[coordinateSystemRotates] [150]: coordinate system rotated Y = -2.651010
[calcCurSegmentCoordinate] [649]: second half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -16.812289, disHv2EndAfterRotatingCoord.distanceY = -6.345514
[calcDestination] [78]: destinationCoord latitude = 40.343547  destinationCoord longitude = 116.818735
[calcCurSegmentCoordinate] [651]: HV's endCoordinate latitude = 40.343547  longitude = 116.818735
[calcCurSegmentCoordinate] [654]: accumulateBranchAngleHv2End = 205.530202
[calcCurSegmentCoordinate] [656]: fixed accumulateBranchAngleHv2End = 205.530202
[calcCurSegmentCoordinate] [660]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [663]: accumulateBranchAngleHv2Start = 374.500000
[calcCurSegmentCoordinate] [665]: fixed accumulateBranchAngleHv2Start = 14.500000
[calcCurSegmentCoordinate] [675]: R = 78.738785
[calcCurSegmentCoordinate] [703]: finalRemainLength = 22.000000
[calcCurSegmentCoordinate] [727]: Sa = 8.670749, Se = 13.329251
[calcCurveXYOffset] [194]: arcR = 78.738785, arcRotationAngle = 6.309436, arcRotationAngleRad = 0.110120, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.006057
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.476931
[calcCurveXYOffset] [200]: dX = 8.653235
[calcCurveXYOffset] [201]: dY = 0.476931
[coordinateSystemRotates] [137]: accumulateBranchAngle = 14.500000, accumulateBranchAngleRad = 0.253073
[coordinateSystemRotates] [138]: dX = 8.653235
[coordinateSystemRotates] [139]: dY = 8.653235
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.968148
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.250380
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 8.377609
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 2.166597
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 2.166597
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 8.377609
[coordinateSystemRotates] [149]: coordinate system rotated X = 6.211012
[coordinateSystemRotates] [150]: coordinate system rotated Y = 10.544206
[calcCurSegmentCoordinate] [735]: first half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 6.211012, disHv2StartAfterRotatingCoord.distanceY = 10.544206
[calcDestination] [78]: destinationCoord latitude = 40.343754  destinationCoord longitude = 116.818934
[calcCurSegmentCoordinate] [738]: HV's one SampleCoord before the startCoord latitude = 40.343754  longitude = 116.818934
[calcCurSegmentCoordinate] [741]: accumulateBranchAngleHv2Start = 8.190564
[calcCurSegmentCoordinate] [743]: fixed accumulateBranchAngleHv2Start = 8.190564
[calcCurveXYOffset] [194]: arcR = 51.220000, arcRotationAngle = 14.910383, arcRotationAngleRad = 0.260235, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.033671
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -1.724605
[calcCurveXYOffset] [200]: dX = 13.179312
[calcCurveXYOffset] [201]: dY = 1.724605
[coordinateSystemRotates] [137]: accumulateBranchAngle = 8.190564, accumulateBranchAngleRad = 0.142952
[coordinateSystemRotates] [138]: dX = 13.179312
[coordinateSystemRotates] [139]: dY = 1.724605
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.989800
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.142466
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 13.044879
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 0.245697
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 1.877603
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 1.707013
[coordinateSystemRotates] [149]: coordinate system rotated X = 12.799181
[coordinateSystemRotates] [150]: coordinate system rotated Y = 3.584616
[calcCurSegmentCoordinate] [750]: second half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 19.010193, disHv2StartAfterRotatingCoord.distanceY = 14.128823
[calcDestination] [78]: destinationCoord latitude = 40.343869  destinationCoord longitude = 116.818977
[calcCurSegmentCoordinate] [752]: HV's startCoordinate latitude = 40.343869  longitude = 116.818977
[calcCurSegmentCoordinate] [755]: accumulateBranchAngleHv2Start = -6.719819
[calcCurSegmentCoordinate] [757]: fixed accumulateBranchAngleHv2Start = -6.719819
[displayNodeCoordinate] [75]: 54's startCoordinate: latitude = 40.343869, longitude = 116.818977
[displayNodeCoordinate] [78]: 54's SampleCoord: latitude = 40.343754, longitude = 116.818934
[displayNodeCoordinate] [78]: 54's SampleCoord: latitude = 40.344013, longitude = 116.818760
[displayNodeCoordinate] [78]: 54's SampleCoord: latitude = 40.343773, longitude = 116.818876
[displayNodeCoordinate] [78]: 54's SampleCoord: latitude = 40.343600, longitude = 116.818766
[displayNodeCoordinate] [80]: 54's endCoordinate: latitude = 40.343547, longitude = 116.818735
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 24.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [200]: dX = 23.296017
[calcCurveXYOffset] [201]: dY = -4.982242
[coordinateSystemRotates] [137]: accumulateBranchAngle = 151.582532, accumulateBranchAngleRad = 2.645614
[coordinateSystemRotates] [138]: dX = 23.296017
[coordinateSystemRotates] [139]: dY = -4.982242
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.879504
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.475892
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -20.488929
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -2.371011
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 11.086397
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 4.381899
[coordinateSystemRotates] [149]: coordinate system rotated X = -18.117918
[coordinateSystemRotates] [150]: coordinate system rotated Y = 15.468296
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -78.739100, accumulateXY.distanceY = 33.061803
[calcDestination] [78]: destinationCoord latitude = 40.342991  destinationCoord longitude = 116.819200
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.342991  longitude = 116.819200
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 127.438932
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 127.438932
[displayNodeCoordinate] [75]: 16's startCoordinate: latitude = 40.343153, longitude = 116.819017
[displayNodeCoordinate] [80]: 16's endCoordinate: latitude = 40.342991, longitude = 116.819200
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [200]: dX = 1.999589
[calcCurveXYOffset] [201]: dY = -0.035112
[coordinateSystemRotates] [137]: accumulateBranchAngle = 127.438932, accumulateBranchAngleRad = 2.224229
[coordinateSystemRotates] [138]: dX = 1.999589
[coordinateSystemRotates] [139]: dY = -0.035112
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.607916
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.794002
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -1.215581
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.027879
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 1.587677
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.021345
[coordinateSystemRotates] [149]: coordinate system rotated X = -1.187702
[coordinateSystemRotates] [150]: coordinate system rotated Y = 1.609022
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -79.926802, accumulateXY.distanceY = 34.670825
[calcDestination] [78]: destinationCoord latitude = 40.342980  destinationCoord longitude = 116.819219
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.342980  longitude = 116.819219
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 125.426966
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 125.426966
[displayNodeCoordinate] [75]: 33's startCoordinate: latitude = 40.342991, longitude = 116.819200
[displayNodeCoordinate] [80]: 33's endCoordinate: latitude = 40.342980, longitude = 116.819219
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [200]: dX = 28.631886
[calcCurveXYOffset] [201]: dY = -7.719981
[coordinateSystemRotates] [137]: accumulateBranchAngle = 125.426966, accumulateBranchAngleRad = 2.189114
[coordinateSystemRotates] [138]: dX = 28.631886
[coordinateSystemRotates] [139]: dY = -7.719981
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.579665
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.814855
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -16.596895
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -6.290666
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 23.330838
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 4.475001
[coordinateSystemRotates] [149]: coordinate system rotated X = -10.306229
[coordinateSystemRotates] [150]: coordinate system rotated Y = 27.805839
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -90.233031, accumulateXY.distanceY = 62.476664
[calcDestination] [78]: destinationCoord latitude = 40.342887  destinationCoord longitude = 116.819546
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.342887  longitude = 116.819546
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 95.247467
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 95.247467
[displayNodeCoordinate] [75]: 35's startCoordinate: latitude = 40.342980, longitude = 116.819219
[displayNodeCoordinate] [80]: 35's endCoordinate: latitude = 40.342887, longitude = 116.819546
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [200]: dX = 32.016281
[calcCurveXYOffset] [201]: dY = -9.850544
[coordinateSystemRotates] [137]: accumulateBranchAngle = 90.995498, accumulateBranchAngleRad = 1.588171
[coordinateSystemRotates] [138]: dX = 32.016281
[coordinateSystemRotates] [139]: dY = -9.850544
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.017374
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.999849
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -0.556246
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -9.849057
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 32.011448
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.171142
[coordinateSystemRotates] [149]: coordinate system rotated X = 9.292812
[coordinateSystemRotates] [150]: coordinate system rotated Y = 32.182590
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -80.940220, accumulateXY.distanceY = 94.659254
[calcDestination] [78]: destinationCoord latitude = 40.342971  destinationCoord longitude = 116.819926
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.342971  longitude = 116.819926
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 56.792065
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 56.792065
[displayNodeCoordinate] [75]: 42's startCoordinate: latitude = 40.342887, longitude = 116.819546
[displayNodeCoordinate] [80]: 42's endCoordinate: latitude = 40.342971, longitude = 116.819926
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [200]: dX = 19.591495
[calcCurveXYOffset] [201]: dY = -3.475608
[coordinateSystemRotates] [137]: accumulateBranchAngle = 56.792065, accumulateBranchAngleRad = 0.991209
[coordinateSystemRotates] [138]: dX = 19.591495
[coordinateSystemRotates] [139]: dY = -3.475608
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.547679
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.836688
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 10.729853
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -2.908001
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 16.391978
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -1.903518
[coordinateSystemRotates] [149]: coordinate system rotated X = 13.637854
[coordinateSystemRotates] [150]: coordinate system rotated Y = 14.488460
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -67.302366, accumulateXY.distanceY = 109.147714
[calcDestination] [78]: destinationCoord latitude = 40.343093  destinationCoord longitude = 116.820096
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343093  longitude = 116.820096
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 36.672399
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 36.672399
[displayNodeCoordinate] [75]: 47's startCoordinate: latitude = 40.342971, longitude = 116.819926
[displayNodeCoordinate] [80]: 47's endCoordinate: latitude = 40.343093, longitude = 116.820096
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 97.875000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [316]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [322]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [194]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [200]: dX = 4.146041
[calcCurveXYOffset] [201]: dY = -0.087854
[coordinateSystemRotates] [137]: accumulateBranchAngle = 69.270828, accumulateBranchAngleRad = 1.209004
[coordinateSystemRotates] [138]: dX = 4.146041
[coordinateSystemRotates] [139]: dY = -0.087854
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.353951
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.935264
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 1.467496
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.082166
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 3.877643
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.031096
[coordinateSystemRotates] [149]: coordinate system rotated X = 1.549662
[coordinateSystemRotates] [150]: coordinate system rotated Y = 3.846547
[calcChildSegmentCoordinate] [330]: first half of the curvature curve: accumulateXY.distanceX = -65.752704, accumulateXY.distanceY = 112.994261
[calcDestination] [78]: destinationCoord latitude = 40.343107  destinationCoord longitude = 116.820142
[calcChildSegmentCoordinate] [333]: one SampleCoord before the endCoord  latitude = 40.343107  longitude = 116.820142
[calcChildSegmentCoordinate] [336]: childNode->MapData.accumulateBranchAngle = 66.843019
[calcChildSegmentCoordinate] [338]: fixed childNode->MapData.accumulateBranchAngle = 66.843019
[calcCurveXYOffset] [194]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [200]: dX = 5.845774
[calcCurveXYOffset] [201]: dY = 0.246803
[coordinateSystemRotates] [137]: accumulateBranchAngle = 66.843019, accumulateBranchAngleRad = 1.166631
[coordinateSystemRotates] [138]: dX = 5.845774
[coordinateSystemRotates] [139]: dY = 0.246803
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.393252
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.919431
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 2.298860
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 0.226918
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 5.374785
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 0.097056
[coordinateSystemRotates] [149]: coordinate system rotated X = 2.071943
[coordinateSystemRotates] [150]: coordinate system rotated Y = 5.471840
[calcChildSegmentCoordinate] [346]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -63.680761, childNode->MapData.accumulateXY.distanceY = 118.466102
[calcDestination] [78]: destinationCoord latitude = 40.343126  destinationCoord longitude = 116.820206
[calcChildSegmentCoordinate] [348]: childSegment's endCoordinate latitude = 40.343126  longitude = 116.820206
[calcChildSegmentCoordinate] [351]: childNode->MapData.accumulateBranchAngle = 71.678085
[calcChildSegmentCoordinate] [353]: fixed accumulateBranchAngleHv2End = 71.678085
[displayNodeCoordinate] [75]: 52's startCoordinate: latitude = 40.343093, longitude = 116.820096
[displayNodeCoordinate] [78]: 52's SampleCoord: latitude = 40.342928, longitude = 116.819662
[displayNodeCoordinate] [78]: 52's SampleCoord: latitude = 40.343107, longitude = 116.820142
[displayNodeCoordinate] [80]: 52's endCoordinate: latitude = 40.343126, longitude = 116.820206
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [200]: dX = 32.016281
[calcCurveXYOffset] [201]: dY = -9.850544
[coordinateSystemRotates] [137]: accumulateBranchAngle = 36.672399, accumulateBranchAngleRad = 0.640054
[coordinateSystemRotates] [138]: dX = 32.016281
[coordinateSystemRotates] [139]: dY = -9.850544
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.802063
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.597239
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 25.679089
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -5.883127
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 19.121366
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -7.900761
[coordinateSystemRotates] [149]: coordinate system rotated X = 31.562216
[coordinateSystemRotates] [150]: coordinate system rotated Y = 11.220605
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -35.740150, accumulateXY.distanceY = 120.368319
[calcDestination] [78]: destinationCoord latitude = 40.343377  destinationCoord longitude = 116.820229
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343377  longitude = 116.820229
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = 2.468966
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = 2.468966
[displayNodeCoordinate] [75]: 50's startCoordinate: latitude = 40.343093, longitude = 116.820096
[displayNodeCoordinate] [80]: 50's endCoordinate: latitude = 40.343377, longitude = 116.820229
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 35.875000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [316]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [322]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [194]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [200]: dX = 24.800115
[calcCurveXYOffset] [201]: dY = 9.952618
[coordinateSystemRotates] [137]: accumulateBranchAngle = 71.678085, accumulateBranchAngleRad = 1.251019
[coordinateSystemRotates] [138]: dX = 24.800115
[coordinateSystemRotates] [139]: dY = 9.952618
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.314356
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.949305
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 7.796054
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 9.448073
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 23.542881
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 3.128661
[coordinateSystemRotates] [149]: coordinate system rotated X = -1.652018
[coordinateSystemRotates] [150]: coordinate system rotated Y = 26.671542
[calcChildSegmentCoordinate] [330]: first half of the curvature curve: accumulateXY.distanceX = -65.332779, accumulateXY.distanceY = 145.137643
[calcDestination] [78]: destinationCoord latitude = 40.343111  destinationCoord longitude = 116.820521
[calcChildSegmentCoordinate] [333]: one SampleCoord before the endCoord  latitude = 40.343111  longitude = 116.820521
[calcChildSegmentCoordinate] [336]: childNode->MapData.accumulateBranchAngle = 115.410587
[calcChildSegmentCoordinate] [338]: fixed childNode->MapData.accumulateBranchAngle = 115.410587
[calcCurveXYOffset] [194]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [200]: dX = 8.609263
[calcCurveXYOffset] [201]: dY = 0.325564
[coordinateSystemRotates] [137]: accumulateBranchAngle = 115.410587, accumulateBranchAngleRad = 2.014295
[coordinateSystemRotates] [138]: dX = 8.609263
[coordinateSystemRotates] [139]: dY = 0.325564
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.429102
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.903256
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -3.694252
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 0.294068
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 7.776369
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.139700
[coordinateSystemRotates] [149]: coordinate system rotated X = -3.988320
[coordinateSystemRotates] [150]: coordinate system rotated Y = 7.636669
[calcChildSegmentCoordinate] [346]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -69.321100, childNode->MapData.accumulateXY.distanceY = 152.774312
[calcDestination] [78]: destinationCoord latitude = 40.343075  destinationCoord longitude = 116.820611
[calcChildSegmentCoordinate] [348]: childSegment's endCoordinate latitude = 40.343075  longitude = 116.820611
[calcChildSegmentCoordinate] [351]: childNode->MapData.accumulateBranchAngle = 119.741870
[calcChildSegmentCoordinate] [353]: fixed accumulateBranchAngleHv2End = 119.741870
[displayNodeCoordinate] [75]: 53's startCoordinate: latitude = 40.343126, longitude = 116.820206
[displayNodeCoordinate] [78]: 53's SampleCoord: latitude = 40.342764, longitude = 116.819973
[displayNodeCoordinate] [78]: 53's SampleCoord: latitude = 40.343111, longitude = 116.820521
[displayNodeCoordinate] [80]: 53's endCoordinate: latitude = 40.343075, longitude = 116.820611
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = 2.468966, accumulateBranchAngleRad = 0.043092
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.999072
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.043078
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 25.083021
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.251239
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 1.081537
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -5.826750
[coordinateSystemRotates] [149]: coordinate system rotated X = 25.334260
[coordinateSystemRotates] [150]: coordinate system rotated Y = -4.745213
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -10.405890, accumulateXY.distanceY = 115.623106
[calcDestination] [78]: destinationCoord latitude = 40.343605  destinationCoord longitude = 116.820173
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343605  longitude = 116.820173
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -23.686600
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -23.686600
[displayNodeCoordinate] [75]: 5's startCoordinate: latitude = 40.343377, longitude = 116.820229
[displayNodeCoordinate] [80]: 5's endCoordinate: latitude = 40.343605, longitude = 116.820173
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = -23.686600, accumulateBranchAngleRad = -0.413409
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.915757
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.401734
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 22.991284
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 2.342976
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -10.086055
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -5.340842
[coordinateSystemRotates] [149]: coordinate system rotated X = 20.648307
[coordinateSystemRotates] [150]: coordinate system rotated Y = -15.426898
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = 10.242418, accumulateXY.distanceY = 100.196209
[calcDestination] [78]: destinationCoord latitude = 40.343790  destinationCoord longitude = 116.819991
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343790  longitude = 116.819991
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -49.842166
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -49.842166
[displayNodeCoordinate] [75]: 9's startCoordinate: latitude = 40.343605, longitude = 116.820173
[displayNodeCoordinate] [80]: 9's endCoordinate: latitude = 40.343790, longitude = 116.819991
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [200]: dX = 32.016281
[calcCurveXYOffset] [201]: dY = -9.850544
[coordinateSystemRotates] [137]: accumulateBranchAngle = -54.094135, accumulateBranchAngleRad = -0.944121
[coordinateSystemRotates] [138]: dX = 32.016281
[coordinateSystemRotates] [139]: dY = -9.850544
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.586455
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.809982
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 18.776117
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 7.978759
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -25.932599
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -5.776903
[coordinateSystemRotates] [149]: coordinate system rotated X = 10.797357
[coordinateSystemRotates] [150]: coordinate system rotated Y = -31.709502
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = 21.039775, accumulateXY.distanceY = 68.486706
[calcDestination] [78]: destinationCoord latitude = 40.343887  destinationCoord longitude = 116.819617
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343887  longitude = 116.819617
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -88.297568
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -88.297568
[displayNodeCoordinate] [75]: 11's startCoordinate: latitude = 40.343790, longitude = 116.819991
[displayNodeCoordinate] [80]: 11's endCoordinate: latitude = 40.343887, longitude = 116.819617
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [200]: dX = 26.885681
[calcCurveXYOffset] [201]: dY = -6.745119
[coordinateSystemRotates] [137]: accumulateBranchAngle = -88.297568, accumulateBranchAngleRad = -1.541083
[coordinateSystemRotates] [138]: dX = 26.885681
[coordinateSystemRotates] [139]: dY = -6.745119
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = 0.029709
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.999559
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = 0.798738
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 6.742141
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -26.873814
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = -0.200389
[coordinateSystemRotates] [149]: coordinate system rotated X = -5.943403
[coordinateSystemRotates] [150]: coordinate system rotated Y = -27.074202
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = 15.096371, accumulateXY.distanceY = 41.412504
[calcDestination] [78]: destinationCoord latitude = 40.343834  destinationCoord longitude = 116.819298
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343834  longitude = 116.819298
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -116.465100
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -116.465100
[displayNodeCoordinate] [75]: 13's startCoordinate: latitude = 40.343887, longitude = 116.819617
[displayNodeCoordinate] [80]: 13's endCoordinate: latitude = 40.343834, longitude = 116.819298
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [200]: dX = 30.342789
[calcCurveXYOffset] [201]: dY = -8.755548
[coordinateSystemRotates] [137]: accumulateBranchAngle = -116.465100, accumulateBranchAngleRad = -2.032699
[coordinateSystemRotates] [138]: dX = 30.342789
[coordinateSystemRotates] [139]: dY = -8.755548
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.445653
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.895206
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -13.522343
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 7.838019
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -27.163047
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 3.901933
[coordinateSystemRotates] [149]: coordinate system rotated X = -21.360363
[coordinateSystemRotates] [150]: coordinate system rotated Y = -23.261114
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -6.263991, accumulateXY.distanceY = 18.151390
[calcDestination] [78]: destinationCoord latitude = 40.343642  destinationCoord longitude = 116.819024
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343642  longitude = 116.819024
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -148.656566
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -148.656566
[displayNodeCoordinate] [75]: 15's startCoordinate: latitude = 40.343834, longitude = 116.819298
[displayNodeCoordinate] [80]: 15's endCoordinate: latitude = 40.343642, longitude = 116.819024
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [200]: dX = 30.342789
[calcCurveXYOffset] [201]: dY = -8.755548
[coordinateSystemRotates] [137]: accumulateBranchAngle = -148.656566, accumulateBranchAngleRad = -2.594547
[coordinateSystemRotates] [138]: dX = 30.342789
[coordinateSystemRotates] [139]: dY = -8.755548
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.854065
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = -0.520167
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -25.914707
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = 4.554345
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = -15.783308
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 7.477805
[coordinateSystemRotates] [149]: coordinate system rotated X = -30.469052
[coordinateSystemRotates] [150]: coordinate system rotated Y = -8.305503
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -36.733043, accumulateXY.distanceY = 9.845887
[calcDestination] [78]: destinationCoord latitude = 40.343368  destinationCoord longitude = 116.818926
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343368  longitude = 116.818926
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -180.848032
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -180.848032
[displayNodeCoordinate] [75]: 17's startCoordinate: latitude = 40.343642, longitude = 116.819024
[displayNodeCoordinate] [80]: 17's endCoordinate: latitude = 40.343368, longitude = 116.818926
[calcChildSegmentCoordinate] [208]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [265]: R = 56.955000
[calcChildSegmentCoordinate] [293]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [297]: KL == Kstart
[calcCurveXYOffset] [194]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [198]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [199]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [200]: dX = 25.106327
[calcCurveXYOffset] [201]: dY = -5.832164
[coordinateSystemRotates] [137]: accumulateBranchAngle = -180.848032, accumulateBranchAngleRad = -3.156394
[coordinateSystemRotates] [138]: dX = 25.106327
[coordinateSystemRotates] [139]: dY = -5.832164
[coordinateSystemRotates] [140]: cos(accumulateBranchAngleRad) = -0.999890
[coordinateSystemRotates] [141]: sin(accumulateBranchAngleRad) = 0.014800
[coordinateSystemRotates] [142]: distanceX * cos(accumulateBranchAngleRad) = -25.103577
[coordinateSystemRotates] [143]: distanceY * sin(accumulateBranchAngleRad) = -0.086318
[coordinateSystemRotates] [144]: distanceX * sin(accumulateBranchAngleRad) = 0.371584
[coordinateSystemRotates] [145]: distanceY * cos(accumulateBranchAngleRad) = 5.831525
[coordinateSystemRotates] [149]: coordinate system rotated X = -25.017258
[coordinateSystemRotates] [150]: coordinate system rotated Y = 6.203109
[calcChildSegmentCoordinate] [303]: accumulateXY.distanceX = -61.750301, accumulateXY.distanceY = 16.048996
[calcDestination] [78]: destinationCoord latitude = 40.343143  destinationCoord longitude = 116.818999
[calcChildSegmentCoordinate] [305]: childSegment's endCoordinate latitude = 40.343143  longitude = 116.818999
[calcChildSegmentCoordinate] [309]: childNode->MapData.accumulateBranchAngle = -207.003598
[calcChildSegmentCoordinate] [311]: fixed childNode->MapData.accumulateBranchAngle = -207.003598
[displayNodeCoordinate] [75]: 21's startCoordinate: latitude = 40.343368, longitude = 116.818926
[displayNodeCoordinate] [80]: 21's endCoordinate: latitude = 40.343143, longitude = 116.818999
[       OK ] PsdMapTest.useRealRecordPsdWithCurve (1 ms)
[----------] 1 test from PsdMapTest (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (1 ms total)
[  PASSED  ] 1 test.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename PsdModule.info --test-name PsdModule --rc lcov_branch_coverage=1 --branch-coverage'
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_datfxsR
Scanning . for .gcda files ...
Found 6 data files in .
using: chunkSize: 1, nchunks:6, intervalLength:0
Finished processing 6 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 23
  lines.......: 45.8% (802 of 1752 lines)
  functions...: 70.6% (269 of 381 functions)
  branches....: 25.0% (150 of 600 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile PsdModule.info.
Found 23 entries.
Found common filename prefix "/usr/include/c++"
Generating output.
Processing file 7/bits/stl_iterator.h
  lines=41 hit=35 functions=56 hit=41
Processing file 7/bits/move.h
  lines=13 hit=13 functions=11 hit=11
Processing file 7/bits/stl_algobase.h
  lines=37 hit=34 functions=33 hit=26 branches=14 hit=9
Processing file /home/zhao/Documents/Psd/src/Location.cpp
  lines=11 hit=1 functions=5 hit=2 branches=4 hit=2
Processing file 7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file 7/new
  lines=2 hit=2 functions=1 hit=1
Processing file 7/bits/allocator.h
  lines=6 hit=4 functions=7 hit=5
Processing file 7/bits/ptr_traits.h
  lines=2 hit=2 functions=1 hit=1
Processing file /home/zhao/Documents/Psd/src/PsdMessageDecoder.cpp
  lines=110 hit=18 functions=21 hit=8 branches=42 hit=7
Processing file /home/zhao/Documents/Psd/inc/PsdMap.h
  lines=1 hit=1 functions=1 hit=1
Processing file /home/zhao/Documents/Psd/src/GeometricCalc.cpp
  lines=29 hit=0 functions=1 hit=0
Processing file 7/bits/vector.tcc
  lines=86 hit=64 functions=9 hit=7 branches=22 hit=10
Processing file 7/bits/stl_vector.h
  lines=121 hit=105 functions=79 hit=62 branches=38 hit=15
Processing file 7/bits/alloc_traits.h
  lines=22 hit=17 functions=21 hit=17
Processing file /home/zhao/Documents/Psd/src/PsdMap.cpp
  lines=877 hit=447 functions=39 hit=23 branches=240 hit=98
Processing file /home/zhao/Documents/Psd/inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file 7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=15
Processing file 7/ext/new_allocator.h
  lines=15 hit=14 functions=22 hit=19 branches=14 hit=5
Processing file 7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file 7/iostream
  lines=1 hit=1
Processing file /home/zhao/Documents/Psd/src/PsdLocation.cpp
  lines=317 hit=1 functions=22 hit=2 branches=222 hit=2
Processing file /home/zhao/Documents/Psd/src/Haversine.cpp
  lines=35 hit=19 functions=8 hit=5 branches=4 hit=2
Processing file 7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=4
Overall coverage rate:
  source files: 23
  lines.......: 45.8% (802 of 1752 lines)
  functions...: 70.6% (269 of 381 functions)
  branches....: 25.0% (150 of 600 branches)
Message summary:
  no messages were reported
