build clean is ok
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd_not_use_signalAPI/build
[ 12%] Building CXX object CMakeFiles/psd.dir/src/GeometricCalc.cpp.o
[ 25%] Building CXX object CMakeFiles/psd.dir/src/Haversine.cpp.o
[ 37%] Building CXX object CMakeFiles/psd.dir/src/PsdLocation.cpp.o
[ 50%] Building CXX object CMakeFiles/psd.dir/src/PsdMap.cpp.o
[ 62%] Building CXX object CMakeFiles/psd.dir/src/PsdMessageDecoder.cpp.o
[ 75%] Building CXX object CMakeFiles/psd.dir/gtest/src/PsdTest.cpp.o
[ 87%] Building CXX object CMakeFiles/psd.dir/external/include/signalAPI/PSDParser/eso_adapter/signal_data_access_pdu.cpp.o
[100%] Linking CXX executable /home/zhao/Documents/Psd_not_use_signalAPI/gtest/output/bin/psd
[100%] Built target psd
[==========] Running 24 tests from 3 test suites.
[----------] Global test environment set-up.
[----------] 10 tests from PsdMapTest
[ RUN      ] PsdMapTest.mapCreateAndcalcCoordinateWithoutHeading
[TestBody] [152]: MapData_X.preSegmentId = 3
[TestBody] [152]: MapData_X.preSegmentId = 4
[TestBody] [152]: MapData_X.preSegmentId = 5
[TestBody] [152]: MapData_X.preSegmentId = 6
[TestBody] [152]: MapData_X.preSegmentId = 7
[TestBody] [152]: MapData_X.preSegmentId = 8
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 121.303785, latitude = 31.260682, hvHeading = 0.000000
[createNode] [1178]: newNode = 0x5555f8d9a9e0
[insertNodeInTree] [1330]: curNode = 0x5555f8d9a9e0
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9a9e0, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 100.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 100.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 0.000000, accumulateBranchAngleRad = 0.000000
[coordinateSystemRotates] [207]: dX = 100.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 100.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 100.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 100.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.000000
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = 100.000000, disHv2EndAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 31.261580  destinationCoord longitude = 121.303785
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 31.261580  longitude = 121.303785
[calcStraightXYOffset] [229]: Length = 100.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -100.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 0.000000, accumulateBranchAngleRad = 0.000000
[coordinateSystemRotates] [207]: dX = -100.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -100.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -100.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = -100.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.000000
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = -100.000000, disHv2StartAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 31.259784  destinationCoord longitude = 121.303785
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 31.259784  longitude = 121.303785
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 180.000000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 31.259784, longitude = 121.303785
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 31.261580, longitude = 121.303785
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 0
[insertNode] [1290]: tempNode is = 0x5555f8d9a9e0, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9aad0
[insertChildNode] [1186]: childNode = 0x5555f8d9aad0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 200.000000, BranchAngle = -90.000000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.570796
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -200.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 0.000000, accumulateBranchAngleRad = 0.000000
[coordinateSystemRotates] [207]: dX = 0.000000
[coordinateSystemRotates] [208]: dY = -200.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -200.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -200.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = -200.000000
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = 100.000000, accumulateXY.distanceY = -200.000000
[calcDestination] [78]: destinationCoord latitude = 31.261580  destinationCoord longitude = 121.301683
[insertNode] [1312]: childNode's preSegmentId = 4
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 31.261580, longitude = 121.303785
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 31.261580, longitude = 121.301683
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[insertNode] [1290]: tempNode is = 0x5555f8d9a9e0, preSegmentId = 5, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9abc0
[insertChildNode] [1186]: childNode = 0x5555f8d9abc0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 200.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 200.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 0.000000, accumulateBranchAngleRad = 0.000000
[coordinateSystemRotates] [207]: dX = 200.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 200.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 200.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 200.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.000000
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = 300.000000, accumulateXY.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 31.263377  destinationCoord longitude = 121.303785
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 31.261580, longitude = 121.303785
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 31.263377, longitude = 121.303785
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[insertNode] [1290]: tempNode is = 0x5555f8d9a9e0, preSegmentId = 6, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9acb0
[insertChildNode] [1186]: childNode = 0x5555f8d9acb0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 200.000000, BranchAngle = 90.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.570796
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 200.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 0.000000, accumulateBranchAngleRad = 0.000000
[coordinateSystemRotates] [207]: dX = 0.000000
[coordinateSystemRotates] [208]: dY = 200.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 200.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 200.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 200.000000
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = 100.000000, accumulateXY.distanceY = 200.000000
[calcDestination] [78]: destinationCoord latitude = 31.261580  destinationCoord longitude = 121.305887
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 31.261580, longitude = 121.303785
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 31.261580, longitude = 121.305887
[insertNode] [1242]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9abc0
[insertNode] [1290]: tempNode is = 0x5555f8d9abc0, preSegmentId = 7, prevSegmentId = 5, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9ada0
[insertChildNode] [1186]: childNode = 0x5555f8d9ada0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 71.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 71.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 0.000000, accumulateBranchAngleRad = 0.000000
[coordinateSystemRotates] [207]: dX = 71.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 71.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 71.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 71.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.000000
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = 371.000000, accumulateXY.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 31.264015  destinationCoord longitude = 121.303785
[insertNode] [1312]: childNode's preSegmentId = 7
[displayNodeCoordinate] [139]: 7's startCoordinate: latitude = 31.263377, longitude = 121.303785
[displayNodeCoordinate] [140]: 7's endCoordinate: latitude = 31.264015, longitude = 121.303785
[insertNode] [1242]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9ada0
[findNodeById] [885]: result = 0x5555f8d9ada0
[insertNode] [1290]: tempNode is = 0x5555f8d9ada0, preSegmentId = 8, prevSegmentId = 7, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9ae90
[insertChildNode] [1186]: childNode = 0x5555f8d9ae90
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [326]: R = 7.429300
[calcChildSegmentCoordinate] [354]: finalRemainLength = 16.000000
[calcChildSegmentCoordinate] [377]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [383]: Sa = 14.320324, Se = 1.679676
[calcCurveXYOffset] [245]: arcR = 7.429300, arcRotationAngle = 110.440303, arcRotationAngleRad = 1.927547, signCurvature = 1
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -1.349231
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -10.023844
[calcCurveXYOffset] [256]: dX = 6.961526
[calcCurveXYOffset] [257]: dY = 10.023844
[coordinateSystemRotates] [206]: accumulateBranchAngle = -34.370000, accumulateBranchAngleRad = -0.599870
[coordinateSystemRotates] [207]: dX = 6.961526
[coordinateSystemRotates] [208]: dY = 10.023844
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.825409
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.564535
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 5.746107
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -5.658810
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -3.930024
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 8.273773
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 11.404917
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 4.343749
[coordinateSystemRotates] [220]: coordinate system rotated X = 11.404917
[coordinateSystemRotates] [221]: coordinate system rotated Y = 4.343749
[calcChildSegmentCoordinate] [391]: first half of the curvature curve: accumulateXY.distanceX = 382.404917, accumulateXY.distanceY = 4.343749
[calcDestination] [78]: destinationCoord latitude = 31.264117  destinationCoord longitude = 121.303831
[calcChildSegmentCoordinate] [394]: one SampleCoord before the endCoord  latitude = 31.264117  longitude = 121.303831
[calcChildSegmentCoordinate] [397]: childNode->MapData.accumulateBranchAngle = 76.070303
[calcChildSegmentCoordinate] [399]: fixed childNode->MapData.accumulateBranchAngle = 76.070303
[calcCurveXYOffset] [245]: arcR = 63.339600, arcRotationAngle = 1.519402, arcRotationAngleRad = 0.026519, signCurvature = 232
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.000352
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -0.022270
[calcCurveXYOffset] [256]: dX = 1.679479
[calcCurveXYOffset] [257]: dY = 0.022270
[coordinateSystemRotates] [206]: accumulateBranchAngle = 76.070303, accumulateBranchAngleRad = 1.327677
[coordinateSystemRotates] [207]: dX = 1.679479
[coordinateSystemRotates] [208]: dY = 0.022270
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.240731
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.970592
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.404303
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.021615
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.630088
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.005361
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.382688
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.635450
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.382688
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.635450
[calcChildSegmentCoordinate] [407]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = 382.787605, childNode->MapData.accumulateXY.distanceY = 5.979198
[calcDestination] [78]: destinationCoord latitude = 31.264121  destinationCoord longitude = 121.303848
[calcChildSegmentCoordinate] [409]: childSegment's endCoordinate latitude = 31.264121  longitude = 121.303848
[calcChildSegmentCoordinate] [412]: childNode->MapData.accumulateBranchAngle = 77.589705
[calcChildSegmentCoordinate] [414]: fixed accumulateBranchAngleHv2End = 77.589705
[insertNode] [1312]: childNode's preSegmentId = 8
[displayNodeCoordinate] [144]: 8's startCoordinate: latitude = 31.264015, longitude = 121.303785
[displayNodeCoordinate] [147]: 8's SampleCoord: latitude = 31.264117, longitude = 121.303831
[displayNodeCoordinate] [149]: 8's endCoordinate: latitude = 31.264121, longitude = 121.303848
[TestBody] [163]: startCoordLat_1_absValue = 0.000005
[TestBody] [164]: startCoordLon_1_absValue = 0.000000
[TestBody] [171]: endCoordLat_1_absValue = 0.000001
[TestBody] [172]: endCoordLon_1_absValue = 0.000000
[TestBody] [180]: startCoordLat_2_absValue = 0.000001
[TestBody] [181]: startCoordLon_2_absValue = 0.000000
[TestBody] [188]: endCoordLat_2_absValue = 0.000001
[TestBody] [189]: endCoordLon_2_absValue = 0.000005
[TestBody] [197]: startCoordLat_3_absValue = 0.000001
[TestBody] [198]: startCoordLon_3_absValue = 0.000000
[TestBody] [205]: endCoordLat_3_absValue = 0.000016
[TestBody] [206]: endCoordLon_3_absValue = 0.000000
[TestBody] [214]: startCoordLat_4_absValue = 0.000001
[TestBody] [215]: startCoordLon_4_absValue = 0.000000
[TestBody] [222]: endCoordLat_4_absValue = 0.000001
[TestBody] [223]: endCoordLon_4_absValue = 0.000002
[TestBody] [231]: startCoordLat_5_absValue = 0.000016
[TestBody] [232]: startCoordLon_5_absValue = 0.000000
[TestBody] [239]: endCoordLat_5_absValue = 0.000020
[TestBody] [240]: endCoordLon_5_absValue = 0.000001
[TestBody] [248]: startCoordLat_6_absValue = 0.000020
[TestBody] [249]: startCoordLon_6_absValue = 0.000001
[TestBody] [256]: endCoordLat_6_absValue = 0.000028
[TestBody] [257]: endCoordLon_6_absValue = 0.000206
[       OK ] PsdMapTest.mapCreateAndcalcCoordinateWithoutHeading (0 ms)
[ RUN      ] PsdMapTest.mapCreateAndcalcCoordinateWithHeading
[TestBody] [266]: VPsdMap().empty() = 0
[TestBody] [340]: MapData_X.preSegmentId = 3
[TestBody] [340]: MapData_X.preSegmentId = 4
[TestBody] [340]: MapData_X.preSegmentId = 5
[TestBody] [340]: MapData_X.preSegmentId = 6
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 121.302732, latitude = 31.260679, hvHeading = 45.000000
[createNode] [1178]: newNode = 0x5555f8d9afc0
[insertNodeInTree] [1330]: curNode = 0x5555f8d9afc0
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9afc0, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 141.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 141.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 45.000000, accumulateBranchAngleRad = 0.785398
[coordinateSystemRotates] [207]: dX = 141.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 99.702056
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 99.702056
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 99.702056
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 99.702056
[coordinateSystemRotates] [220]: coordinate system rotated X = 99.702056
[coordinateSystemRotates] [221]: coordinate system rotated Y = 99.702056
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = 99.702056, disHv2EndAfterRotatingCoord.distanceY = 99.702056
[calcDestination] [78]: destinationCoord latitude = 31.261575  destinationCoord longitude = 121.303780
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 31.261575  longitude = 121.303780
[calcStraightXYOffset] [229]: Length = 142.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -142.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 45.000000, accumulateBranchAngleRad = 0.785398
[coordinateSystemRotates] [207]: dX = -142.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -100.409163
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -100.409163
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -100.409163
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -100.409163
[coordinateSystemRotates] [220]: coordinate system rotated X = -100.409163
[coordinateSystemRotates] [221]: coordinate system rotated Y = -100.409163
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = -100.409163, disHv2StartAfterRotatingCoord.distanceY = -100.409163
[calcDestination] [78]: destinationCoord latitude = 31.259777  destinationCoord longitude = 121.301677
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 31.259777  longitude = 121.301677
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 225.000000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 31.259777, longitude = 121.301677
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 31.261575, longitude = 121.303780
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 0
[insertNode] [1290]: tempNode is = 0x5555f8d9afc0, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b0b0
[insertChildNode] [1186]: childNode = 0x5555f8d9b0b0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 285.000000, BranchAngle = -89.530000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.562593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 2.337842
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -284.990411
[coordinateSystemRotates] [206]: accumulateBranchAngle = 45.000000, accumulateBranchAngleRad = 0.785398
[coordinateSystemRotates] [207]: dX = 2.337842
[coordinateSystemRotates] [208]: dY = -284.990411
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 1.653104
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -201.518652
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.653104
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -201.518652
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 203.171757
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -199.865548
[coordinateSystemRotates] [220]: coordinate system rotated X = 203.171757
[coordinateSystemRotates] [221]: coordinate system rotated Y = -199.865548
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = 302.873813, accumulateXY.distanceY = -100.163492
[calcDestination] [78]: destinationCoord latitude = 31.263400  destinationCoord longitude = 121.301679
[insertNode] [1312]: childNode's preSegmentId = 4
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 31.261575, longitude = 121.303780
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 31.263400, longitude = 121.301679
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[insertNode] [1290]: tempNode is = 0x5555f8d9afc0, preSegmentId = 5, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b1a0
[insertChildNode] [1186]: childNode = 0x5555f8d9b1a0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 285.000000, BranchAngle = -0.500000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.008727
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 284.989148
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -2.487063
[coordinateSystemRotates] [206]: accumulateBranchAngle = 45.000000, accumulateBranchAngleRad = 0.785398
[coordinateSystemRotates] [207]: dX = 284.989148
[coordinateSystemRotates] [208]: dY = -2.487063
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 201.517759
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -1.758619
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 201.517759
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -1.758619
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 203.276378
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 199.759140
[coordinateSystemRotates] [220]: coordinate system rotated X = 203.276378
[coordinateSystemRotates] [221]: coordinate system rotated Y = 199.759140
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = 302.978434, accumulateXY.distanceY = 299.461196
[calcDestination] [78]: destinationCoord latitude = 31.263401  destinationCoord longitude = 121.305879
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 31.261575, longitude = 121.303780
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 31.263401, longitude = 121.305879
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[insertNode] [1290]: tempNode is = 0x5555f8d9afc0, preSegmentId = 6, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b2b0
[insertChildNode] [1186]: childNode = 0x5555f8d9b2b0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 283.000000, BranchAngle = 90.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.570796
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 283.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 45.000000, accumulateBranchAngleRad = 0.785398
[coordinateSystemRotates] [207]: dX = 0.000000
[coordinateSystemRotates] [208]: dY = 283.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.707107
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 200.111219
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 200.111219
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -200.111219
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 200.111219
[coordinateSystemRotates] [220]: coordinate system rotated X = -200.111219
[coordinateSystemRotates] [221]: coordinate system rotated Y = 200.111219
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -100.409163, accumulateXY.distanceY = 299.813275
[calcDestination] [78]: destinationCoord latitude = 31.259777  destinationCoord longitude = 121.305883
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 31.261575, longitude = 121.303780
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 31.259777, longitude = 121.305883
[TestBody] [358]: startCoordLat_1_absValue = 0.000002
[TestBody] [359]: startCoordLon_1_absValue = 0.000001
[TestBody] [366]: endCoordLat_1_absValue = 0.000004
[TestBody] [367]: endCoordLon_1_absValue = 0.000005
[TestBody] [375]: startCoordLat_2_absValue = 0.000004
[TestBody] [376]: startCoordLon_2_absValue = 0.000005
[TestBody] [383]: endCoordLat_2_absValue = 0.000014
[TestBody] [384]: endCoordLon_2_absValue = 0.000001
[TestBody] [392]: startCoordLat_3_absValue = 0.000004
[TestBody] [393]: startCoordLon_3_absValue = 0.000005
[TestBody] [400]: endCoordLat_3_absValue = 0.000013
[TestBody] [401]: endCoordLon_3_absValue = 0.000006
[TestBody] [409]: startCoordLat_4_absValue = 0.000004
[TestBody] [410]: startCoordLon_4_absValue = 0.000005
[TestBody] [417]: endCoordLat_4_absValue = 0.000002
[TestBody] [418]: endCoordLon_4_absValue = 0.000002
[       OK ] PsdMapTest.mapCreateAndcalcCoordinateWithHeading (0 ms)
[ RUN      ] PsdMapTest.mapCreateAndcalcCoordinateWithMultiLayer
[TestBody] [427]: VPsdMap().empty() = 0
[TestBody] [557]: MapData_X.preSegmentId = 3
[TestBody] [557]: MapData_X.preSegmentId = 2
[TestBody] [557]: MapData_X.preSegmentId = 10
[TestBody] [557]: MapData_X.preSegmentId = 4
[TestBody] [557]: MapData_X.preSegmentId = 5
[TestBody] [557]: MapData_X.preSegmentId = 6
[TestBody] [557]: MapData_X.preSegmentId = 7
[TestBody] [557]: MapData_X.preSegmentId = 8
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9b3a0
[insertNodeInTree] [1330]: curNode = 0x5555f8d9b3a0
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9b3a0, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b490
[insertParentNode] [1204]: parentNode = 0x5555f8d9b490
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -176.000000, BranchAngle = -0.370000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.006458
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -175.996330
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 1.136551
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.330000, accumulateBranchAngleRad = 6.271492
[coordinateSystemRotates] [207]: dX = -175.996330
[coordinateSystemRotates] [208]: dY = 1.136551
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -175.984297
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.013290
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.058002
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.136473
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -175.971007
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.194475
[coordinateSystemRotates] [220]: coordinate system rotated X = -175.971007
[coordinateSystemRotates] [221]: coordinate system rotated Y = 3.194475
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -106.975725, accumulateXY.distanceY = 2.387628
[calcDestination] [78]: destinationCoord latitude = 40.357189  destinationCoord longitude = 116.815137
[displayNodeCoordinate] [139]: 2's startCoordinate: latitude = 40.357189, longitude = 116.815137
[displayNodeCoordinate] [140]: 2's endCoordinate: latitude = 40.358770, longitude = 116.815099
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 2, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 10's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b580
[insertRootNode] [1223]: rootNode = 0x5555f8d9b580
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -200.000000, BranchAngle = -0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -199.999997
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.034907
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.700000, accumulateBranchAngleRad = 6.277949
[coordinateSystemRotates] [207]: dX = -199.999997
[coordinateSystemRotates] [208]: dY = 0.034907
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999986
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.005236
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -199.997255
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000183
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.047193
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.034906
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -199.997073
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.082099
[coordinateSystemRotates] [220]: coordinate system rotated X = -199.997073
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.082099
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -306.972797, accumulateXY.distanceY = 3.469727
[calcDestination] [78]: destinationCoord latitude = 40.355392  destinationCoord longitude = 116.815150
[displayNodeCoordinate] [139]: 10's startCoordinate: latitude = 40.355392, longitude = 116.815150
[displayNodeCoordinate] [140]: 10's endCoordinate: latitude = 40.357189, longitude = 116.815137
[insertNode] [1290]: tempNode is = 0x5555f8d9b580, preSegmentId = 10, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1317]: some nodes are already in tree
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9b3a0
[findNodeById] [885]: result = 0x5555f8d9b3a0
[insertNode] [1290]: tempNode is = 0x5555f8d9b3a0, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b670
[insertChildNode] [1186]: childNode = 0x5555f8d9b670
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 78.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 77.999999
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.013614
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 77.999999
[coordinateSystemRotates] [208]: dY = 0.013614
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -77.994666
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000159
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.912088
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.013613
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [220]: coordinate system rotated X = -77.994825
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.898476
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -262.982177, accumulateXY.distanceY = 3.061762
[calcDestination] [78]: destinationCoord latitude = 40.355788  destinationCoord longitude = 116.815145
[insertNode] [1312]: childNode's preSegmentId = 4
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.356488, longitude = 116.815135
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355788, longitude = 116.815145
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9b670
[findNodeById] [885]: result = 0x5555f8d9b670
[findNodeById] [885]: result = 0x5555f8d9b670
[insertNode] [1290]: tempNode is = 0x5555f8d9b670, preSegmentId = 5, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b780
[insertChildNode] [1186]: childNode = 0x5555f8d9b780
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 90.060000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.571844
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.265988
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 253.999861
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.265988
[coordinateSystemRotates] [208]: dY = 253.999861
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.265970
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.003064
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -253.983009
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [220]: coordinate system rotated X = -2.659833
[coordinateSystemRotates] [221]: coordinate system rotated Y = -253.986073
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -265.642010, accumulateXY.distanceY = -250.924311
[calcDestination] [78]: destinationCoord latitude = 40.355764  destinationCoord longitude = 116.812151
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 40.355764, longitude = 116.812151
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9b670
[findNodeById] [885]: result = 0x5555f8d9b670
[findNodeById] [885]: result = 0x5555f8d9b670
[insertNode] [1290]: tempNode is = 0x5555f8d9b670, preSegmentId = 6, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b890
[insertChildNode] [1186]: childNode = 0x5555f8d9b890
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.020000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000349
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 253.999985
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.088663
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 253.999985
[coordinateSystemRotates] [208]: dY = 0.088663
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983133
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.001021
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.088657
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.984154
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.837148
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -516.966331, accumulateXY.distanceY = 5.898910
[calcDestination] [78]: destinationCoord latitude = 40.353506  destinationCoord longitude = 116.815179
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 40.353506, longitude = 116.815179
[insertNode] [1242]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9b670
[findNodeById] [885]: result = 0x5555f8d9b670
[findNodeById] [885]: result = 0x5555f8d9b670
[insertNode] [1290]: tempNode is = 0x5555f8d9b670, preSegmentId = 7, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9b9a0
[insertChildNode] [1186]: childNode = 0x5555f8d9b9a0
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = -90.050000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.571669
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.221657
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -253.999903
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.221657
[coordinateSystemRotates] [208]: dY = -253.999903
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.221642
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.002553
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 253.983052
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.147446
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 253.980498
[coordinateSystemRotates] [220]: coordinate system rotated X = 3.147446
[coordinateSystemRotates] [221]: coordinate system rotated Y = 253.980498
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -259.834730, accumulateXY.distanceY = 257.042260
[calcDestination] [78]: destinationCoord latitude = 40.355816  destinationCoord longitude = 116.818139
[insertNode] [1312]: childNode's preSegmentId = 7
[displayNodeCoordinate] [139]: 7's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 7's endCoordinate: latitude = 40.355816, longitude = 116.818139
[insertNode] [1242]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9b890
[findNodeById] [885]: result = 0x5555f8d9b890
[findNodeById] [885]: result = 0x5555f8d9b890
[findNodeById] [885]: result = 0x5555f8d9b890
[insertNode] [1290]: tempNode is = 0x5555f8d9b890, preSegmentId = 8, prevSegmentId = 6, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9ba90
[insertChildNode] [1186]: childNode = 0x5555f8d9ba90
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 103.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 102.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.017977
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 102.999998
[coordinateSystemRotates] [208]: dY = 0.017977
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -102.993573
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000201
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.150497
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.017976
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -102.993774
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.132521
[coordinateSystemRotates] [220]: coordinate system rotated X = -102.993774
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.132521
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -619.960104, accumulateXY.distanceY = 7.031431
[calcDestination] [78]: destinationCoord latitude = 40.352581  destinationCoord longitude = 116.815192
[insertNode] [1312]: childNode's preSegmentId = 8
[displayNodeCoordinate] [139]: 8's startCoordinate: latitude = 40.353506, longitude = 116.815179
[displayNodeCoordinate] [140]: 8's endCoordinate: latitude = 40.352581, longitude = 116.815192
[TestBody] [568]: startCoordLat_1_absValue = 0.000002
[TestBody] [569]: startCoordLon_1_absValue = 0.000001
[TestBody] [576]: endCoordLat_1_absValue = 0.000008
[TestBody] [577]: endCoordLon_1_absValue = 0.000001
[TestBody] [585]: startCoordLat_2_absValue = 0.003162
[TestBody] [586]: startCoordLon_2_absValue = 0.000047
[TestBody] [593]: endCoordLat_2_absValue = 0.000002
[TestBody] [594]: endCoordLon_2_absValue = 0.000001
[TestBody] [602]: startCoordLat_3_absValue = 0.006760
[TestBody] [603]: startCoordLon_3_absValue = 0.000072
[TestBody] [610]: endCoordLat_3_absValue = 0.003162
[TestBody] [611]: endCoordLon_3_absValue = 0.000047
[TestBody] [619]: startCoordLat_4_absValue = 0.000008
[TestBody] [620]: startCoordLon_4_absValue = 0.000001
[TestBody] [627]: endCoordLat_4_absValue = 0.000011
[TestBody] [628]: endCoordLon_4_absValue = 0.000001
[TestBody] [636]: startCoordLat_5_absValue = 0.000011
[TestBody] [637]: startCoordLon_5_absValue = 0.000001
[TestBody] [644]: endCoordLat_5_absValue = 0.000008
[TestBody] [645]: endCoordLon_5_absValue = 0.000002
[TestBody] [653]: startCoordLat_6_absValue = 0.000011
[TestBody] [654]: startCoordLon_6_absValue = 0.000001
[TestBody] [661]: endCoordLat_6_absValue = 0.000017
[TestBody] [662]: endCoordLon_6_absValue = 0.000000
[TestBody] [670]: startCoordLat_7_absValue = 0.000011
[TestBody] [671]: startCoordLon_7_absValue = 0.000001
[TestBody] [678]: endCoordLat_7_absValue = 0.000007
[TestBody] [679]: endCoordLon_7_absValue = 0.000004
[TestBody] [687]: startCoordLat_8_absValue = 0.000017
[TestBody] [688]: startCoordLon_8_absValue = 0.000000
[TestBody] [695]: endCoordLat_8_absValue = 0.000020
[TestBody] [696]: endCoordLon_8_absValue = 0.000002
[       OK ] PsdMapTest.mapCreateAndcalcCoordinateWithMultiLayer (0 ms)
[ RUN      ] PsdMapTest.mapCreateAndcalcCoordinateWithCurve
[TestBody] [705]: VPsdMap().empty() = 0
[TestBody] [737]MapData_1.preSegmentId = 3
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.812289, latitude = 40.346799, hvHeading = 66.850000
[createNode] [1178]: newNode = 0x5555f8d9bb80
[insertNodeInTree] [1330]: curNode = 0x5555f8d9bb80
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9bb80, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [621]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [646]: R = 46.991215
[calcCurSegmentCoordinate] [652]: Ssum = 51.957366
[calcCurSegmentCoordinate] [656]: sampleRotationAngle = 31.675472
[calcCurveXYOffset] [245]: arcR = 46.991215, arcRotationAngle = 31.675472, arcRotationAngleRad = 0.552841, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.148964
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = 24.675433
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 66.850000, accumulateBranchAngleRad = 1.166753
[coordinateSystemRotates] [207]: dX = 24.675433
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.393140
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.919479
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 9.700892
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -6.436351
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 22.688537
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -2.751978
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 16.137243
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 19.936559
[coordinateSystemRotates] [220]: coordinate system rotated X = 16.137243
[coordinateSystemRotates] [221]: coordinate system rotated Y = 19.936559
[calcCurSegmentCoordinate] [664]: disHv2EndAfterRotatingCoord.distanceX = 16.137243, disHv2EndAfterRotatingCoord.distanceY = 19.936559
[calcDestination] [78]: destinationCoord latitude = 40.346944  destinationCoord longitude = 116.812524
[calcCurSegmentCoordinate] [670]: accumulateBranchAngleHv2End = 35.174528
[calcCurSegmentCoordinate] [673]: fixed accumulateBranchAngleHv2End = 35.174528
[calcCurSegmentCoordinate] [646]: R = 46.817912
[calcCurSegmentCoordinate] [679]: finalRemainLength = 48.042634
[calcCurSegmentCoordinate] [706]: Sa = 23.980429, Se = 24.062205
[calcCurveXYOffset] [245]: arcR = 46.817912, arcRotationAngle = 29.347259, arcRotationAngleRad = 0.512206, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.128335
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -6.008362
[calcCurveXYOffset] [256]: dX = 22.945533
[calcCurveXYOffset] [257]: dY = -6.008362
[coordinateSystemRotates] [206]: accumulateBranchAngle = 35.174528, accumulateBranchAngleRad = 0.613911
[coordinateSystemRotates] [207]: dX = 22.945533
[coordinateSystemRotates] [208]: dY = -6.008362
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.817401
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.576069
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 18.755703
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -3.461231
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 13.218210
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -4.911241
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 22.216934
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 8.306969
[coordinateSystemRotates] [220]: coordinate system rotated X = 22.216934
[coordinateSystemRotates] [221]: coordinate system rotated Y = 8.306969
[calcCurSegmentCoordinate] [714]: first half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = 38.354177, disHv2EndAfterRotatingCoord.distanceY = 28.243528
[calcDestination] [78]: destinationCoord latitude = 40.347144  destinationCoord longitude = 116.812622
[calcCurSegmentCoordinate] [717]: HV's one SampleCoord before the endCoord  latitude = 40.347144  longitude = 116.812622
[calcCurSegmentCoordinate] [720]: accumulateBranchAngleHv2End = 5.827270
[calcCurSegmentCoordinate] [722]: fixed accumulateBranchAngleHv2End = 5.827270
[calcCurveXYOffset] [245]: arcR = 46.658800, arcRotationAngle = 29.547755, arcRotationAngleRad = 0.515706, signCurvature = 232
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.130055
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -6.068212
[calcCurveXYOffset] [256]: dX = 23.009732
[calcCurveXYOffset] [257]: dY = 6.068212
[coordinateSystemRotates] [206]: accumulateBranchAngle = 5.827270, accumulateBranchAngleRad = 0.101705
[coordinateSystemRotates] [207]: dX = 23.009732
[coordinateSystemRotates] [208]: dY = 6.068212
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.994832
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.101530
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 22.890829
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.616104
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.336173
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 6.036854
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 22.274725
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 8.373028
[coordinateSystemRotates] [220]: coordinate system rotated X = 22.274725
[coordinateSystemRotates] [221]: coordinate system rotated Y = 8.373028
[calcCurSegmentCoordinate] [730]: second half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = 60.628902, disHv2EndAfterRotatingCoord.distanceY = 36.616555
[calcDestination] [78]: destinationCoord latitude = 40.347344  destinationCoord longitude = 116.812721
[calcCurSegmentCoordinate] [732]: HV's endCoordinate latitude = 40.347344  longitude = 116.812721
[calcCurSegmentCoordinate] [735]: accumulateBranchAngleHv2End = 35.375025
[calcCurSegmentCoordinate] [737]: fixed accumulateBranchAngleHv2End = 35.375025
[calcCurSegmentCoordinate] [741]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [744]: accumulateBranchAngleHv2Start = 246.850000
[calcCurSegmentCoordinate] [746]: fixed accumulateBranchAngleHv2Start = 246.850000
[calcCurSegmentCoordinate] [756]: R = 46.991215
[calcCurSegmentCoordinate] [762]: Ssum = 51.957366
[calcCurSegmentCoordinate] [765]: sampleRotationAngle = 31.675472
[calcCurveXYOffset] [245]: arcR = -46.991215, arcRotationAngle = 31.675472, arcRotationAngleRad = 0.552841, signCurvature = 0
[calcCurveXYOffset] [251]: fixed arcR = 46.991215
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.148964
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = -24.675433
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 246.850000, accumulateBranchAngleRad = 4.308345
[coordinateSystemRotates] [207]: dX = -24.675433
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.393140
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.919479
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 9.700892
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 6.436351
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 22.688537
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 2.751978
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.264540
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 25.440515
[coordinateSystemRotates] [220]: coordinate system rotated X = 3.264540
[coordinateSystemRotates] [221]: coordinate system rotated Y = 25.440515
[calcCurSegmentCoordinate] [770]: disHv2StartAfterRotatingCoord.distanceX = 3.264540, disHv2StartAfterRotatingCoord.distanceY = 25.440515
[calcDestination] [78]: destinationCoord latitude = 40.346828  destinationCoord longitude = 116.812589
[calcCurSegmentCoordinate] [776]: accumulateBranchAngleHv2Start = 246.850000
[calcCurSegmentCoordinate] [778]: fixed accumulateBranchAngleHv2Start = 246.850000
[calcCurSegmentCoordinate] [756]: R = 47.165805
[calcCurSegmentCoordinate] [784]: finalRemainLength = 48.042634
[calcCurSegmentCoordinate] [808]: Sa = 24.062650, Se = 23.979984
[calcCurveXYOffset] [245]: arcR = 47.165805, arcRotationAngle = 29.230674, arcRotationAngleRad = 0.510172, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.127339
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -6.006057
[calcCurveXYOffset] [256]: dX = 23.032333
[calcCurveXYOffset] [257]: dY = -6.006057
[coordinateSystemRotates] [206]: accumulateBranchAngle = 246.850000, accumulateBranchAngleRad = 4.308345
[coordinateSystemRotates] [207]: dX = 23.032333
[coordinateSystemRotates] [208]: dY = -6.006057
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.393140
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.919479
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -9.054923
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 5.522442
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -21.177741
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 2.361219
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -14.577366
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -18.816521
[coordinateSystemRotates] [220]: coordinate system rotated X = -14.577366
[coordinateSystemRotates] [221]: coordinate system rotated Y = -18.816521
[calcCurSegmentCoordinate] [816]: first half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = -11.312826, disHv2StartAfterRotatingCoord.distanceY = 6.623993
[calcDestination] [78]: destinationCoord latitude = 40.346697  destinationCoord longitude = 116.812367
[calcCurSegmentCoordinate] [819]: HV's one SampleCoord before the startCoord latitude = 40.346697  longitude = 116.812367
[calcCurSegmentCoordinate] [822]: accumulateBranchAngleHv2Start = 276.080674
[calcCurSegmentCoordinate] [824]: fixed accumulateBranchAngleHv2Start = 276.080674
[calcCurveXYOffset] [245]: arcR = 47.328400, arcRotationAngle = 29.030178, arcRotationAngleRad = 0.506672, signCurvature = 249
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.125636
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -5.946140
[calcCurveXYOffset] [256]: dX = 22.967063
[calcCurveXYOffset] [257]: dY = 5.946140
[coordinateSystemRotates] [206]: accumulateBranchAngle = 276.080674, accumulateBranchAngleRad = 4.818517
[coordinateSystemRotates] [207]: dX = 22.967063
[coordinateSystemRotates] [208]: dY = 5.946140
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.105929
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.994374
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 2.432871
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -5.912685
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -22.837844
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.629867
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 8.345556
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -22.207977
[coordinateSystemRotates] [220]: coordinate system rotated X = 8.345556
[coordinateSystemRotates] [221]: coordinate system rotated Y = -22.207977
[calcCurSegmentCoordinate] [831]: second half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = -2.967270, disHv2StartAfterRotatingCoord.distanceY = -15.583984
[calcDestination] [78]: destinationCoord latitude = 40.346772  destinationCoord longitude = 116.812105
[calcCurSegmentCoordinate] [833]: HV's startCoordinate latitude = 40.346772  longitude = 116.812105
[calcCurSegmentCoordinate] [836]: accumulateBranchAngleHv2Start = 247.050496
[calcCurSegmentCoordinate] [838]: fixed accumulateBranchAngleHv2Start = 247.050496
[displayNodeCoordinate] [144]: 3's startCoordinate: latitude = 40.346772, longitude = 116.812105
[displayNodeCoordinate] [147]: 3's SampleCoord: latitude = 40.346697, longitude = 116.812367
[displayNodeCoordinate] [147]: 3's SampleCoord: latitude = 40.346828, longitude = 116.812589
[displayNodeCoordinate] [147]: 3's SampleCoord: latitude = 40.346944, longitude = 116.812524
[displayNodeCoordinate] [147]: 3's SampleCoord: latitude = 40.347144, longitude = 116.812622
[displayNodeCoordinate] [149]: 3's endCoordinate: latitude = 40.347344, longitude = 116.812721
[TestBody] [748]: startCoordLat_1_absValue = 0.000479
[TestBody] [749]: startCoordLon_1_absValue = 0.000788
[TestBody] [756]: endCoordLat_1_absValue = 0.000305
[TestBody] [757]: endCoordLon_1_absValue = 0.000697
[       OK ] PsdMapTest.mapCreateAndcalcCoordinateWithCurve (0 ms)
[ RUN      ] PsdMapTest.rootWithCurve
[TestBody] [766]: VPsdMap().empty() = 0
[TestBody] [826]: MapData_X.preSegmentId = 4
[TestBody] [826]: MapData_X.preSegmentId = 3
[TestBody] [826]: MapData_X.preSegmentId = 2
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.808842, latitude = 40.344795, hvHeading = 231.490000
[createNode] [1178]: newNode = 0x5555f8d9bca0
[insertNodeInTree] [1330]: curNode = 0x5555f8d9bca0
[IsCurIdInList] [1537]: curSegmentId is in list = 4
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9bca0, current tree Id is = 4, curSegmentId is = 4
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 0.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 231.490000, accumulateBranchAngleRad = 4.040263
[coordinateSystemRotates] [207]: dX = 0.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.622651
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.782499
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.000000
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = 0.000000, disHv2EndAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.344795  destinationCoord longitude = 116.808842
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.344795  longitude = 116.808842
[calcStraightXYOffset] [229]: Length = 115.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -115.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 231.490000, accumulateBranchAngleRad = 4.040263
[coordinateSystemRotates] [207]: dX = -115.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.622651
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.782499
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 71.604890
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 89.987442
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 71.604890
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 89.987442
[coordinateSystemRotates] [220]: coordinate system rotated X = 71.604890
[coordinateSystemRotates] [221]: coordinate system rotated Y = 89.987442
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 71.604890, disHv2StartAfterRotatingCoord.distanceY = 89.987442
[calcDestination] [78]: destinationCoord latitude = 40.345438  destinationCoord longitude = 116.809903
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.345438  longitude = 116.809903
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 51.490000
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.345438, longitude = 116.809903
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.344795, longitude = 116.808842
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 4, prevSegmentId = 3, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9bd90
[insertParentNode] [1204]: parentNode = 0x5555f8d9bd90
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -153.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -152.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -0.026704
[coordinateSystemRotates] [206]: accumulateBranchAngle = 51.490000, accumulateBranchAngleRad = 0.898670
[coordinateSystemRotates] [207]: dX = -152.999998
[coordinateSystemRotates] [208]: dY = -0.026704
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.622651
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.782499
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -95.265635
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.020896
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -119.722421
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.016627
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -95.244739
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -119.739048
[coordinateSystemRotates] [220]: coordinate system rotated X = -95.244739
[coordinateSystemRotates] [221]: coordinate system rotated Y = -119.739048
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -23.639849, accumulateXY.distanceY = -29.751606
[calcDestination] [78]: destinationCoord latitude = 40.344583  destinationCoord longitude = 116.808491
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.344583, longitude = 116.808491
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.345438, longitude = 116.809903
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9be80
[insertRootNode] [1223]: rootNode = 0x5555f8d9be80
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcRootOrParentSegmentCoordinate] [492]: R = 202.123000
[calcRootOrParentSegmentCoordinate] [520]: finalRemainLength = 100.000000
[calcRootOrParentSegmentCoordinate] [544]: Sa = 54.084764, Se = 45.915236
[calcCurveXYOffset] [245]: arcR = 202.123000, arcRotationAngle = 15.331401, arcRotationAngleRad = 0.267583, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.035587
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.193020
[calcCurveXYOffset] [256]: dX = 53.441651
[calcCurveXYOffset] [257]: dY = -7.193020
[coordinateSystemRotates] [206]: accumulateBranchAngle = 53.320000, accumulateBranchAngleRad = 0.930610
[coordinateSystemRotates] [207]: dX = 53.441651
[coordinateSystemRotates] [208]: dY = -7.193020
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.597345
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.801984
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 31.923116
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -5.768689
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 42.859360
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -4.296716
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 37.691805
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 38.562644
[coordinateSystemRotates] [220]: coordinate system rotated X = 37.691805
[coordinateSystemRotates] [221]: coordinate system rotated Y = 38.562644
[calcRootOrParentSegmentCoordinate] [552]: first half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 14.051955, rootOrParentNode->MapData.accumulateXY.distanceY = 8.811038
[calcDestination] [78]: destinationCoord latitude = 40.344921  destinationCoord longitude = 116.808946
[calcRootOrParentSegmentCoordinate] [555]: one SampleCoord before the startCoord latitude = 40.344921  longitude = 116.808946
[calcRootOrParentSegmentCoordinate] [558]: rootOrParentNode->MapData.accumulateBranchAngle = 68.651401
[calcRootOrParentSegmentCoordinate] [560]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 68.651401
[calcCurveXYOffset] [245]: arcR = 238.086000, arcRotationAngle = 11.049575, arcRotationAngleRad = 0.192851, signCurvature = 249
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.018538
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -4.413706
[calcCurveXYOffset] [256]: dX = 45.631154
[calcCurveXYOffset] [257]: dY = 4.413706
[coordinateSystemRotates] [206]: accumulateBranchAngle = 68.651401, accumulateBranchAngleRad = 1.198193
[coordinateSystemRotates] [207]: dX = 45.631154
[coordinateSystemRotates] [208]: dY = 4.413706
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.364041
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.931383
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 16.611628
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 4.110849
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 42.500071
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.606771
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 12.500779
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 44.106842
[coordinateSystemRotates] [220]: coordinate system rotated X = 12.500779
[coordinateSystemRotates] [221]: coordinate system rotated Y = 44.106842
[calcRootOrParentSegmentCoordinate] [567]: second half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 26.552734, rootOrParentNode->MapData.accumulateXY.distanceY = 52.917880
[calcDestination] [78]: destinationCoord latitude = 40.345034  destinationCoord longitude = 116.809466
[calcRootOrParentSegmentCoordinate] [569]: rootSegment or parentSegment's startCoordinate latitude = 40.345034  longitude = 116.809466
[calcRootOrParentSegmentCoordinate] [572]: rootOrParentNode->MapData.accumulateBranchAngle = 57.601825
[calcRootOrParentSegmentCoordinate] [574]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 57.601825
[displayNodeCoordinate] [144]: 2's startCoordinate: latitude = 40.345034, longitude = 116.809466
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.344921, longitude = 116.808946
[displayNodeCoordinate] [149]: 2's endCoordinate: latitude = 40.344583, longitude = 116.808491
[insertNode] [1290]: tempNode is = 0x5555f8d9be80, preSegmentId = 2, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1317]: some nodes are already in tree
[       OK ] PsdMapTest.rootWithCurve (0 ms)
[ RUN      ] PsdMapTest.parentWithCurve
[TestBody] [837]: VPsdMap().empty() = 0
[TestBody] [883]: MapData_X.preSegmentId = 3
[TestBody] [883]: MapData_X.preSegmentId = 2
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.809901, latitude = 40.345438, hvHeading = 231.480000
[createNode] [1178]: newNode = 0x5555f8d9bfd0
[insertNodeInTree] [1330]: curNode = 0x5555f8d9bfd0
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9bfd0, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 0.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 231.480000, accumulateBranchAngleRad = 4.040088
[coordinateSystemRotates] [207]: dX = 0.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.622788
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.782391
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.000000
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = 0.000000, disHv2EndAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.345438  destinationCoord longitude = 116.809901
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.345438  longitude = 116.809901
[calcStraightXYOffset] [229]: Length = 153.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -153.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 231.480000, accumulateBranchAngleRad = 4.040088
[coordinateSystemRotates] [207]: dX = -153.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.622788
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.782391
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 95.286530
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 119.705794
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 95.286530
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 119.705794
[coordinateSystemRotates] [220]: coordinate system rotated X = 95.286530
[coordinateSystemRotates] [221]: coordinate system rotated Y = 119.705794
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 95.286530, disHv2StartAfterRotatingCoord.distanceY = 119.705794
[calcDestination] [78]: destinationCoord latitude = 40.346294  destinationCoord longitude = 116.811312
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.346294  longitude = 116.811312
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 51.480000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.346294, longitude = 116.811312
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.345438, longitude = 116.809901
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9c0c0
[insertParentNode] [1204]: parentNode = 0x5555f8d9c0c0
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcRootOrParentSegmentCoordinate] [492]: R = 47.328400
[calcRootOrParentSegmentCoordinate] [498]: Ssum = 52.138564
[calcRootOrParentSegmentCoordinate] [501]: sampleRotationAngle = 31.559483
[calcCurveXYOffset] [245]: arcR = -47.328400, arcRotationAngle = 31.559483, arcRotationAngleRad = 0.550817, signCurvature = 0
[calcCurveXYOffset] [251]: fixed arcR = 47.328400
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.147903
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = -24.770902
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 53.320000, accumulateBranchAngleRad = 0.930610
[coordinateSystemRotates] [207]: dX = -24.770902
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.597345
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.801984
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -14.796781
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -5.613889
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -19.865872
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -4.181417
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -9.182891
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -24.047289
[coordinateSystemRotates] [220]: coordinate system rotated X = -9.182891
[coordinateSystemRotates] [221]: coordinate system rotated Y = -24.047289
[calcRootOrParentSegmentCoordinate] [506]: accumulateXY.distanceX = 86.103639, accumulateXY.distanceY = 95.658505
[calcDestination] [78]: destinationCoord latitude = 40.346211  destinationCoord longitude = 116.811028
[calcRootOrParentSegmentCoordinate] [512]: accumulateBranchAngle = 84.879483
[calcRootOrParentSegmentCoordinate] [514]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 84.879483
[calcRootOrParentSegmentCoordinate] [492]: R = 47.151995
[calcRootOrParentSegmentCoordinate] [498]: Ssum = 104.182409
[calcRootOrParentSegmentCoordinate] [501]: sampleRotationAngle = 31.620005
[calcCurveXYOffset] [245]: arcR = -47.151995, arcRotationAngle = 31.620005, arcRotationAngleRad = 0.551873, signCurvature = 0
[calcCurveXYOffset] [251]: fixed arcR = 47.151995
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.148456
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = -24.721002
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 84.879483, accumulateBranchAngleRad = 1.481426
[coordinateSystemRotates] [207]: dX = -24.721002
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.089251
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.996009
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -2.206373
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -6.972064
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -24.622344
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.624757
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 4.765691
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -25.247101
[coordinateSystemRotates] [220]: coordinate system rotated X = 4.765691
[coordinateSystemRotates] [221]: coordinate system rotated Y = -25.247101
[calcRootOrParentSegmentCoordinate] [506]: accumulateXY.distanceX = 90.869330, accumulateXY.distanceY = 70.411404
[calcDestination] [78]: destinationCoord latitude = 40.346254  destinationCoord longitude = 116.810731
[calcRootOrParentSegmentCoordinate] [512]: accumulateBranchAngle = 116.499488
[calcRootOrParentSegmentCoordinate] [514]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 116.499488
[calcRootOrParentSegmentCoordinate] [492]: R = 46.977217
[calcRootOrParentSegmentCoordinate] [498]: Ssum = 156.132239
[calcRootOrParentSegmentCoordinate] [501]: sampleRotationAngle = 31.680315
[calcCurveXYOffset] [245]: arcR = -46.977217, arcRotationAngle = 31.680315, arcRotationAngleRad = 0.552926, signCurvature = 0
[calcCurveXYOffset] [251]: fixed arcR = 46.977217
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.149008
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = -24.671462
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 116.499488, accumulateBranchAngleRad = 2.033300
[coordinateSystemRotates] [207]: dX = -24.671462
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.446190
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.894938
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 11.008155
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -6.264568
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -22.079437
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 3.123329
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 17.272724
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -18.956109
[coordinateSystemRotates] [220]: coordinate system rotated X = 17.272724
[coordinateSystemRotates] [221]: coordinate system rotated Y = -18.956109
[calcRootOrParentSegmentCoordinate] [506]: accumulateXY.distanceX = 108.142054, accumulateXY.distanceY = 51.455295
[calcDestination] [78]: destinationCoord latitude = 40.346409  destinationCoord longitude = 116.810507
[calcRootOrParentSegmentCoordinate] [512]: accumulateBranchAngle = 148.179803
[calcRootOrParentSegmentCoordinate] [514]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 148.179803
[calcRootOrParentSegmentCoordinate] [492]: R = 46.804042
[calcRootOrParentSegmentCoordinate] [520]: finalRemainLength = 43.867761
[calcRootOrParentSegmentCoordinate] [544]: Sa = 21.899795, Se = 21.967966
[calcCurveXYOffset] [245]: arcR = 46.804042, arcRotationAngle = 26.808920, arcRotationAngleRad = 0.467904, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.107484
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -5.030704
[calcCurveXYOffset] [256]: dX = 21.109395
[calcCurveXYOffset] [257]: dY = -5.030704
[coordinateSystemRotates] [206]: accumulateBranchAngle = 148.179803, accumulateBranchAngleRad = 2.586225
[coordinateSystemRotates] [207]: dX = 21.109395
[coordinateSystemRotates] [208]: dY = -5.030704
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.849707
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.527255
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -17.936798
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.652465
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 11.130042
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 4.274624
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -15.284333
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 15.404665
[coordinateSystemRotates] [220]: coordinate system rotated X = -15.284333
[coordinateSystemRotates] [221]: coordinate system rotated Y = 15.404665
[calcRootOrParentSegmentCoordinate] [552]: first half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 92.857721, rootOrParentNode->MapData.accumulateXY.distanceY = 66.859960
[calcDestination] [78]: destinationCoord latitude = 40.346272  destinationCoord longitude = 116.810689
[calcRootOrParentSegmentCoordinate] [555]: one SampleCoord before the startCoord latitude = 40.346272  longitude = 116.810689
[calcRootOrParentSegmentCoordinate] [558]: rootOrParentNode->MapData.accumulateBranchAngle = 174.988723
[calcRootOrParentSegmentCoordinate] [560]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 174.988723
[calcCurveXYOffset] [245]: arcR = 46.658800, arcRotationAngle = 26.976084, arcRotationAngleRad = 0.470821, signCurvature = 249
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.108804
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -5.076667
[calcCurveXYOffset] [256]: dX = 21.165297
[calcCurveXYOffset] [257]: dY = 5.076667
[coordinateSystemRotates] [206]: accumulateBranchAngle = 174.988723, accumulateBranchAngleRad = 3.054129
[coordinateSystemRotates] [207]: dX = 21.165297
[coordinateSystemRotates] [208]: dY = 5.076667
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.996178
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.087352
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -21.084393
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.443456
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.848827
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -5.057261
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -21.527849
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -3.208434
[coordinateSystemRotates] [220]: coordinate system rotated X = -21.527849
[coordinateSystemRotates] [221]: coordinate system rotated Y = -3.208434
[calcRootOrParentSegmentCoordinate] [567]: second half of the curvature curve: rootOrParentNode->MapData.accumulateXY.distanceX = 71.329872, rootOrParentNode->MapData.accumulateXY.distanceY = 63.651526
[calcDestination] [78]: destinationCoord latitude = 40.346079  destinationCoord longitude = 116.810651
[calcRootOrParentSegmentCoordinate] [569]: rootSegment or parentSegment's startCoordinate latitude = 40.346079  longitude = 116.810651
[calcRootOrParentSegmentCoordinate] [572]: rootOrParentNode->MapData.accumulateBranchAngle = 148.012639
[calcRootOrParentSegmentCoordinate] [574]: fixed rootOrParentNode->MapData.accumulateBranchAngle = 148.012639
[displayNodeCoordinate] [144]: 2's startCoordinate: latitude = 40.346079, longitude = 116.810651
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.346272, longitude = 116.810689
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.346409, longitude = 116.810507
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.346254, longitude = 116.810731
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.346211, longitude = 116.811028
[displayNodeCoordinate] [149]: 2's endCoordinate: latitude = 40.346294, longitude = 116.811312
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 2, prevSegmentId = 4, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[       OK ] PsdMapTest.parentWithCurve (0 ms)
[ RUN      ] PsdMapTest.childWithCurve
[TestBody] [894]: VPsdMap().empty() = 0
[TestBody] [940]: MapData_X.preSegmentId = 3
[TestBody] [940]: MapData_X.preSegmentId = 2
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.809901, latitude = 40.345438, hvHeading = 52.150000
[createNode] [1178]: newNode = 0x5555f8d9c220
[insertNodeInTree] [1330]: curNode = 0x5555f8d9c220
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9c220, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 153.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 153.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 52.150000, accumulateBranchAngleRad = 0.910189
[coordinateSystemRotates] [207]: dX = 153.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.613596
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.789620
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 93.880243
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 120.811837
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 93.880243
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 120.811837
[coordinateSystemRotates] [220]: coordinate system rotated X = 93.880243
[coordinateSystemRotates] [221]: coordinate system rotated Y = 120.811837
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = 93.880243, disHv2EndAfterRotatingCoord.distanceY = 120.811837
[calcDestination] [78]: destinationCoord latitude = 40.346281  destinationCoord longitude = 116.811325
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.346281  longitude = 116.811325
[calcStraightXYOffset] [229]: Length = 0.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 52.150000, accumulateBranchAngleRad = 0.910189
[coordinateSystemRotates] [207]: dX = -0.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.613596
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.789620
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = -0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.000000
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 0.000000, disHv2StartAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.345438  destinationCoord longitude = 116.809901
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.345438  longitude = 116.809901
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 232.150000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.345438, longitude = 116.809901
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.346281, longitude = 116.811325
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 4, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[insertNode] [1290]: tempNode is = 0x5555f8d9c220, preSegmentId = 2, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9c310
[insertChildNode] [1186]: childNode = 0x5555f8d9c310
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [326]: R = 47.328400
[calcChildSegmentCoordinate] [332]: Ssum = 52.138564
[calcChildSegmentCoordinate] [335]: sampleRotationAngle = 31.559483
[calcCurveXYOffset] [245]: arcR = 47.328400, arcRotationAngle = 31.559483, arcRotationAngleRad = 0.550817, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.147903
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = 24.770902
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 53.990000, accumulateBranchAngleRad = 0.942303
[coordinateSystemRotates] [207]: dX = 24.770902
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.587926
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.808914
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 14.563468
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -5.662401
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 20.037539
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -4.115485
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 20.225869
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 15.922054
[coordinateSystemRotates] [220]: coordinate system rotated X = 20.225869
[coordinateSystemRotates] [221]: coordinate system rotated Y = 15.922054
[calcChildSegmentCoordinate] [340]: accumulateXY.distanceX = 114.106112, accumulateXY.distanceY = 136.733891
[calcDestination] [78]: destinationCoord latitude = 40.346463  destinationCoord longitude = 116.811513
[calcChildSegmentCoordinate] [346]: childNode->MapData.accumulateBranchAngle = 22.430517
[calcChildSegmentCoordinate] [348]: fixed childNode->MapData.accumulateBranchAngle = 22.430517
[calcChildSegmentCoordinate] [326]: R = 47.151995
[calcChildSegmentCoordinate] [332]: Ssum = 104.182409
[calcChildSegmentCoordinate] [335]: sampleRotationAngle = 31.620005
[calcCurveXYOffset] [245]: arcR = 47.151995, arcRotationAngle = 31.620005, arcRotationAngleRad = 0.551873, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.148456
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = 24.721002
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 22.430517, accumulateBranchAngleRad = 0.391486
[coordinateSystemRotates] [207]: dX = 24.721002
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.924343
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.381563
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 22.850683
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.670939
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 9.432614
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -6.470401
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 25.521623
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.962213
[coordinateSystemRotates] [220]: coordinate system rotated X = 25.521623
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.962213
[calcChildSegmentCoordinate] [340]: accumulateXY.distanceX = 139.627735, accumulateXY.distanceY = 139.696104
[calcDestination] [78]: destinationCoord latitude = 40.346692  destinationCoord longitude = 116.811548
[calcChildSegmentCoordinate] [346]: childNode->MapData.accumulateBranchAngle = -9.189488
[calcChildSegmentCoordinate] [348]: fixed childNode->MapData.accumulateBranchAngle = -9.189488
[calcChildSegmentCoordinate] [326]: R = 46.977217
[calcChildSegmentCoordinate] [332]: Ssum = 156.132239
[calcChildSegmentCoordinate] [335]: sampleRotationAngle = 31.680315
[calcCurveXYOffset] [245]: arcR = 46.977217, arcRotationAngle = 31.680315, arcRotationAngleRad = 0.552926, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.149008
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = 24.671462
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = -9.189488, accumulateBranchAngleRad = -0.160387
[coordinateSystemRotates] [207]: dX = 24.671462
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.987166
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.159700
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 24.354818
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 1.117901
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -3.940035
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -6.910159
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 23.236918
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -10.850194
[coordinateSystemRotates] [220]: coordinate system rotated X = 23.236918
[coordinateSystemRotates] [221]: coordinate system rotated Y = -10.850194
[calcChildSegmentCoordinate] [340]: accumulateXY.distanceX = 162.864653, accumulateXY.distanceY = 128.845911
[calcDestination] [78]: destinationCoord latitude = 40.346901  destinationCoord longitude = 116.811420
[calcChildSegmentCoordinate] [346]: childNode->MapData.accumulateBranchAngle = -40.869803
[calcChildSegmentCoordinate] [348]: fixed childNode->MapData.accumulateBranchAngle = -40.869803
[calcChildSegmentCoordinate] [326]: R = 46.804042
[calcChildSegmentCoordinate] [354]: finalRemainLength = 43.867761
[calcChildSegmentCoordinate] [377]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [383]: Sa = 21.899795, Se = 21.967966
[calcCurveXYOffset] [245]: arcR = 46.804042, arcRotationAngle = 26.808920, arcRotationAngleRad = 0.467904, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.107484
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -5.030704
[calcCurveXYOffset] [256]: dX = 21.109395
[calcCurveXYOffset] [257]: dY = -5.030704
[coordinateSystemRotates] [206]: accumulateBranchAngle = -40.869803, accumulateBranchAngleRad = -0.713313
[coordinateSystemRotates] [207]: dX = 21.109395
[coordinateSystemRotates] [208]: dY = -5.030704
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.756198
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.654342
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 15.962892
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 3.291803
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -13.812771
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -3.804210
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 12.671089
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -17.616982
[coordinateSystemRotates] [220]: coordinate system rotated X = 12.671089
[coordinateSystemRotates] [221]: coordinate system rotated Y = -17.616982
[calcChildSegmentCoordinate] [391]: first half of the curvature curve: accumulateXY.distanceX = 175.535742, accumulateXY.distanceY = 111.228929
[calcDestination] [78]: destinationCoord latitude = 40.347015  destinationCoord longitude = 116.811212
[calcChildSegmentCoordinate] [394]: one SampleCoord before the endCoord  latitude = 40.347015  longitude = 116.811212
[calcChildSegmentCoordinate] [397]: childNode->MapData.accumulateBranchAngle = -67.678723
[calcChildSegmentCoordinate] [399]: fixed childNode->MapData.accumulateBranchAngle = -67.678723
[calcCurveXYOffset] [245]: arcR = 46.658800, arcRotationAngle = 26.976084, arcRotationAngleRad = 0.470821, signCurvature = 232
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.108804
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -5.076667
[calcCurveXYOffset] [256]: dX = 21.165297
[calcCurveXYOffset] [257]: dY = 5.076667
[coordinateSystemRotates] [206]: accumulateBranchAngle = -67.678723, accumulateBranchAngleRad = -1.181217
[coordinateSystemRotates] [207]: dX = 21.165297
[coordinateSystemRotates] [208]: dY = 5.076667
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.379800
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.925069
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 8.038574
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -4.696266
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -19.579355
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.928117
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 12.734839
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -17.651238
[coordinateSystemRotates] [220]: coordinate system rotated X = 12.734839
[coordinateSystemRotates] [221]: coordinate system rotated Y = -17.651238
[calcChildSegmentCoordinate] [407]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = 188.270581, childNode->MapData.accumulateXY.distanceY = 93.577691
[calcDestination] [78]: destinationCoord latitude = 40.347129  destinationCoord longitude = 116.811004
[calcChildSegmentCoordinate] [409]: childSegment's endCoordinate latitude = 40.347129  longitude = 116.811004
[calcChildSegmentCoordinate] [412]: childNode->MapData.accumulateBranchAngle = -40.702639
[calcChildSegmentCoordinate] [414]: fixed accumulateBranchAngleHv2End = -40.702639
[insertNode] [1312]: childNode's preSegmentId = 2
[displayNodeCoordinate] [144]: 2's startCoordinate: latitude = 40.346281, longitude = 116.811325
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.346463, longitude = 116.811513
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.346692, longitude = 116.811548
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.346901, longitude = 116.811420
[displayNodeCoordinate] [147]: 2's SampleCoord: latitude = 40.347015, longitude = 116.811212
[displayNodeCoordinate] [149]: 2's endCoordinate: latitude = 40.347129, longitude = 116.811004
[       OK ] PsdMapTest.childWithCurve (0 ms)
[ RUN      ] PsdMapTest.deleteSubTreeWithDepthGreaterThan1
[TestBody] [951]: VPsdMap().empty() = 0
[pushInList] [190]: preSegmentId = 4
[pushInList] [190]: preSegmentId = 3
[pushInList] [190]: preSegmentId = 2
[pushInList] [190]: preSegmentId = 5
[pushInList] [190]: preSegmentId = 6
[pushInList] [190]: preSegmentId = 7
[pushInList] [190]: preSegmentId = 8
[TestBody] [1074]: MapData_X.preSegmentId = 4
[TestBody] [1074]: MapData_X.preSegmentId = 3
[TestBody] [1074]: MapData_X.preSegmentId = 2
[TestBody] [1074]: MapData_X.preSegmentId = 5
[TestBody] [1074]: MapData_X.preSegmentId = 6
[TestBody] [1074]: MapData_X.preSegmentId = 7
[TestBody] [1074]: MapData_X.preSegmentId = 8
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815134, latitude = 40.356480, hvHeading = 179.340000
[createNode] [1178]: newNode = 0x5555f8d9ca20
[insertNodeInTree] [1330]: curNode = 0x5555f8d9ca20
[IsCurIdInList] [1537]: curSegmentId is in list = 4
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9ca20, current tree Id is = 4, curSegmentId is = 4
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 78.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 78.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 78.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [220]: coordinate system rotated X = -77.994825
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.898476
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -77.994825, disHv2EndAfterRotatingCoord.distanceY = 0.898476
[calcDestination] [78]: destinationCoord latitude = 40.355779  destinationCoord longitude = 116.815145
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.355779  longitude = 116.815145
[calcStraightXYOffset] [229]: Length = 0.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.000000
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 0.000000, disHv2StartAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.356480  destinationCoord longitude = 116.815134
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.356480  longitude = 116.815134
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.340000
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.356480, longitude = 116.815134
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355779, longitude = 116.815145
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 4, prevSegmentId = 3, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cb10
[insertParentNode] [1204]: parentNode = 0x5555f8d9cb10
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -254.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -253.999996
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -0.044331
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.340000, accumulateBranchAngleRad = 6.271666
[coordinateSystemRotates] [207]: dX = -253.999996
[coordinateSystemRotates] [208]: dY = -0.044331
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983145
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000511
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.044328
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.983655
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.881477
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.983655
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.881477
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -253.983655, accumulateXY.distanceY = 2.881477
[calcDestination] [78]: destinationCoord latitude = 40.354198  destinationCoord longitude = 116.815168
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.354198, longitude = 116.815168
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356480, longitude = 116.815134
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cc00
[insertRootNode] [1223]: rootNode = 0x5555f8d9cc00
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -176.000000, BranchAngle = -0.370000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.006458
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -175.996330
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 1.136551
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.330000, accumulateBranchAngleRad = 6.271492
[coordinateSystemRotates] [207]: dX = -175.996330
[coordinateSystemRotates] [208]: dY = 1.136551
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -175.984297
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.013290
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.058002
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.136473
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -175.971007
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.194475
[coordinateSystemRotates] [220]: coordinate system rotated X = -175.971007
[coordinateSystemRotates] [221]: coordinate system rotated Y = 3.194475
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -429.954662, accumulateXY.distanceY = 6.075952
[calcDestination] [78]: destinationCoord latitude = 40.352618  destinationCoord longitude = 116.815206
[displayNodeCoordinate] [139]: 2's startCoordinate: latitude = 40.352618, longitude = 116.815206
[displayNodeCoordinate] [140]: 2's endCoordinate: latitude = 40.354198, longitude = 116.815168
[insertNode] [1290]: tempNode is = 0x5555f8d9cc00, preSegmentId = 2, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1317]: some nodes are already in tree
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9ca20
[findNodeById] [885]: result = 0x5555f8d9ca20
[insertNode] [1290]: tempNode is = 0x5555f8d9ca20, preSegmentId = 5, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cd10
[insertChildNode] [1186]: childNode = 0x5555f8d9cd10
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 90.060000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.571844
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.265988
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 253.999861
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.265988
[coordinateSystemRotates] [208]: dY = 253.999861
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.265970
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.003064
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -253.983009
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [220]: coordinate system rotated X = -2.659833
[coordinateSystemRotates] [221]: coordinate system rotated Y = -253.986073
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -80.654658, accumulateXY.distanceY = -253.087597
[calcDestination] [78]: destinationCoord latitude = 40.355755  destinationCoord longitude = 116.812150
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 40.355779, longitude = 116.815145
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 40.355755, longitude = 116.812150
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9ca20
[findNodeById] [885]: result = 0x5555f8d9ca20
[insertNode] [1290]: tempNode is = 0x5555f8d9ca20, preSegmentId = 6, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9ce20
[insertChildNode] [1186]: childNode = 0x5555f8d9ce20
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.020000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000349
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 253.999985
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.088663
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 253.999985
[coordinateSystemRotates] [208]: dY = 0.088663
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983133
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.001021
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.088657
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.984154
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.837148
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -331.978979, accumulateXY.distanceY = 3.735624
[calcDestination] [78]: destinationCoord latitude = 40.353498  destinationCoord longitude = 116.815178
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 40.355779, longitude = 116.815145
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 40.353498, longitude = 116.815178
[insertNode] [1242]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9ca20
[findNodeById] [885]: result = 0x5555f8d9ca20
[insertNode] [1290]: tempNode is = 0x5555f8d9ca20, preSegmentId = 7, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertChildNode] [1186]: childNode = 0x5555f8d9cf30
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = -90.050000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.571669
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.221657
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -253.999903
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.221657
[coordinateSystemRotates] [208]: dY = -253.999903
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.221642
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.002553
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 253.983052
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.147446
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 253.980498
[coordinateSystemRotates] [220]: coordinate system rotated X = 3.147446
[coordinateSystemRotates] [221]: coordinate system rotated Y = 253.980498
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -74.847379, accumulateXY.distanceY = 254.878974
[calcDestination] [78]: destinationCoord latitude = 40.355808  destinationCoord longitude = 116.818139
[insertNode] [1312]: childNode's preSegmentId = 7
[displayNodeCoordinate] [139]: 7's startCoordinate: latitude = 40.355779, longitude = 116.815145
[displayNodeCoordinate] [140]: 7's endCoordinate: latitude = 40.355808, longitude = 116.818139
[insertNode] [1242]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[insertNode] [1290]: tempNode is = 0x5555f8d9ce20, preSegmentId = 8, prevSegmentId = 6, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d020
[insertChildNode] [1186]: childNode = 0x5555f8d9d020
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 103.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 102.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.017977
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 102.999998
[coordinateSystemRotates] [208]: dY = 0.017977
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -102.993573
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000201
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.150497
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.017976
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -102.993774
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.132521
[coordinateSystemRotates] [220]: coordinate system rotated X = -102.993774
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.132521
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -434.972753, accumulateXY.distanceY = 4.868145
[calcDestination] [78]: destinationCoord latitude = 40.352573  destinationCoord longitude = 116.815191
[insertNode] [1312]: childNode's preSegmentId = 8
[displayNodeCoordinate] [139]: 8's startCoordinate: latitude = 40.353498, longitude = 116.815178
[displayNodeCoordinate] [140]: 8's endCoordinate: latitude = 40.352573, longitude = 116.815191
[mapUpdate] [1409]: --------------------------update the attribute of root, parent and current and delete out of date childs--------------------------
[updateRootNode] [1146]: updateRootNode
[updateRootNode] [1162]: old RootNode = 2
[deleteOldRoot] [956]: old parentNode = 3 is newRoot
[popUpList] [168]: delete list's element
[updateRootNode] [1164]: new RootNode = 3
[mapUpdate] [1417]: mTree->MapData.nodeAttribute = 1
[updateOtherNode] [1093]: mTree->MapData.nodeAttribute = 1
[updateOtherNode] [1119]: this RootSegment is new root
[findNodeById] [885]: result = 0x5555f8d9ca20
[updateOtherNode] [1122]: lastCurNode = 4 is newParent
[popUpList] [168]: delete list's element
[popUpList] [168]: delete list's element
[popUpList] [168]: delete list's element
[findNodeById] [885]: result = 0x5555f8d9cd10
[findNodeById] [885]: result = 0x5555f8d9cd10
[updateOtherNode] [1132]: curNode  = 0x5555f8d9cd10
[updateOtherNode] [1137]: curNode  = 5
[mapUpdate] [1423]: updateOtherNode
[mapUpdate] [1427]: mTree->MapData.nodeAttribute = 1
[mapUpdate] [1433]: updateChildNode
[mapUpdate] [1455]: --------------------------update the Coordinate of root, parent, current and childs--------------------------
[mapUpdate] [1456]: hv's longitude = 116.815146, latitude = 40.355777, hvHeading = 269.400000
[findNodeById] [885]: result = 0x5555f8d9cd10
[findNodeById] [885]: result = 0x5555f8d9cd10
[mapUpdate] [1466]: curNode->MapData.nodeAttribute = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 254.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 269.400000, accumulateBranchAngleRad = 4.701917
[coordinateSystemRotates] [207]: dX = 254.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.010472
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.999945
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [220]: coordinate system rotated X = -2.659833
[coordinateSystemRotates] [221]: coordinate system rotated Y = -253.986073
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -2.659833, disHv2EndAfterRotatingCoord.distanceY = -253.986073
[calcDestination] [78]: destinationCoord latitude = 40.355753  destinationCoord longitude = 116.812152
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.355753  longitude = 116.812152
[calcStraightXYOffset] [229]: Length = 0.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 269.400000, accumulateBranchAngleRad = 4.701917
[coordinateSystemRotates] [207]: dX = -0.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.010472
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.999945
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.000000
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 0.000000, disHv2StartAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.355777  destinationCoord longitude = 116.815146
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.355777  longitude = 116.815146
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 89.400000
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 40.355777, longitude = 116.815146
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 40.355753, longitude = 116.812152
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -78.000000, BranchAngle = 90.060000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.571844
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 0.081681
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -77.999957
[coordinateSystemRotates] [206]: accumulateBranchAngle = 89.400000, accumulateBranchAngleRad = 1.560324
[coordinateSystemRotates] [207]: dX = 0.081681
[coordinateSystemRotates] [208]: dY = -77.999957
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.010472
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.999945
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000855
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -77.995680
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.081677
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.816799
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 77.996536
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.735122
[coordinateSystemRotates] [220]: coordinate system rotated X = 77.996536
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.735122
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = 77.996536, accumulateXY.distanceY = -0.735122
[calcDestination] [78]: destinationCoord latitude = 40.356478  destinationCoord longitude = 116.815137
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.356478, longitude = 116.815137
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355777, longitude = 116.815146
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -254.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -253.999996
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -0.044331
[coordinateSystemRotates] [206]: accumulateBranchAngle = -0.660000, accumulateBranchAngleRad = -0.011519
[coordinateSystemRotates] [207]: dX = -253.999996
[coordinateSystemRotates] [208]: dY = -0.044331
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983145
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000511
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.044328
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.983655
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.881477
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.983655
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.881477
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -175.987119, accumulateXY.distanceY = 2.146355
[calcDestination] [78]: destinationCoord latitude = 40.354196  destinationCoord longitude = 116.815171
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.354196, longitude = 116.815171
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356478, longitude = 116.815137
[TestBody] [1096]: check remain segmentId
[TestBody] [1099]: MapData_X.preSegmentId = 4
[TestBody] [1099]: MapData_X.preSegmentId = 3
[TestBody] [1099]: MapData_X.preSegmentId = 5
[       OK ] PsdMapTest.deleteSubTreeWithDepthGreaterThan1 (0 ms)
[ RUN      ] PsdMapTest.mapCreateAndmapUpdateAndmapClear
[TestBody] [1107]: VPsdMap().empty() = 0
[pushInList] [190]: preSegmentId = 4
[pushInList] [190]: preSegmentId = 3
[pushInList] [190]: preSegmentId = 2
[pushInList] [190]: preSegmentId = 5
[pushInList] [190]: preSegmentId = 6
[pushInList] [190]: preSegmentId = 7
[pushInList] [190]: preSegmentId = 8
[pushInList] [190]: preSegmentId = 20
[TestBody] [1245]: MapData_X.preSegmentId = 4
[TestBody] [1245]: MapData_X.preSegmentId = 3
[TestBody] [1245]: MapData_X.preSegmentId = 2
[TestBody] [1245]: MapData_X.preSegmentId = 5
[TestBody] [1245]: MapData_X.preSegmentId = 6
[TestBody] [1245]: MapData_X.preSegmentId = 7
[TestBody] [1245]: MapData_X.preSegmentId = 8
[TestBody] [1245]: MapData_X.preSegmentId = 20
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815134, latitude = 40.356480, hvHeading = 179.340000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 4
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 4, curSegmentId is = 4
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 78.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 78.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 78.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [220]: coordinate system rotated X = -77.994825
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.898476
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -77.994825, disHv2EndAfterRotatingCoord.distanceY = 0.898476
[calcDestination] [78]: destinationCoord latitude = 40.355779  destinationCoord longitude = 116.815145
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.355779  longitude = 116.815145
[calcStraightXYOffset] [229]: Length = 0.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.000000
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 0.000000, disHv2StartAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.356480  destinationCoord longitude = 116.815134
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.356480  longitude = 116.815134
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.340000
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.356480, longitude = 116.815134
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355779, longitude = 116.815145
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 4, prevSegmentId = 3, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9ce20
[insertParentNode] [1204]: parentNode = 0x5555f8d9ce20
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -254.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -253.999996
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -0.044331
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.340000, accumulateBranchAngleRad = 6.271666
[coordinateSystemRotates] [207]: dX = -253.999996
[coordinateSystemRotates] [208]: dY = -0.044331
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983145
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000511
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.044328
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.983655
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.881477
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.983655
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.881477
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -253.983655, accumulateXY.distanceY = 2.881477
[calcDestination] [78]: destinationCoord latitude = 40.354198  destinationCoord longitude = 116.815168
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.354198, longitude = 116.815168
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356480, longitude = 116.815134
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d020
[insertRootNode] [1223]: rootNode = 0x5555f8d9d020
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -176.000000, BranchAngle = -0.370000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.006458
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -175.996330
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 1.136551
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.330000, accumulateBranchAngleRad = 6.271492
[coordinateSystemRotates] [207]: dX = -175.996330
[coordinateSystemRotates] [208]: dY = 1.136551
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -175.984297
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.013290
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.058002
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.136473
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -175.971007
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.194475
[coordinateSystemRotates] [220]: coordinate system rotated X = -175.971007
[coordinateSystemRotates] [221]: coordinate system rotated Y = 3.194475
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -429.954662, accumulateXY.distanceY = 6.075952
[calcDestination] [78]: destinationCoord latitude = 40.352618  destinationCoord longitude = 116.815206
[displayNodeCoordinate] [139]: 2's startCoordinate: latitude = 40.352618, longitude = 116.815206
[displayNodeCoordinate] [140]: 2's endCoordinate: latitude = 40.354198, longitude = 116.815168
[insertNode] [1290]: tempNode is = 0x5555f8d9d020, preSegmentId = 2, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1317]: some nodes are already in tree
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9cf30
[findNodeById] [885]: result = 0x5555f8d9cf30
[insertNode] [1290]: tempNode is = 0x5555f8d9cf30, preSegmentId = 5, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cc00
[insertChildNode] [1186]: childNode = 0x5555f8d9cc00
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 90.060000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.571844
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.265988
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 253.999861
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.265988
[coordinateSystemRotates] [208]: dY = 253.999861
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.265970
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.003064
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -253.983009
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [220]: coordinate system rotated X = -2.659833
[coordinateSystemRotates] [221]: coordinate system rotated Y = -253.986073
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -80.654658, accumulateXY.distanceY = -253.087597
[calcDestination] [78]: destinationCoord latitude = 40.355755  destinationCoord longitude = 116.812150
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 40.355779, longitude = 116.815145
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 40.355755, longitude = 116.812150
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9cf30
[findNodeById] [885]: result = 0x5555f8d9cf30
[insertNode] [1290]: tempNode is = 0x5555f8d9cf30, preSegmentId = 6, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d450
[insertChildNode] [1186]: childNode = 0x5555f8d9d450
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.020000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000349
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 253.999985
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.088663
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 253.999985
[coordinateSystemRotates] [208]: dY = 0.088663
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983133
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.001021
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.088657
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.984154
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.837148
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -331.978979, accumulateXY.distanceY = 3.735624
[calcDestination] [78]: destinationCoord latitude = 40.353498  destinationCoord longitude = 116.815178
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 40.355779, longitude = 116.815145
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 40.353498, longitude = 116.815178
[insertNode] [1242]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9cf30
[findNodeById] [885]: result = 0x5555f8d9cf30
[insertNode] [1290]: tempNode is = 0x5555f8d9cf30, preSegmentId = 7, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d560
[insertChildNode] [1186]: childNode = 0x5555f8d9d560
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = -90.050000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.571669
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.221657
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -253.999903
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.221657
[coordinateSystemRotates] [208]: dY = -253.999903
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.221642
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.002553
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 253.983052
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.147446
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 253.980498
[coordinateSystemRotates] [220]: coordinate system rotated X = 3.147446
[coordinateSystemRotates] [221]: coordinate system rotated Y = 253.980498
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -74.847379, accumulateXY.distanceY = 254.878974
[calcDestination] [78]: destinationCoord latitude = 40.355808  destinationCoord longitude = 116.818139
[insertNode] [1312]: childNode's preSegmentId = 7
[displayNodeCoordinate] [139]: 7's startCoordinate: latitude = 40.355779, longitude = 116.815145
[displayNodeCoordinate] [140]: 7's endCoordinate: latitude = 40.355808, longitude = 116.818139
[insertNode] [1242]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9d450
[findNodeById] [885]: result = 0x5555f8d9d450
[findNodeById] [885]: result = 0x5555f8d9d450
[insertNode] [1290]: tempNode is = 0x5555f8d9d450, preSegmentId = 8, prevSegmentId = 6, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d680
[insertChildNode] [1186]: childNode = 0x5555f8d9d680
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 103.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 102.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.017977
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 102.999998
[coordinateSystemRotates] [208]: dY = 0.017977
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -102.993573
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000201
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.150497
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.017976
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -102.993774
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.132521
[coordinateSystemRotates] [220]: coordinate system rotated X = -102.993774
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.132521
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -434.972753, accumulateXY.distanceY = 4.868145
[calcDestination] [78]: destinationCoord latitude = 40.352573  destinationCoord longitude = 116.815191
[insertNode] [1312]: childNode's preSegmentId = 8
[displayNodeCoordinate] [139]: 8's startCoordinate: latitude = 40.353498, longitude = 116.815178
[displayNodeCoordinate] [140]: 8's endCoordinate: latitude = 40.352573, longitude = 116.815191
[insertNode] [1242]: (*it)->preSegmentId = 20's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 20, prevSegmentId = 19, segIsInTree = 0
[insertNode] [1323]: goto check the next segment info from vPsdMap
[mapUpdate] [1409]: --------------------------update the attribute of root, parent and current and delete out of date childs--------------------------
[updateRootNode] [1146]: updateRootNode
[updateRootNode] [1162]: old RootNode = 2
[deleteOldRoot] [956]: old parentNode = 3 is newRoot
[popUpList] [168]: delete list's element
[updateRootNode] [1164]: new RootNode = 3
[mapUpdate] [1417]: mTree->MapData.nodeAttribute = 1
[updateOtherNode] [1093]: mTree->MapData.nodeAttribute = 1
[updateOtherNode] [1119]: this RootSegment is new root
[findNodeById] [885]: result = 0x5555f8d9cf30
[updateOtherNode] [1122]: lastCurNode = 4 is newParent
[popUpList] [168]: delete list's element
[popUpList] [168]: delete list's element
[findNodeById] [885]: result = 0x5555f8d9d450
[findNodeById] [885]: result = 0x5555f8d9d450
[updateOtherNode] [1132]: curNode  = 0x5555f8d9d450
[updateOtherNode] [1137]: curNode  = 6
[mapUpdate] [1423]: updateOtherNode
[mapUpdate] [1427]: mTree->MapData.nodeAttribute = 1
[mapUpdate] [1433]: updateChildNode
[updateChildNode] [1044]: tempNode is = 0x5555f8d9ce20, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 1
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[updateChildNode] [1044]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[updateChildNode] [1077]: goto check the next segment info from vPsdMap
[findNodeById] [885]: result = 0x5555f8d9cf30
[updateChildNode] [1044]: tempNode is = 0x5555f8d9cf30, preSegmentId = 6, prevSegmentId = 4, segIsInTree = 1
[findNodeById] [885]: result = 0x5555f8d9d450
[findNodeById] [885]: result = 0x5555f8d9d450
[updateChildNode] [1044]: tempNode is = 0x5555f8d9d450, preSegmentId = 8, prevSegmentId = 6, segIsInTree = 1
[updateChildNode] [1070]: some nodes are already in tree
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[updateChildNode] [1044]: tempNode is = (nil), preSegmentId = 20, prevSegmentId = 19, segIsInTree = 0
[updateChildNode] [1077]: goto check the next segment info from vPsdMap
[mapUpdate] [1455]: --------------------------update the Coordinate of root, parent, current and childs--------------------------
[mapUpdate] [1456]: hv's longitude = 116.815146, latitude = 40.355777, hvHeading = 179.360000
[findNodeById] [885]: result = 0x5555f8d9d450
[findNodeById] [885]: result = 0x5555f8d9d450
[mapUpdate] [1466]: curNode->MapData.nodeAttribute = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 254.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 254.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.984154
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.837148
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -253.984154, disHv2EndAfterRotatingCoord.distanceY = 2.837148
[calcDestination] [78]: destinationCoord latitude = 40.353495  destinationCoord longitude = 116.815179
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.353495  longitude = 116.815179
[calcStraightXYOffset] [229]: Length = 0.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = -0.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.000000
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 0.000000, disHv2StartAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.355777  destinationCoord longitude = 116.815146
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.355777  longitude = 116.815146
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.360000
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 40.355777, longitude = 116.815146
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 40.353495, longitude = 116.815179
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -78.000000, BranchAngle = 0.020000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000349
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -77.999995
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -0.027227
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.360000, accumulateBranchAngleRad = 6.272015
[coordinateSystemRotates] [207]: dX = -77.999995
[coordinateSystemRotates] [208]: dY = -0.027227
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -77.995129
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000304
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.871250
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.027225
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -77.995433
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.844025
[coordinateSystemRotates] [220]: coordinate system rotated X = -77.995433
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.844025
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -77.995433, accumulateXY.distanceY = 0.844025
[calcDestination] [78]: destinationCoord latitude = 40.355076  destinationCoord longitude = 116.815156
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.355076, longitude = 116.815156
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355777, longitude = 116.815146
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -254.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -253.999996
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -0.044331
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.340000, accumulateBranchAngleRad = 6.271666
[coordinateSystemRotates] [207]: dX = -253.999996
[coordinateSystemRotates] [208]: dY = -0.044331
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983145
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000511
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.044328
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.983655
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.881477
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.983655
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.881477
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -331.979089, accumulateXY.distanceY = 3.725502
[calcDestination] [78]: destinationCoord latitude = 40.352795  destinationCoord longitude = 116.815190
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.352795, longitude = 116.815190
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.355076, longitude = 116.815156
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 103.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 102.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.017977
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 102.999998
[coordinateSystemRotates] [208]: dY = 0.017977
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -102.993573
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000201
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.150497
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.017976
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -102.993774
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.132521
[coordinateSystemRotates] [220]: coordinate system rotated X = -102.993774
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.132521
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -356.977928, accumulateXY.distanceY = 3.969670
[calcDestination] [78]: destinationCoord latitude = 40.352570  destinationCoord longitude = 116.815193
[displayNodeCoordinate] [139]: 8's startCoordinate: latitude = 40.353495, longitude = 116.815179
[displayNodeCoordinate] [140]: 8's endCoordinate: latitude = 40.352570, longitude = 116.815193
[TestBody] [1267]: check remain segmentId
[TestBody] [1270]: MapData_X.preSegmentId = 4
[TestBody] [1270]: MapData_X.preSegmentId = 3
[TestBody] [1270]: MapData_X.preSegmentId = 6
[TestBody] [1270]: MapData_X.preSegmentId = 8
[TestBody] [1270]: MapData_X.preSegmentId = 20
[TestBody] [1277]: tree = 0x5555f8d9ce20
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9ce20
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9ce20
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d450
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d680
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d680
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d680, Node->ParentNode = 0x5555f8d9d450
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d450
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d450, Node->ParentNode = 0x5555f8d9cf30
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = 0x5555f8d9ce20
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9ce20
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9ce20, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9ce20 has been cleared
[clearList] [162]: clear the vPsdMap
[       OK ] PsdMapTest.mapCreateAndmapUpdateAndmapClear (0 ms)
[ RUN      ] PsdMapTest.curIdIsNotInList
[TestBody] [1290]: VPsdMap().empty() = 1
[IsCurIdInList] [1542]: curSegmentId is not in List
[       OK ] PsdMapTest.curIdIsNotInList (0 ms)
[----------] 10 tests from PsdMapTest (0 ms total)

[----------] 12 tests from PsdLocationTest
[ RUN      ] PsdLocationTest.getPsdRoLocation
[TestBody] [1361]: VPsdMap().empty() = 0
[pushInList] [190]: preSegmentId = 3
[TestBody] [1392]MapData_1.preSegmentId = 3
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9ce20
[insertNodeInTree] [1330]: curNode = 0x5555f8d9ce20
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9ce20, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[PsdLocation] [76]: initialize mRoMatchedSegId = 0
[PsdLocation] [77]: initialize mRoMatchedNode = (nil)
[PsdLocation] [78]: initialize mIsMatch = 0
[PsdLocation] [79]: initialize PsdAvailable = 0
[PsdLocation] [80]: initialize MPP = 0
[PsdLocation] [81]: initialize roadSegClass = 0
[PsdLocation] [82]: initialize relativePos = 0
[PsdLocation] [83]: initialize RelativeDir = 0
[PsdLocation] [84]: initialize RvRelevancy = 0
[PsdLocation] [85]: initialize dis2Event = 0.000000
[PsdLocation] [86]: initialize HvDTIP = 0.000000
[PsdLocation] [87]: initialize RvDTIP = 0.000000
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.345438, RoPos.Long = 116.809901
[coordinateTransform] [47]: dn = 1480.382818
[coordinateTransform] [48]: de = 441.678270
[coordinateTransform] [58]: y_ = -424.337305
[coordinateTransform] [59]: x_ = -1485.446342
[coordinateTransform] [47]: dn = 1227.031755
[coordinateTransform] [48]: de = 444.653169
[coordinateTransform] [58]: y_ = -430.274546
[coordinateTransform] [59]: x_ = -1232.147387
[RoMatchSegment] [455]: startPoint.x = -1485.446342, startPoint.y = -424.337305
[RoMatchSegment] [456]: endPoint.x = -1232.147387, endPoint.y = -430.274546
[RoMatchSegment] [463]: orthogonalDistance = 459.029577
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.849049, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547361
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594232, atan2(endPoint.x, endPoint.y) = -1.906765
[RoMatchSegment] [471]: Alpha = 0.301688, Beta = 3.500996
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 0
[getPsdRoLocation] [669]: relativePos = 0
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 0.000000
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9ce20
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9ce20
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9ce20
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9ce20, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9ce20 has been cleared
[clearList] [162]: clear the vPsdMap
[       OK ] PsdLocationTest.getPsdRoLocation (0 ms)
[ RUN      ] PsdLocationTest.treeWithMultiLayer
[TestBody] [1416]: VPsdMap().empty() = 1
[pushInList] [190]: preSegmentId = 3
[pushInList] [190]: preSegmentId = 2
[pushInList] [190]: preSegmentId = 10
[pushInList] [190]: preSegmentId = 4
[pushInList] [190]: preSegmentId = 5
[pushInList] [190]: preSegmentId = 6
[pushInList] [190]: preSegmentId = 7
[pushInList] [190]: preSegmentId = 8
[TestBody] [1555]: MapData_X.preSegmentId = 3
[TestBody] [1555]: MapData_X.preSegmentId = 2
[TestBody] [1555]: MapData_X.preSegmentId = 10
[TestBody] [1555]: MapData_X.preSegmentId = 4
[TestBody] [1555]: MapData_X.preSegmentId = 5
[TestBody] [1555]: MapData_X.preSegmentId = 6
[TestBody] [1555]: MapData_X.preSegmentId = 7
[TestBody] [1555]: MapData_X.preSegmentId = 8
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9ce20
[insertNodeInTree] [1330]: curNode = 0x5555f8d9ce20
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9ce20, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertParentNode] [1204]: parentNode = 0x5555f8d9cf30
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -176.000000, BranchAngle = -0.370000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.006458
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -175.996330
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 1.136551
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.330000, accumulateBranchAngleRad = 6.271492
[coordinateSystemRotates] [207]: dX = -175.996330
[coordinateSystemRotates] [208]: dY = 1.136551
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -175.984297
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.013290
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.058002
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.136473
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -175.971007
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.194475
[coordinateSystemRotates] [220]: coordinate system rotated X = -175.971007
[coordinateSystemRotates] [221]: coordinate system rotated Y = 3.194475
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -106.975725, accumulateXY.distanceY = 2.387628
[calcDestination] [78]: destinationCoord latitude = 40.357189  destinationCoord longitude = 116.815137
[displayNodeCoordinate] [139]: 2's startCoordinate: latitude = 40.357189, longitude = 116.815137
[displayNodeCoordinate] [140]: 2's endCoordinate: latitude = 40.358770, longitude = 116.815099
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 2, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 10's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d450
[insertRootNode] [1223]: rootNode = 0x5555f8d9d450
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -200.000000, BranchAngle = -0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -199.999997
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.034907
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.700000, accumulateBranchAngleRad = 6.277949
[coordinateSystemRotates] [207]: dX = -199.999997
[coordinateSystemRotates] [208]: dY = 0.034907
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999986
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.005236
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -199.997255
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000183
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.047193
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.034906
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -199.997073
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.082099
[coordinateSystemRotates] [220]: coordinate system rotated X = -199.997073
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.082099
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -306.972797, accumulateXY.distanceY = 3.469727
[calcDestination] [78]: destinationCoord latitude = 40.355392  destinationCoord longitude = 116.815150
[displayNodeCoordinate] [139]: 10's startCoordinate: latitude = 40.355392, longitude = 116.815150
[displayNodeCoordinate] [140]: 10's endCoordinate: latitude = 40.357189, longitude = 116.815137
[insertNode] [1290]: tempNode is = 0x5555f8d9d450, preSegmentId = 10, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1317]: some nodes are already in tree
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[insertNode] [1290]: tempNode is = 0x5555f8d9ce20, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d680
[insertChildNode] [1186]: childNode = 0x5555f8d9d680
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 78.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 77.999999
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.013614
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 77.999999
[coordinateSystemRotates] [208]: dY = 0.013614
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -77.994666
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000159
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.912088
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.013613
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [220]: coordinate system rotated X = -77.994825
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.898476
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -262.982177, accumulateXY.distanceY = 3.061762
[calcDestination] [78]: destinationCoord latitude = 40.355788  destinationCoord longitude = 116.815145
[insertNode] [1312]: childNode's preSegmentId = 4
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.356488, longitude = 116.815135
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355788, longitude = 116.815145
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d680
[findNodeById] [885]: result = 0x5555f8d9d680
[findNodeById] [885]: result = 0x5555f8d9d680
[insertNode] [1290]: tempNode is = 0x5555f8d9d680, preSegmentId = 5, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d560
[insertChildNode] [1186]: childNode = 0x5555f8d9d560
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 90.060000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.571844
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.265988
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 253.999861
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.265988
[coordinateSystemRotates] [208]: dY = 253.999861
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.265970
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.003064
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -253.983009
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [220]: coordinate system rotated X = -2.659833
[coordinateSystemRotates] [221]: coordinate system rotated Y = -253.986073
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -265.642010, accumulateXY.distanceY = -250.924311
[calcDestination] [78]: destinationCoord latitude = 40.355764  destinationCoord longitude = 116.812151
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 40.355764, longitude = 116.812151
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d680
[findNodeById] [885]: result = 0x5555f8d9d680
[findNodeById] [885]: result = 0x5555f8d9d680
[insertNode] [1290]: tempNode is = 0x5555f8d9d680, preSegmentId = 6, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cc00
[insertChildNode] [1186]: childNode = 0x5555f8d9cc00
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.020000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000349
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 253.999985
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.088663
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 253.999985
[coordinateSystemRotates] [208]: dY = 0.088663
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983133
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.001021
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.088657
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.984154
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.837148
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -516.966331, accumulateXY.distanceY = 5.898910
[calcDestination] [78]: destinationCoord latitude = 40.353506  destinationCoord longitude = 116.815179
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 40.353506, longitude = 116.815179
[insertNode] [1242]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d680
[findNodeById] [885]: result = 0x5555f8d9d680
[findNodeById] [885]: result = 0x5555f8d9d680
[insertNode] [1290]: tempNode is = 0x5555f8d9d680, preSegmentId = 7, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d020
[insertChildNode] [1186]: childNode = 0x5555f8d9d020
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = -90.050000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.571669
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.221657
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -253.999903
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.221657
[coordinateSystemRotates] [208]: dY = -253.999903
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.221642
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.002553
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 253.983052
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.147446
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 253.980498
[coordinateSystemRotates] [220]: coordinate system rotated X = 3.147446
[coordinateSystemRotates] [221]: coordinate system rotated Y = 253.980498
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -259.834730, accumulateXY.distanceY = 257.042260
[calcDestination] [78]: destinationCoord latitude = 40.355816  destinationCoord longitude = 116.818139
[insertNode] [1312]: childNode's preSegmentId = 7
[displayNodeCoordinate] [139]: 7's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 7's endCoordinate: latitude = 40.355816, longitude = 116.818139
[insertNode] [1242]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9cc00
[findNodeById] [885]: result = 0x5555f8d9cc00
[findNodeById] [885]: result = 0x5555f8d9cc00
[findNodeById] [885]: result = 0x5555f8d9cc00
[insertNode] [1290]: tempNode is = 0x5555f8d9cc00, preSegmentId = 8, prevSegmentId = 6, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d840
[insertChildNode] [1186]: childNode = 0x5555f8d9d840
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 103.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 102.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.017977
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 102.999998
[coordinateSystemRotates] [208]: dY = 0.017977
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -102.993573
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000201
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.150497
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.017976
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -102.993774
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.132521
[coordinateSystemRotates] [220]: coordinate system rotated X = -102.993774
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.132521
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -619.960104, accumulateXY.distanceY = 7.031431
[calcDestination] [78]: destinationCoord latitude = 40.352581  destinationCoord longitude = 116.815192
[insertNode] [1312]: childNode's preSegmentId = 8
[displayNodeCoordinate] [139]: 8's startCoordinate: latitude = 40.353506, longitude = 116.815179
[displayNodeCoordinate] [140]: 8's endCoordinate: latitude = 40.352581, longitude = 116.815192
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[getMPP] [573]: isMPP = 1
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9ce20
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 270.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -128189242
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 48.244312
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[getMPP] [573]: isMPP = 1
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9ce20
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 2, RvSpeed = 60.000000, headingDelta = 90.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -128189242
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 40.747261
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[getMPP] [573]: isMPP = 1
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9ce20
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 2, RvSpeed = 60.000000, headingDelta = 90.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -128189242
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 40.747261
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[getMPP] [573]: isMPP = 1
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9ce20
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 270.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -128189242
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 48.244312
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[getMPP] [573]: isMPP = 1
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9ce20
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 2, RvSpeed = 60.000000, headingDelta = 30.000000
[calcRelativeDirection] [321]: realativeDirection = 6
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 6, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -128189242
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 6
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 40.747261
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[getMPP] [573]: isMPP = 1
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9ce20
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 2, RvSpeed = 0.000000, headingDelta = 90.000000
[calcRelativeDirection] [321]: realativeDirection = 1
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 1, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -128189242
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 1
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 40.747261
[       OK ] PsdLocationTest.treeWithMultiLayer (0 ms)
[ RUN      ] PsdLocationTest.RelativePositionAndRelativeDirection
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9d450
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d450
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9ce20
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d680
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d560
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d560
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d560, Node->ParentNode = 0x5555f8d9d680
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cc00
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d840
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d840
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d840, Node->ParentNode = 0x5555f8d9cc00
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cc00
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cc00, Node->ParentNode = 0x5555f8d9d680
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d020
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d020
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d020, Node->ParentNode = 0x5555f8d9d680
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d680
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d680, Node->ParentNode = 0x5555f8d9ce20
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9ce20
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9ce20, Node->ParentNode = 0x5555f8d9cf30
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = 0x5555f8d9d450
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d450
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d450, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9d450 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 0.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.244312
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 0.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 30.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 330.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 270.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = -10.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 370.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 180.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 100.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 2, RvSpeed = 60.000000, headingDelta = 30.000000
[calcRelativeDirection] [321]: realativeDirection = 6
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 6, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 6
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 2, RvSpeed = 60.000000, headingDelta = 330.000000
[calcRelativeDirection] [321]: realativeDirection = 6
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 6, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 6
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 2, RvSpeed = 60.000000, headingDelta = -10.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 2, RvSpeed = 60.000000, headingDelta = 370.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 2, RvSpeed = 60.000000, headingDelta = 180.000000
[calcRelativeDirection] [321]: realativeDirection = 9
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 9, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 9
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 2, RvSpeed = 60.000000, headingDelta = 226.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 90.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 48.244312
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 44.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.244312
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 136.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.244312
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 270.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.244312
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 224.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.244312
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357717, RoPos.Long = 116.815133
[coordinateTransform] [47]: dn = 116.903980
[coordinateTransform] [48]: de = -2.846706
[coordinateTransform] [58]: y_ = 4.213521
[coordinateTransform] [59]: x_ = -116.862700
[coordinateTransform] [47]: dn = -136.444429
[coordinateTransform] [48]: de = 0.127625
[coordinateTransform] [58]: y_ = -1.723121
[coordinateTransform] [59]: x_ = 136.433608
[RoMatchSegment] [455]: startPoint.x = -116.862700, startPoint.y = 4.213521
[RoMatchSegment] [456]: endPoint.x = 136.433608, endPoint.y = -1.723121
[RoMatchSegment] [463]: orthogonalDistance = 1.474142
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.534757, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.583425
[RoMatchSegment] [471]: Alpha = 0.012606, Beta = 0.010804
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.080978
[coordinateTransform] [48]: de = 2.038705
[coordinateTransform] [58]: y_ = -2.600798
[coordinateTransform] [59]: x_ = 48.053851
[calcRelativePosition] [335]: x = 48.053851
[calcRelativePosition] [336]: y = -2.600798
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 316.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.244312
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.244312
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 90.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 44.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 136.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357715, RoPos.Long = 116.815083
[coordinateTransform] [47]: dn = 117.126064
[coordinateTransform] [48]: de = 1.400624
[coordinateTransform] [58]: y_ = -0.030922
[coordinateTransform] [59]: x_ = -117.134434
[coordinateTransform] [47]: dn = -136.222347
[coordinateTransform] [48]: de = 4.374954
[coordinateTransform] [58]: y_ = -5.967563
[coordinateTransform] [59]: x_ = 136.161875
[RoMatchSegment] [455]: startPoint.x = -117.134434, startPoint.y = -0.030922
[RoMatchSegment] [456]: endPoint.x = 136.161875, endPoint.y = -5.967563
[RoMatchSegment] [463]: orthogonalDistance = 2.775502
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.571060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.614595
[RoMatchSegment] [471]: Alpha = 0.023697, Beta = 0.020366
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -48.303061
[coordinateTransform] [48]: de = -2.208597
[coordinateTransform] [58]: y_ = 1.643617
[coordinateTransform] [59]: x_ = 48.325585
[calcRelativePosition] [335]: x = 48.325585
[calcRelativePosition] [336]: y = 1.643617
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 60.000000, headingDelta = 316.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 48.474178
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 48.474178
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 316.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 316.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 1, relativePos = 1, RvSpeed = 60.000000, headingDelta = 316.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 1
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[       OK ] PsdLocationTest.RelativePositionAndRelativeDirection (0 ms)
[ RUN      ] PsdLocationTest.calcRvRelevancy
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 2, RvSpeed = 0.000000, headingDelta = 0.000000
[calcRelativeDirection] [321]: realativeDirection = 1
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 1, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -127685669
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 1
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.358516, RoPos.Long = 116.815116
[coordinateTransform] [47]: dn = 28.181804
[coordinateTransform] [48]: de = -1.402597
[coordinateTransform] [58]: y_ = 1.732043
[coordinateTransform] [59]: x_ = -28.163476
[coordinateTransform] [47]: dn = -225.166605
[coordinateTransform] [48]: de = 1.571698
[coordinateTransform] [58]: y_ = -4.204563
[coordinateTransform] [59]: x_ = 225.132832
[RoMatchSegment] [455]: startPoint.x = -28.163476, startPoint.y = 1.732043
[RoMatchSegment] [456]: endPoint.x = 225.132832, endPoint.y = -4.204563
[RoMatchSegment] [463]: orthogonalDistance = 1.071670
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.509374, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.589470
[RoMatchSegment] [471]: Alpha = 0.037989, Beta = 0.004759
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 0
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = 40.641199
[coordinateTransform] [48]: de = 0.594622
[coordinateTransform] [58]: y_ = -0.119346
[coordinateTransform] [59]: x_ = -40.645373
[calcRelativePosition] [335]: x = -40.645373
[calcRelativePosition] [336]: y = -0.119346
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 2
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 2, RvSpeed = 0.000000, headingDelta = 0.000000
[calcRelativeDirection] [321]: realativeDirection = 1
[calcRvRelevancy] [227]: relativePos = 2, RelativeDir = 1, mRoMatchedNode->MapData.mpp = 0
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -127685669
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 40.747261
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 2
[getPsdRoLocation] [670]: RelativeDir = 1
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 40.747261
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 0.000000, headingDelta = 0.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -127685669
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 0
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 0.000000, headingDelta = 0.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 0
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = -127685669
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 0.000000, headingDelta = 180.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 1
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 0.000000, headingDelta = 180.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 2
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 0.000000, headingDelta = 30.000000
[calcRelativeDirection] [321]: realativeDirection = 3
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 3, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 2
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 3
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 0.000000, headingDelta = 180.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357890, RoPos.Long = 116.815114
[coordinateTransform] [47]: dn = 97.693798
[coordinateTransform] [48]: de = -1.232717
[coordinateTransform] [58]: y_ = 2.375009
[coordinateTransform] [59]: x_ = -97.672704
[coordinateTransform] [47]: dn = -155.654611
[coordinateTransform] [48]: de = 1.741606
[coordinateTransform] [58]: y_ = -3.561624
[coordinateTransform] [59]: x_ = 155.623604
[RoMatchSegment] [455]: startPoint.x = -97.672704, startPoint.y = 2.375009
[RoMatchSegment] [456]: endPoint.x = 155.623604, endPoint.y = -3.561624
[RoMatchSegment] [463]: orthogonalDistance = 0.085781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.546485, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = 1.593678
[RoMatchSegment] [471]: Alpha = 0.000878, Beta = 0.000551
[RoMatchSegment] [479]: current tree Id = 3
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 3
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9cf30
[getMPP] [573]: isMPP = 1
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -28.870795
[coordinateTransform] [48]: de = 0.424730
[coordinateTransform] [58]: y_ = -0.762300
[coordinateTransform] [59]: x_ = 28.863855
[calcRelativePosition] [335]: x = 28.863855
[calcRelativePosition] [336]: y = -0.762300
[calcRelativePosition] [337]: accumulateBranchAngle = 0.000000
[calcRelativePosition] [370]: RelativePosition = 1
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 1, RvSpeed = 0.000000, headingDelta = 180.000000
[calcRelativeDirection] [321]: realativeDirection = 2
[calcRvRelevancy] [227]: relativePos = 1, RelativeDir = 2, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 3, curSegmentId = 3, structSeparate = 3
[calcRvRelevancy] [261]: RvRelevancy = 1
[calcDistanceToEvent] [221]: dis2Event = 28.946175
[getPsdRoLocation] [667]: MPP = 1
[getPsdRoLocation] [668]: roadSegClass = 3
[getPsdRoLocation] [669]: relativePos = 1
[getPsdRoLocation] [670]: RelativeDir = 2
[getPsdRoLocation] [671]: RvRelevancy = 1
[getPsdRoLocation] [672]: dis2Event = 28.946175
[       OK ] PsdLocationTest.calcRvRelevancy (0 ms)
[ RUN      ] PsdLocationTest.calcDistanceToEvent
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[TestBody] [3187]: MapData_X.preSegmentId = 3
[TestBody] [3187]: MapData_X.preSegmentId = 2
[TestBody] [3187]: MapData_X.preSegmentId = 10
[TestBody] [3187]: MapData_X.preSegmentId = 4
[TestBody] [3187]: MapData_X.preSegmentId = 5
[TestBody] [3187]: MapData_X.preSegmentId = 6
[TestBody] [3187]: MapData_X.preSegmentId = 7
[TestBody] [3187]: MapData_X.preSegmentId = 8
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9ce20
[insertParentNode] [1204]: parentNode = 0x5555f8d9ce20
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -176.000000, BranchAngle = -0.370000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.006458
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -175.996330
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 1.136551
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.330000, accumulateBranchAngleRad = 6.271492
[coordinateSystemRotates] [207]: dX = -175.996330
[coordinateSystemRotates] [208]: dY = 1.136551
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -175.984297
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.013290
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.058002
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.136473
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -175.971007
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.194475
[coordinateSystemRotates] [220]: coordinate system rotated X = -175.971007
[coordinateSystemRotates] [221]: coordinate system rotated Y = 3.194475
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -106.975725, accumulateXY.distanceY = 2.387628
[calcDestination] [78]: destinationCoord latitude = 40.357189  destinationCoord longitude = 116.815137
[displayNodeCoordinate] [139]: 2's startCoordinate: latitude = 40.357189, longitude = 116.815137
[displayNodeCoordinate] [140]: 2's endCoordinate: latitude = 40.358770, longitude = 116.815099
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 2, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 10's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d680
[insertRootNode] [1223]: rootNode = 0x5555f8d9d680
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -200.000000, BranchAngle = -0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -199.999997
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.034907
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.700000, accumulateBranchAngleRad = 6.277949
[coordinateSystemRotates] [207]: dX = -199.999997
[coordinateSystemRotates] [208]: dY = 0.034907
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999986
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.005236
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -199.997255
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000183
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.047193
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.034906
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -199.997073
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.082099
[coordinateSystemRotates] [220]: coordinate system rotated X = -199.997073
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.082099
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -306.972797, accumulateXY.distanceY = 3.469727
[calcDestination] [78]: destinationCoord latitude = 40.355392  destinationCoord longitude = 116.815150
[displayNodeCoordinate] [139]: 10's startCoordinate: latitude = 40.355392, longitude = 116.815150
[displayNodeCoordinate] [140]: 10's endCoordinate: latitude = 40.357189, longitude = 116.815137
[insertNode] [1290]: tempNode is = 0x5555f8d9d680, preSegmentId = 10, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1317]: some nodes are already in tree
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9cf30
[findNodeById] [885]: result = 0x5555f8d9cf30
[insertNode] [1290]: tempNode is = 0x5555f8d9cf30, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d020
[insertChildNode] [1186]: childNode = 0x5555f8d9d020
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 78.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 77.999999
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.013614
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 77.999999
[coordinateSystemRotates] [208]: dY = 0.013614
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -77.994666
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000159
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.912088
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.013613
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [220]: coordinate system rotated X = -77.994825
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.898476
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -262.982177, accumulateXY.distanceY = 3.061762
[calcDestination] [78]: destinationCoord latitude = 40.355788  destinationCoord longitude = 116.815145
[insertNode] [1312]: childNode's preSegmentId = 4
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.356488, longitude = 116.815135
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355788, longitude = 116.815145
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d020
[findNodeById] [885]: result = 0x5555f8d9d020
[findNodeById] [885]: result = 0x5555f8d9d020
[insertNode] [1290]: tempNode is = 0x5555f8d9d020, preSegmentId = 5, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cc00
[insertChildNode] [1186]: childNode = 0x5555f8d9cc00
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 90.060000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.571844
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.265988
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 253.999861
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.265988
[coordinateSystemRotates] [208]: dY = 253.999861
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.265970
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.003064
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -253.983009
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [220]: coordinate system rotated X = -2.659833
[coordinateSystemRotates] [221]: coordinate system rotated Y = -253.986073
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -265.642010, accumulateXY.distanceY = -250.924311
[calcDestination] [78]: destinationCoord latitude = 40.355764  destinationCoord longitude = 116.812151
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 40.355764, longitude = 116.812151
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d020
[findNodeById] [885]: result = 0x5555f8d9d020
[findNodeById] [885]: result = 0x5555f8d9d020
[insertNode] [1290]: tempNode is = 0x5555f8d9d020, preSegmentId = 6, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d840
[insertChildNode] [1186]: childNode = 0x5555f8d9d840
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.020000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000349
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 253.999985
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.088663
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 253.999985
[coordinateSystemRotates] [208]: dY = 0.088663
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983133
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.001021
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.088657
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.984154
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.837148
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -516.966331, accumulateXY.distanceY = 5.898910
[calcDestination] [78]: destinationCoord latitude = 40.353506  destinationCoord longitude = 116.815179
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 40.353506, longitude = 116.815179
[insertNode] [1242]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d020
[findNodeById] [885]: result = 0x5555f8d9d020
[findNodeById] [885]: result = 0x5555f8d9d020
[insertNode] [1290]: tempNode is = 0x5555f8d9d020, preSegmentId = 7, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d560
[insertChildNode] [1186]: childNode = 0x5555f8d9d560
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = -90.050000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.571669
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.221657
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -253.999903
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.221657
[coordinateSystemRotates] [208]: dY = -253.999903
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.221642
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.002553
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 253.983052
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.147446
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 253.980498
[coordinateSystemRotates] [220]: coordinate system rotated X = 3.147446
[coordinateSystemRotates] [221]: coordinate system rotated Y = 253.980498
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -259.834730, accumulateXY.distanceY = 257.042260
[calcDestination] [78]: destinationCoord latitude = 40.355816  destinationCoord longitude = 116.818139
[insertNode] [1312]: childNode's preSegmentId = 7
[displayNodeCoordinate] [139]: 7's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 7's endCoordinate: latitude = 40.355816, longitude = 116.818139
[insertNode] [1242]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[insertNode] [1290]: tempNode is = 0x5555f8d9d840, preSegmentId = 8, prevSegmentId = 6, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d410
[insertChildNode] [1186]: childNode = 0x5555f8d9d410
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 103.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 102.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.017977
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 102.999998
[coordinateSystemRotates] [208]: dY = 0.017977
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -102.993573
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000201
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.150497
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.017976
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -102.993774
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.132521
[coordinateSystemRotates] [220]: coordinate system rotated X = -102.993774
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.132521
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -619.960104, accumulateXY.distanceY = 7.031431
[calcDestination] [78]: destinationCoord latitude = 40.352581  destinationCoord longitude = 116.815192
[insertNode] [1312]: childNode's preSegmentId = 8
[displayNodeCoordinate] [139]: 8's startCoordinate: latitude = 40.353506, longitude = 116.815179
[displayNodeCoordinate] [140]: 8's endCoordinate: latitude = 40.352581, longitude = 116.815192
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.361367, RoPos.Long = 116.815071
[coordinateTransform] [47]: dn = -288.397676
[coordinateTransform] [48]: de = 2.419853
[coordinateTransform] [58]: y_ = -5.792048
[coordinateTransform] [59]: x_ = 288.349662
[coordinateTransform] [47]: dn = -541.746087
[coordinateTransform] [48]: de = 5.394023
[coordinateTransform] [58]: y_ = -11.728529
[coordinateTransform] [59]: x_ = 541.645973
[RoMatchSegment] [455]: startPoint.x = 288.349662, startPoint.y = -5.792048
[RoMatchSegment] [456]: endPoint.x = 541.645973, endPoint.y = -11.728529
[RoMatchSegment] [463]: orthogonalDistance = 0.965710
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.590881, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547364
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.592446
[RoMatchSegment] [471]: Alpha = 3.138244, Beta = 0.001783
[coordinateTransform] [47]: dn = -463.929275
[coordinateTransform] [48]: de = 5.618669
[coordinateTransform] [58]: y_ = -11.043214
[coordinateTransform] [59]: x_ = 463.831855
[coordinateTransform] [47]: dn = -288.397676
[coordinateTransform] [48]: de = 2.419853
[coordinateTransform] [58]: y_ = -5.792048
[coordinateTransform] [59]: x_ = 288.349662
[RoMatchSegment] [455]: startPoint.x = 463.831855, startPoint.y = -11.043214
[RoMatchSegment] [456]: endPoint.x = 288.349662, endPoint.y = -5.792048
[RoMatchSegment] [463]: orthogonalDistance = 2.835319
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.594600, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.600712
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.540881, atan2(endPoint.x, endPoint.y) = 1.590881
[RoMatchSegment] [471]: Alpha = 0.006111, Beta = 3.131762
[coordinateTransform] [47]: dn = -663.426886
[coordinateTransform] [48]: de = 6.702238
[coordinateTransform] [58]: y_ = -14.459522
[coordinateTransform] [59]: x_ = 663.303154
[coordinateTransform] [47]: dn = -463.929275
[coordinateTransform] [48]: de = 5.618669
[coordinateTransform] [58]: y_ = -11.043214
[coordinateTransform] [59]: x_ = 463.831855
[RoMatchSegment] [455]: startPoint.x = 663.303154, startPoint.y = -14.459522
[RoMatchSegment] [456]: endPoint.x = 463.831855, endPoint.y = -11.043214
[RoMatchSegment] [463]: orthogonalDistance = 3.098796
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.592592, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.587921
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.553671, atan2(endPoint.x, endPoint.y) = 1.594600
[RoMatchSegment] [471]: Alpha = 0.004671, Beta = 3.148272
[coordinateTransform] [47]: dn = -541.746087
[coordinateTransform] [48]: de = 5.394023
[coordinateTransform] [58]: y_ = -11.728529
[coordinateTransform] [59]: x_ = 541.645973
[coordinateTransform] [47]: dn = -619.546130
[coordinateTransform] [48]: de = 6.293719
[coordinateTransform] [58]: y_ = -13.537914
[coordinateTransform] [59]: x_ = 619.430176
[RoMatchSegment] [455]: startPoint.x = 541.645973, startPoint.y = -11.728529
[RoMatchSegment] [456]: endPoint.x = 619.430176, endPoint.y = -13.537914
[RoMatchSegment] [463]: orthogonalDistance = 0.870789
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.592446, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547539
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594054, atan2(endPoint.x, endPoint.y) = 1.592648
[RoMatchSegment] [471]: Alpha = 3.139985, Beta = 0.001405
[coordinateTransform] [47]: dn = -619.546130
[coordinateTransform] [48]: de = 6.293719
[coordinateTransform] [58]: y_ = -13.537914
[coordinateTransform] [59]: x_ = 619.430176
[coordinateTransform] [47]: dn = -622.203411
[coordinateTransform] [48]: de = -248.037513
[coordinateTransform] [58]: y_ = 240.744857
[coordinateTransform] [59]: x_ = 625.061282
[RoMatchSegment] [455]: startPoint.x = 619.430176, startPoint.y = -13.537914
[RoMatchSegment] [456]: endPoint.x = 625.061282, endPoint.y = 240.744857
[RoMatchSegment] [463]: orthogonalDistance = 619.578071
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.592648, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -3.119451
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 0.022141, atan2(endPoint.x, endPoint.y) = 1.203153
[RoMatchSegment] [471]: Alpha = 4.712099, Beta = 1.181012
[coordinateTransform] [47]: dn = -619.546130
[coordinateTransform] [48]: de = 6.293719
[coordinateTransform] [58]: y_ = -13.537914
[coordinateTransform] [59]: x_ = 619.430176
[coordinateTransform] [47]: dn = -872.895926
[coordinateTransform] [48]: de = 9.134723
[coordinateTransform] [58]: y_ = -19.341254
[coordinateTransform] [59]: x_ = 872.729429
[RoMatchSegment] [455]: startPoint.x = 619.430176, startPoint.y = -13.537914
[RoMatchSegment] [456]: endPoint.x = 872.729429, endPoint.y = -19.341254
[RoMatchSegment] [463]: orthogonalDistance = 0.653681
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.592648, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547889
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.593703, atan2(endPoint.x, endPoint.y) = 1.592954
[RoMatchSegment] [471]: Alpha = 3.140538, Beta = 0.000749
[coordinateTransform] [47]: dn = -619.546130
[coordinateTransform] [48]: de = 6.293719
[coordinateTransform] [58]: y_ = -13.537914
[coordinateTransform] [59]: x_ = 619.430176
[coordinateTransform] [47]: dn = -616.411060
[coordinateTransform] [48]: de = 260.619370
[coordinateTransform] [58]: y_ = -267.809516
[coordinateTransform] [59]: x_ = 613.321379
[RoMatchSegment] [455]: startPoint.x = 619.430176, startPoint.y = -13.537914
[RoMatchSegment] [456]: endPoint.x = 613.321379, endPoint.y = -267.809516
[RoMatchSegment] [463]: orthogonalDistance = 619.576641
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.592648, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 0.024020
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -3.117573, atan2(endPoint.x, endPoint.y) = 1.982497
[RoMatchSegment] [471]: Alpha = 1.568628, Beta = 5.100069
[coordinateTransform] [47]: dn = -872.895926
[coordinateTransform] [48]: de = 9.134723
[coordinateTransform] [58]: y_ = -19.341254
[coordinateTransform] [59]: x_ = 872.729429
[coordinateTransform] [47]: dn = -975.632431
[coordinateTransform] [48]: de = 10.268783
[coordinateTransform] [58]: y_ = -21.676580
[coordinateTransform] [59]: x_ = 975.445649
[RoMatchSegment] [455]: startPoint.x = 872.729429, startPoint.y = -19.341254
[RoMatchSegment] [456]: endPoint.x = 975.445649, endPoint.y = -21.676580
[RoMatchSegment] [463]: orthogonalDistance = 0.500738
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.592954, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.548065
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.593528, atan2(endPoint.x, endPoint.y) = 1.593015
[RoMatchSegment] [471]: Alpha = 3.141019, Beta = 0.000513
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 0
[getPsdRoLocation] [669]: relativePos = 0
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 0.000000
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.359671, RoPos.Long = 116.815067
[coordinateTransform] [47]: dn = -100.071176
[coordinateTransform] [48]: de = 2.759690
[coordinateTransform] [58]: y_ = -3.929677
[coordinateTransform] [59]: x_ = 100.032064
[coordinateTransform] [47]: dn = -353.419587
[coordinateTransform] [48]: de = 5.733934
[coordinateTransform] [58]: y_ = -9.866233
[coordinateTransform] [59]: x_ = 353.328374
[RoMatchSegment] [455]: startPoint.x = 100.032064, startPoint.y = -3.929677
[RoMatchSegment] [456]: endPoint.x = 353.328374, endPoint.y = -9.866233
[RoMatchSegment] [463]: orthogonalDistance = 1.584771
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.610060, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594229, atan2(endPoint.x, endPoint.y) = 1.598713
[RoMatchSegment] [471]: Alpha = 3.157424, Beta = 0.004484
[coordinateTransform] [47]: dn = -275.602776
[coordinateTransform] [48]: de = 5.958586
[coordinateTransform] [58]: y_ = -9.180923
[coordinateTransform] [59]: x_ = 275.514256
[coordinateTransform] [47]: dn = -100.071176
[coordinateTransform] [48]: de = 2.759690
[coordinateTransform] [58]: y_ = -3.929677
[coordinateTransform] [59]: x_ = 100.032064
[RoMatchSegment] [455]: startPoint.x = 275.514256, startPoint.y = -9.180923
[RoMatchSegment] [456]: endPoint.x = 100.032064, endPoint.y = -3.929677
[RoMatchSegment] [463]: orthogonalDistance = 0.935832
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.604107, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.600712
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.540881, atan2(endPoint.x, endPoint.y) = 1.610060
[RoMatchSegment] [471]: Alpha = 0.003395, Beta = 3.150941
[coordinateTransform] [47]: dn = -475.100386
[coordinateTransform] [48]: de = 7.042183
[coordinateTransform] [58]: y_ = -12.597259
[coordinateTransform] [59]: x_ = 474.985556
[coordinateTransform] [47]: dn = -275.602776
[coordinateTransform] [48]: de = 5.958586
[coordinateTransform] [58]: y_ = -9.180923
[coordinateTransform] [59]: x_ = 275.514256
[RoMatchSegment] [455]: startPoint.x = 474.985556, startPoint.y = -12.597259
[RoMatchSegment] [456]: endPoint.x = 275.514256, endPoint.y = -9.180923
[RoMatchSegment] [463]: orthogonalDistance = 4.461549
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.597311, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.587922
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.553671, atan2(endPoint.x, endPoint.y) = 1.604107
[RoMatchSegment] [471]: Alpha = 0.009390, Beta = 3.157778
[coordinateTransform] [47]: dn = -353.419587
[coordinateTransform] [48]: de = 5.733934
[coordinateTransform] [58]: y_ = -9.866233
[coordinateTransform] [59]: x_ = 353.328374
[coordinateTransform] [47]: dn = -431.219631
[coordinateTransform] [48]: de = 6.633653
[coordinateTransform] [58]: y_ = -11.675641
[coordinateTransform] [59]: x_ = 431.112578
[RoMatchSegment] [455]: startPoint.x = 353.328374, startPoint.y = -9.866233
[RoMatchSegment] [456]: endPoint.x = 431.112578, endPoint.y = -11.675641
[RoMatchSegment] [463]: orthogonalDistance = 1.646701
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.598713, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547539
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594054, atan2(endPoint.x, endPoint.y) = 1.597872
[RoMatchSegment] [471]: Alpha = 3.146251, Beta = 0.003818
[coordinateTransform] [47]: dn = -431.219631
[coordinateTransform] [48]: de = 6.633653
[coordinateTransform] [58]: y_ = -11.675641
[coordinateTransform] [59]: x_ = 431.112578
[coordinateTransform] [47]: dn = -433.876900
[coordinateTransform] [48]: de = -247.703953
[coordinateTransform] [58]: y_ = 242.613504
[coordinateTransform] [59]: x_ = 436.743746
[RoMatchSegment] [455]: startPoint.x = 431.112578, startPoint.y = -11.675641
[RoMatchSegment] [456]: endPoint.x = 436.743746, endPoint.y = 242.613504
[RoMatchSegment] [463]: orthogonalDistance = 431.265401
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.597872, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -3.119452
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 0.022141, atan2(endPoint.x, endPoint.y) = 1.063736
[RoMatchSegment] [471]: Alpha = 4.717324, Beta = 1.041595
[coordinateTransform] [47]: dn = -431.219631
[coordinateTransform] [48]: de = 6.633653
[coordinateTransform] [58]: y_ = -11.675641
[coordinateTransform] [59]: x_ = 431.112578
[coordinateTransform] [47]: dn = -684.569428
[coordinateTransform] [48]: de = 9.474728
[coordinateTransform] [58]: y_ = -17.479052
[coordinateTransform] [59]: x_ = 684.411831
[RoMatchSegment] [455]: startPoint.x = 431.112578, startPoint.y = -11.675641
[RoMatchSegment] [456]: endPoint.x = 684.411831, endPoint.y = -17.479052
[RoMatchSegment] [463]: orthogonalDistance = 1.797826
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.597872, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547889
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.593704, atan2(endPoint.x, endPoint.y) = 1.596330
[RoMatchSegment] [471]: Alpha = 3.145761, Beta = 0.002626
[coordinateTransform] [47]: dn = -431.219631
[coordinateTransform] [48]: de = 6.633653
[coordinateTransform] [58]: y_ = -11.675641
[coordinateTransform] [59]: x_ = 431.112578
[coordinateTransform] [47]: dn = -428.084572
[coordinateTransform] [48]: de = 260.965677
[coordinateTransform] [58]: y_ = -265.953616
[coordinateTransform] [59]: x_ = 425.003718
[RoMatchSegment] [455]: startPoint.x = 431.112578, startPoint.y = -11.675641
[RoMatchSegment] [456]: endPoint.x = 425.003718, endPoint.y = -265.953616
[RoMatchSegment] [463]: orthogonalDistance = 431.268638
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.597872, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 0.024020
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -3.117573, atan2(endPoint.x, endPoint.y) = 2.129948
[RoMatchSegment] [471]: Alpha = 1.573853, Beta = 5.247520
[coordinateTransform] [47]: dn = -684.569428
[coordinateTransform] [48]: de = 9.474728
[coordinateTransform] [58]: y_ = -17.479052
[coordinateTransform] [59]: x_ = 684.411831
[coordinateTransform] [47]: dn = -787.305933
[coordinateTransform] [48]: de = 10.608817
[coordinateTransform] [58]: y_ = -19.814406
[coordinateTransform] [59]: x_ = 787.128051
[RoMatchSegment] [455]: startPoint.x = 684.411831, startPoint.y = -17.479052
[RoMatchSegment] [456]: endPoint.x = 787.128051, endPoint.y = -19.814406
[RoMatchSegment] [463]: orthogonalDistance = 1.917779
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 1.596330, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.548064
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.593528, atan2(endPoint.x, endPoint.y) = 1.595964
[RoMatchSegment] [471]: Alpha = 3.144394, Beta = 0.002436
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 0
[getPsdRoLocation] [669]: relativePos = 0
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 0.000000
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.353726, RoPos.Long = 116.815168
[coordinateTransform] [47]: dn = 560.070509
[coordinateTransform] [48]: de = -5.820179
[coordinateTransform] [58]: y_ = 12.368932
[coordinateTransform] [59]: x_ = -559.964159
[coordinateTransform] [47]: dn = 306.722102
[coordinateTransform] [48]: de = -2.845674
[coordinateTransform] [58]: y_ = 6.432115
[coordinateTransform] [59]: x_ = -306.667856
[RoMatchSegment] [455]: startPoint.x = -559.964159, startPoint.y = 12.368932
[RoMatchSegment] [456]: endPoint.x = -306.667856, endPoint.y = 6.432115
[RoMatchSegment] [463]: orthogonalDistance = 0.755428
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.548711, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547362
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = -1.549825
[RoMatchSegment] [471]: Alpha = 0.001349, Beta = 3.144055
[coordinateTransform] [47]: dn = 384.538914
[coordinateTransform] [48]: de = -2.621002
[coordinateTransform] [58]: y_ = 7.117405
[coordinateTransform] [59]: x_ = -384.481974
[coordinateTransform] [47]: dn = 560.070509
[coordinateTransform] [48]: de = -5.820179
[coordinateTransform] [58]: y_ = 12.368932
[coordinateTransform] [59]: x_ = -559.964159
[RoMatchSegment] [455]: startPoint.x = -384.481974, startPoint.y = 7.117405
[RoMatchSegment] [456]: endPoint.x = -559.964159, endPoint.y = 12.368932
[RoMatchSegment] [463]: orthogonalDistance = 4.386742
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.552287, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.600714
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.540879, atan2(endPoint.x, endPoint.y) = -1.548711
[RoMatchSegment] [471]: Alpha = 3.153000, Beta = 0.007832
[coordinateTransform] [47]: dn = 185.041304
[coordinateTransform] [48]: de = -1.537310
[coordinateTransform] [58]: y_ = 3.700974
[coordinateTransform] [59]: x_ = -185.010677
[coordinateTransform] [47]: dn = 384.538914
[coordinateTransform] [48]: de = -2.621002
[coordinateTransform] [58]: y_ = 7.117405
[coordinateTransform] [59]: x_ = -384.481974
[RoMatchSegment] [455]: startPoint.x = -185.010677, startPoint.y = 3.700974
[RoMatchSegment] [456]: endPoint.x = -384.481974, endPoint.y = 7.117405
[RoMatchSegment] [463]: orthogonalDistance = 0.532139
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.550795, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.587922
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.553671, atan2(endPoint.x, endPoint.y) = -1.552287
[RoMatchSegment] [471]: Alpha = 3.138717, Beta = 0.001384
[coordinateTransform] [47]: dn = 306.722102
[coordinateTransform] [48]: de = -2.845674
[coordinateTransform] [58]: y_ = 6.432115
[coordinateTransform] [59]: x_ = -306.667856
[coordinateTransform] [47]: dn = 228.922060
[coordinateTransform] [48]: de = -1.945875
[coordinateTransform] [58]: y_ = 4.622629
[coordinateTransform] [59]: x_ = -228.883654
[RoMatchSegment] [455]: startPoint.x = -306.667856, startPoint.y = 6.432115
[RoMatchSegment] [456]: endPoint.x = -228.883654, endPoint.y = 4.622629
[RoMatchSegment] [463]: orthogonalDistance = 0.701681
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.549825, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547538
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594055, atan2(endPoint.x, endPoint.y) = -1.550603
[RoMatchSegment] [471]: Alpha = 0.002288, Beta = 3.144658
[coordinateTransform] [47]: dn = 228.922060
[coordinateTransform] [48]: de = -1.945875
[coordinateTransform] [58]: y_ = 4.622629
[coordinateTransform] [59]: x_ = -228.883654
[coordinateTransform] [47]: dn = 226.264500
[coordinateTransform] [48]: de = -256.305820
[coordinateTransform] [58]: y_ = 258.934107
[coordinateTransform] [59]: x_ = -223.251934
[RoMatchSegment] [455]: startPoint.x = -228.883654, startPoint.y = 4.622629
[RoMatchSegment] [456]: endPoint.x = -223.251934, endPoint.y = 258.934107
[RoMatchSegment] [463]: orthogonalDistance = 228.929896
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.550603, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -3.119451
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 0.022141, atan2(endPoint.x, endPoint.y) = -0.711532
[RoMatchSegment] [471]: Alpha = 1.568849, Beta = 0.733673
[coordinateTransform] [47]: dn = 228.922060
[coordinateTransform] [48]: de = -1.945875
[coordinateTransform] [58]: y_ = 4.622629
[coordinateTransform] [59]: x_ = -228.883654
[coordinateTransform] [47]: dn = -24.427735
[coordinateTransform] [48]: de = 0.895449
[coordinateTransform] [58]: y_ = -1.181032
[coordinateTransform] [59]: x_ = 24.415594
[RoMatchSegment] [455]: startPoint.x = -228.883654, startPoint.y = 4.622629
[RoMatchSegment] [456]: endPoint.x = 24.415594, endPoint.y = -1.181032
[RoMatchSegment] [463]: orthogonalDistance = 0.621452
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.550603, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547888
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.593705, atan2(endPoint.x, endPoint.y) = 1.619131
[RoMatchSegment] [471]: Alpha = 0.002715, Beta = 0.025426
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 6
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9d840
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[getMPP] [573]: isMPP = 1
[findNodeById] [885]: result = 0x5555f8d9cf30
[findNodeById] [885]: result = 0x5555f8d9cf30
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -491.247510
[coordinateTransform] [48]: de = 5.011817
[coordinateTransform] [58]: y_ = -10.755847
[coordinateTransform] [59]: x_ = 491.155318
[calcRelativePosition] [335]: x = 491.155318
[calcRelativePosition] [336]: y = -10.755847
[calcRelativePosition] [337]: accumulateBranchAngle = 179.360000
[calcRelativePosition] [370]: RelativePosition = 0
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 0, RvSpeed = 60.000000, headingDelta = 0.000000
[calcRelativeDirection] [321]: realativeDirection = 0
[calcRvRelevancy] [227]: relativePos = 0, RelativeDir = 0, mRoMatchedNode->MapData.mpp = 1
[calcRvRelevancy] [228]: mRoMatchedSegId = 6, curSegmentId = 3, structSeparate = -175117856
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [208]: tempNodeId is = 6
[calcDistanceToEvent] [213]: ChildsTotalLength = 78.000000, tempNodeId is = 4
[calcDistanceToEvent] [218]: Ro2StartCoordDis = 229.503479, ChildsTotalLength = 78.000000, curRemainLength = 185
[calcDistanceToEvent] [221]: dis2Event = 492.503479
[getPsdRoLocation] [646]: actual distance between RO and HV over the  pPsdValidDistance
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 0
[getPsdRoLocation] [669]: relativePos = 0
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 0.000000
[       OK ] PsdLocationTest.calcDistanceToEvent (0 ms)
[ RUN      ] PsdLocationTest.calcRoDis2Intersection
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9d680
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d680
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9ce20
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d020
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cc00
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cc00
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cc00, Node->ParentNode = 0x5555f8d9d020
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d840
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d410
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d410
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d410, Node->ParentNode = 0x5555f8d9d840
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d840
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d840, Node->ParentNode = 0x5555f8d9d020
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d560
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d560
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d560, Node->ParentNode = 0x5555f8d9d020
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d020
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d020, Node->ParentNode = 0x5555f8d9cf30
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = 0x5555f8d9ce20
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9ce20
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9ce20, Node->ParentNode = 0x5555f8d9d680
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d680
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d680, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9d680 has been cleared
[TestBody] [3345]: MapData_X.preSegmentId = 3
[TestBody] [3345]: MapData_X.preSegmentId = 2
[TestBody] [3345]: MapData_X.preSegmentId = 10
[TestBody] [3345]: MapData_X.preSegmentId = 4
[TestBody] [3345]: MapData_X.preSegmentId = 5
[TestBody] [3345]: MapData_X.preSegmentId = 6
[TestBody] [3345]: MapData_X.preSegmentId = 7
[TestBody] [3345]: MapData_X.preSegmentId = 8
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.815109, latitude = 40.358150, hvHeading = 179.330000
[createNode] [1178]: newNode = 0x5555f8d9ce20
[insertNodeInTree] [1330]: curNode = 0x5555f8d9ce20
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9ce20, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [229]: Length = 185.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 185.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 185.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -184.987351
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.163286
[coordinateSystemRotates] [220]: coordinate system rotated X = -184.987351
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.163286
[calcCurSegmentCoordinate] [598]: disHv2EndAfterRotatingCoord.distanceX = -184.987351, disHv2EndAfterRotatingCoord.distanceY = 2.163286
[calcDestination] [78]: destinationCoord latitude = 40.356488  destinationCoord longitude = 116.815135
[calcCurSegmentCoordinate] [601]: HV's endCoordinate latitude = 40.356488  longitude = 116.815135
[calcStraightXYOffset] [229]: Length = 69.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [231]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -69.000000
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = -69.000000
[coordinateSystemRotates] [208]: dY = 0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 68.995282
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.806847
[coordinateSystemRotates] [220]: coordinate system rotated X = 68.995282
[coordinateSystemRotates] [221]: coordinate system rotated Y = -0.806847
[calcCurSegmentCoordinate] [610]: disHv2StartAfterRotatingCoord.distanceX = 68.995282, disHv2StartAfterRotatingCoord.distanceY = -0.806847
[calcDestination] [78]: destinationCoord latitude = 40.358770  destinationCoord longitude = 116.815099
[calcCurSegmentCoordinate] [613]: HV's startCoordinate latitude = 40.358770  longitude = 116.815099
[calcCurSegmentCoordinate] [616]: fixed for next point accumulateBranchAngleHv2Start = 359.330000
[displayNodeCoordinate] [139]: 3's startCoordinate: latitude = 40.358770, longitude = 116.815099
[displayNodeCoordinate] [140]: 3's endCoordinate: latitude = 40.356488, longitude = 116.815135
[insertNode] [1242]: (*it)->preSegmentId = 3's segIsInTree = 1
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 3, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 2's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertParentNode] [1204]: parentNode = 0x5555f8d9cf30
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -176.000000, BranchAngle = -0.370000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.006458
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -175.996330
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 1.136551
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.330000, accumulateBranchAngleRad = 6.271492
[coordinateSystemRotates] [207]: dX = -175.996330
[coordinateSystemRotates] [208]: dY = 1.136551
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -175.984297
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.013290
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.058002
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 1.136473
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -175.971007
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.194475
[coordinateSystemRotates] [220]: coordinate system rotated X = -175.971007
[coordinateSystemRotates] [221]: coordinate system rotated Y = 3.194475
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -106.975725, accumulateXY.distanceY = 2.387628
[calcDestination] [78]: destinationCoord latitude = 40.357189  destinationCoord longitude = 116.815137
[displayNodeCoordinate] [139]: 2's startCoordinate: latitude = 40.357189, longitude = 116.815137
[displayNodeCoordinate] [140]: 2's endCoordinate: latitude = 40.358770, longitude = 116.815099
[findNodeById] [890]: result = (nil)
[findNodeById] [890]: result = (nil)
[insertNode] [1290]: tempNode is = (nil), preSegmentId = 2, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1323]: goto check the next segment info from vPsdMap
[insertNode] [1242]: (*it)->preSegmentId = 10's segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d020
[insertRootNode] [1223]: rootNode = 0x5555f8d9d020
[calcRootOrParentSegmentCoordinate] [423]: --------------------------Is rootSegment or parentSegment--------------------------
[calcStraightXYOffset] [229]: Length = -200.000000, BranchAngle = -0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = -0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -199.999997
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.034907
[coordinateSystemRotates] [206]: accumulateBranchAngle = 359.700000, accumulateBranchAngleRad = 6.277949
[coordinateSystemRotates] [207]: dX = -199.999997
[coordinateSystemRotates] [208]: dY = 0.034907
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.999986
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.005236
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -199.997255
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000183
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.047193
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.034906
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -199.997073
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.082099
[coordinateSystemRotates] [220]: coordinate system rotated X = -199.997073
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.082099
[calcRootOrParentSegmentCoordinate] [457]: accumulateXY.distanceX = -306.972797, accumulateXY.distanceY = 3.469727
[calcDestination] [78]: destinationCoord latitude = 40.355392  destinationCoord longitude = 116.815150
[displayNodeCoordinate] [139]: 10's startCoordinate: latitude = 40.355392, longitude = 116.815150
[displayNodeCoordinate] [140]: 10's endCoordinate: latitude = 40.357189, longitude = 116.815137
[insertNode] [1290]: tempNode is = 0x5555f8d9d020, preSegmentId = 10, prevSegmentId = 10, segIsInTree = 1
[insertNode] [1317]: some nodes are already in tree
[insertNode] [1242]: (*it)->preSegmentId = 4's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[insertNode] [1290]: tempNode is = 0x5555f8d9ce20, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d560
[insertChildNode] [1186]: childNode = 0x5555f8d9d560
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 78.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 77.999999
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.013614
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.330000, accumulateBranchAngleRad = 3.129899
[coordinateSystemRotates] [207]: dX = 77.999999
[coordinateSystemRotates] [208]: dY = 0.013614
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999932
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011693
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -77.994666
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000159
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.912088
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.013613
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -77.994825
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.898476
[coordinateSystemRotates] [220]: coordinate system rotated X = -77.994825
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.898476
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -262.982177, accumulateXY.distanceY = 3.061762
[calcDestination] [78]: destinationCoord latitude = 40.355788  destinationCoord longitude = 116.815145
[insertNode] [1312]: childNode's preSegmentId = 4
[displayNodeCoordinate] [139]: 4's startCoordinate: latitude = 40.356488, longitude = 116.815135
[displayNodeCoordinate] [140]: 4's endCoordinate: latitude = 40.355788, longitude = 116.815145
[insertNode] [1242]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d560
[findNodeById] [885]: result = 0x5555f8d9d560
[findNodeById] [885]: result = 0x5555f8d9d560
[insertNode] [1290]: tempNode is = 0x5555f8d9d560, preSegmentId = 5, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d840
[insertChildNode] [1186]: childNode = 0x5555f8d9d840
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 90.060000
[calcStraightXYOffset] [231]: BranchAngleRad = 1.571844
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.265988
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 253.999861
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.265988
[coordinateSystemRotates] [208]: dY = 253.999861
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.265970
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.003064
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -253.983009
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -2.659833
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -253.986073
[coordinateSystemRotates] [220]: coordinate system rotated X = -2.659833
[coordinateSystemRotates] [221]: coordinate system rotated Y = -253.986073
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -265.642010, accumulateXY.distanceY = -250.924311
[calcDestination] [78]: destinationCoord latitude = 40.355764  destinationCoord longitude = 116.812151
[insertNode] [1312]: childNode's preSegmentId = 5
[displayNodeCoordinate] [139]: 5's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 5's endCoordinate: latitude = 40.355764, longitude = 116.812151
[insertNode] [1242]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d560
[findNodeById] [885]: result = 0x5555f8d9d560
[findNodeById] [885]: result = 0x5555f8d9d560
[insertNode] [1290]: tempNode is = 0x5555f8d9d560, preSegmentId = 6, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d410
[insertChildNode] [1186]: childNode = 0x5555f8d9d410
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = 0.020000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000349
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 253.999985
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.088663
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = 253.999985
[coordinateSystemRotates] [208]: dY = 0.088663
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -253.983133
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.001021
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 2.925805
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.088657
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -253.984154
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.837148
[coordinateSystemRotates] [220]: coordinate system rotated X = -253.984154
[coordinateSystemRotates] [221]: coordinate system rotated Y = 2.837148
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -516.966331, accumulateXY.distanceY = 5.898910
[calcDestination] [78]: destinationCoord latitude = 40.353506  destinationCoord longitude = 116.815179
[insertNode] [1312]: childNode's preSegmentId = 6
[displayNodeCoordinate] [139]: 6's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 6's endCoordinate: latitude = 40.353506, longitude = 116.815179
[insertNode] [1242]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [885]: result = 0x5555f8d9d560
[findNodeById] [885]: result = 0x5555f8d9d560
[findNodeById] [885]: result = 0x5555f8d9d560
[insertNode] [1290]: tempNode is = 0x5555f8d9d560, preSegmentId = 7, prevSegmentId = 4, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9cc00
[insertChildNode] [1186]: childNode = 0x5555f8d9cc00
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 254.000000, BranchAngle = -90.050000
[calcStraightXYOffset] [231]: BranchAngleRad = -1.571669
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = -0.221657
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = -253.999903
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.340000, accumulateBranchAngleRad = 3.130073
[coordinateSystemRotates] [207]: dX = -0.221657
[coordinateSystemRotates] [208]: dY = -253.999903
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999934
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011519
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.221642
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -2.925804
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.002553
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 253.983052
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.147446
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 253.980498
[coordinateSystemRotates] [220]: coordinate system rotated X = 3.147446
[coordinateSystemRotates] [221]: coordinate system rotated Y = 253.980498
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -259.834730, accumulateXY.distanceY = 257.042260
[calcDestination] [78]: destinationCoord latitude = 40.355816  destinationCoord longitude = 116.818139
[insertNode] [1312]: childNode's preSegmentId = 7
[displayNodeCoordinate] [139]: 7's startCoordinate: latitude = 40.355788, longitude = 116.815145
[displayNodeCoordinate] [140]: 7's endCoordinate: latitude = 40.355816, longitude = 116.818139
[insertNode] [1242]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [890]: result = (nil)
[findNodeById] [885]: result = 0x5555f8d9d410
[findNodeById] [885]: result = 0x5555f8d9d410
[findNodeById] [885]: result = 0x5555f8d9d410
[findNodeById] [885]: result = 0x5555f8d9d410
[insertNode] [1290]: tempNode is = 0x5555f8d9d410, preSegmentId = 8, prevSegmentId = 6, segIsInTree = 0
[createNode] [1178]: newNode = 0x5555f8d9d680
[insertChildNode] [1186]: childNode = 0x5555f8d9d680
[calcChildSegmentCoordinate] [264]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [229]: Length = 103.000000, BranchAngle = 0.010000
[calcStraightXYOffset] [231]: BranchAngleRad = 0.000175
[calcStraightXYOffset] [234]: straight offset X with BranchAngle = 102.999998
[calcStraightXYOffset] [235]: straight offset Y with BranchAngle = 0.017977
[coordinateSystemRotates] [206]: accumulateBranchAngle = 179.360000, accumulateBranchAngleRad = 3.130423
[coordinateSystemRotates] [207]: dX = 102.999998
[coordinateSystemRotates] [208]: dY = 0.017977
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -0.999938
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.011170
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = -102.993573
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = 0.000201
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 1.150497
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -0.017976
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -102.993774
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.132521
[coordinateSystemRotates] [220]: coordinate system rotated X = -102.993774
[coordinateSystemRotates] [221]: coordinate system rotated Y = 1.132521
[calcChildSegmentCoordinate] [288]: accumulateXY.distanceX = -619.960104, accumulateXY.distanceY = 7.031431
[calcDestination] [78]: destinationCoord latitude = 40.352581  destinationCoord longitude = 116.815192
[insertNode] [1312]: childNode's preSegmentId = 8
[displayNodeCoordinate] [139]: 8's startCoordinate: latitude = 40.353506, longitude = 116.815179
[displayNodeCoordinate] [140]: 8's endCoordinate: latitude = 40.352581, longitude = 116.815192
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.355748, RoPos.Long = 116.813700
[coordinateTransform] [47]: dn = 335.543745
[coordinateTransform] [48]: de = 118.885217
[coordinateTransform] [58]: y_ = -114.953428
[coordinateTransform] [59]: x_ = -336.910981
[coordinateTransform] [47]: dn = 82.195288
[coordinateTransform] [48]: de = 121.859634
[coordinateTransform] [58]: y_ = -120.890157
[coordinateTransform] [59]: x_ = -83.614627
[RoMatchSegment] [455]: startPoint.x = -336.910981, startPoint.y = -114.953428
[RoMatchSegment] [456]: endPoint.x = -83.614627, endPoint.y = -120.890157
[RoMatchSegment] [463]: orthogonalDistance = 122.816177
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -1.899609, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547363
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594230, atan2(endPoint.x, endPoint.y) = -2.536487
[RoMatchSegment] [471]: Alpha = 0.352246, Beta = 4.130717
[coordinateTransform] [47]: dn = 160.012097
[coordinateTransform] [48]: de = 122.084299
[coordinateTransform] [58]: y_ = -120.204860
[coordinateTransform] [59]: x_ = -161.428742
[coordinateTransform] [47]: dn = 335.543745
[coordinateTransform] [48]: de = 118.885217
[coordinateTransform] [58]: y_ = -114.953428
[coordinateTransform] [59]: x_ = -336.910981
[RoMatchSegment] [455]: startPoint.x = -161.428742, startPoint.y = -120.204860
[RoMatchSegment] [456]: endPoint.x = -336.910981, endPoint.y = -114.953428
[RoMatchSegment] [463]: orthogonalDistance = 124.979781
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -2.210852, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.600713
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.540880, atan2(endPoint.x, endPoint.y) = -1.899609
[RoMatchSegment] [471]: Alpha = 3.811566, Beta = 0.358729
[coordinateTransform] [47]: dn = -39.485531
[coordinateTransform] [48]: de = 123.167958
[coordinateTransform] [58]: y_ = -123.621259
[coordinateTransform] [59]: x_ = 38.042574
[coordinateTransform] [47]: dn = 160.012097
[coordinateTransform] [48]: de = 122.084299
[coordinateTransform] [58]: y_ = -120.204860
[coordinateTransform] [59]: x_ = -161.428742
[RoMatchSegment] [455]: startPoint.x = 38.042574, startPoint.y = -123.621259
[RoMatchSegment] [456]: endPoint.x = -161.428742, endPoint.y = -120.204860
[RoMatchSegment] [463]: orthogonalDistance = 122.951661
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = 2.843055, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = 1.587922
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = -1.553671, atan2(endPoint.x, endPoint.y) = -2.210852
[RoMatchSegment] [471]: Alpha = 1.255133, Beta = 0.657182
[coordinateTransform] [47]: dn = 82.195288
[coordinateTransform] [48]: de = 121.859634
[coordinateTransform] [58]: y_ = -120.890157
[coordinateTransform] [59]: x_ = -83.614627
[coordinateTransform] [47]: dn = 4.395231
[coordinateTransform] [48]: de = 122.759405
[coordinateTransform] [58]: y_ = -122.699617
[coordinateTransform] [59]: x_ = -5.830410
[RoMatchSegment] [455]: startPoint.x = -83.614627, startPoint.y = -120.890157
[RoMatchSegment] [456]: endPoint.x = -5.830410, endPoint.y = -122.699617
[RoMatchSegment] [463]: orthogonalDistance = 122.802024
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -2.536487, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -1.547538
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 1.594055, atan2(endPoint.x, endPoint.y) = -3.094111
[RoMatchSegment] [471]: Alpha = 0.988949, Beta = 4.688165
[coordinateTransform] [47]: dn = 4.395231
[coordinateTransform] [48]: de = 122.759405
[coordinateTransform] [58]: y_ = -122.699617
[coordinateTransform] [59]: x_ = -5.830410
[coordinateTransform] [47]: dn = 1.741891
[coordinateTransform] [48]: de = -131.592942
[coordinateTransform] [58]: y_ = 131.604314
[coordinateTransform] [59]: x_ = -0.202998
[RoMatchSegment] [455]: startPoint.x = -5.830410, startPoint.y = -122.699617
[RoMatchSegment] [456]: endPoint.x = -0.202998, endPoint.y = 131.604314
[RoMatchSegment] [463]: orthogonalDistance = 3.114466
[RoMatchSegment] [469]: Alpha: atan2(startPoint.x, startPoint.y) = -3.094111, atan2(startPoint.x - endPoint.x, startPoint.y - endPoint.y) = -3.119468
[RoMatchSegment] [470]: Beta: atan2(endPoint.x - startPoint.x, endPoint.y - startPoint.y) = 0.022125, atan2(endPoint.x, endPoint.y) = -0.001542
[RoMatchSegment] [471]: Alpha = 0.025357, Beta = 0.023668
[RoMatchSegment] [479]: current tree Id = 10
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[RoMatchSegment] [483]: mIsMatch = 1
[RoMatchSegment] [484]: mRoMatchedSegId = 5
[RoMatchSegment] [485]: mRoMatchedNode = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[findNodeById] [885]: result = 0x5555f8d9d840
[getMPP] [573]: isMPP = 0
[findNodeById] [885]: result = 0x5555f8d9ce20
[findNodeById] [885]: result = 0x5555f8d9ce20
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9ce20
[calcRoadSegmentClass] [416]: RoadClass = 3
[coordinateTransform] [47]: dn = -266.722636
[coordinateTransform] [48]: de = -119.688980
[coordinateTransform] [58]: y_ = 116.561892
[coordinateTransform] [59]: x_ = 268.103975
[calcRelativePosition] [335]: x = 268.103975
[calcRelativePosition] [336]: y = 116.561892
[calcRelativePosition] [337]: accumulateBranchAngle = 269.400000
[calcRelativePosition] [370]: RelativePosition = 3
[calcRelativeDirection] [269]: roadSegClass = 3, relativePos = 3, RvSpeed = 60.000000, headingDelta = 270.000000
[calcRelativeDirection] [321]: realativeDirection = 7
[calcRvRelevancy] [227]: relativePos = 3, RelativeDir = 7, mRoMatchedNode->MapData.mpp = 0
[calcRvRelevancy] [228]: mRoMatchedSegId = 5, curSegmentId = 3, structSeparate = -1920954650
[calcRvRelevancy] [261]: RvRelevancy = 0
[calcDistanceToEvent] [208]: tempNodeId is = 5
[calcDistanceToEvent] [213]: ChildsTotalLength = 78.000000, tempNodeId is = 4
[calcDistanceToEvent] [218]: Ro2StartCoordDis = 122.666161, ChildsTotalLength = 78.000000, curRemainLength = 185
[calcDistanceToEvent] [221]: dis2Event = 385.666168
[getPsdRoLocation] [646]: actual distance between RO and HV over the  pPsdValidDistance
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 0
[getPsdRoLocation] [669]: relativePos = 0
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 0.000000
[       OK ] PsdLocationTest.calcRoDis2Intersection (0 ms)
[ RUN      ] PsdLocationTest.RoMatchSegment
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9d020
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d020
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9ce20
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d560
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d840
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d840
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d840, Node->ParentNode = 0x5555f8d9d560
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d410
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9d680
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d680
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d680, Node->ParentNode = 0x5555f8d9d410
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d410
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d410, Node->ParentNode = 0x5555f8d9d560
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cc00
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cc00
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cc00, Node->ParentNode = 0x5555f8d9d560
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d560
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d560, Node->ParentNode = 0x5555f8d9ce20
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9ce20
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9ce20, Node->ParentNode = 0x5555f8d9cf30
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = 0x5555f8d9d020
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9d020
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9d020, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9d020 has been cleared
[TestBody] [3394]: MapData_X.preSegmentId = 3
[mapCreate] [1522]: --------------------------mapCreate--------------------------
[mapCreate] [1523]: hv's longitude = 116.812605, latitude = 40.357607, hvHeading = 0.000000
[createNode] [1178]: newNode = 0x5555f8d9cf30
[insertNodeInTree] [1330]: curNode = 0x5555f8d9cf30
[IsCurIdInList] [1537]: curSegmentId is in list = 3
[insertNodeInTree] [1356]: mCount = 1
[insertNodeInTree] [1357]: current tree is = 0x5555f8d9cf30, current tree Id is = 3, curSegmentId is = 3
[calcCurSegmentCoordinate] [583]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [621]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [646]: R = 60.557700
[calcCurSegmentCoordinate] [652]: Ssum = 58.810343
[calcCurSegmentCoordinate] [656]: sampleRotationAngle = 27.821272
[calcCurveXYOffset] [245]: arcR = 60.557700, arcRotationAngle = 27.821272, arcRotationAngleRad = 0.485573, signCurvature = 0
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.115592
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -7.000000
[calcCurveXYOffset] [256]: dX = 28.263188
[calcCurveXYOffset] [257]: dY = -7.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 0.000000, accumulateBranchAngleRad = 0.000000
[coordinateSystemRotates] [207]: dX = 28.263188
[coordinateSystemRotates] [208]: dY = -7.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 28.263188
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = -7.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 28.263188
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -7.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 28.263188
[coordinateSystemRotates] [221]: coordinate system rotated Y = -7.000000
[calcCurSegmentCoordinate] [664]: disHv2EndAfterRotatingCoord.distanceX = 28.263188, disHv2EndAfterRotatingCoord.distanceY = -7.000000
[calcDestination] [78]: destinationCoord latitude = 40.357861  destinationCoord longitude = 116.812522
[calcCurSegmentCoordinate] [670]: accumulateBranchAngleHv2End = -27.821272
[calcCurSegmentCoordinate] [673]: fixed accumulateBranchAngleHv2End = -27.821272
[calcCurSegmentCoordinate] [646]: R = 60.557700
[calcCurSegmentCoordinate] [679]: finalRemainLength = 51.189657
[calcCurveXYOffset] [245]: arcR = 60.557700, arcRotationAngle = 48.432343, arcRotationAngleRad = 0.845304, signCurvature = 93
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = -0.336496
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = -20.377425
[calcCurveXYOffset] [256]: dX = 45.307621
[calcCurveXYOffset] [257]: dY = 20.377425
[coordinateSystemRotates] [206]: accumulateBranchAngle = -27.821272, accumulateBranchAngleRad = -0.485573
[coordinateSystemRotates] [207]: dX = 45.307621
[coordinateSystemRotates] [208]: dY = 20.377425
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = 0.884408
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = -0.466715
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 40.070412
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -9.510450
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -21.145747
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 18.021953
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 49.580862
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -3.123794
[coordinateSystemRotates] [220]: coordinate system rotated X = 49.580862
[coordinateSystemRotates] [221]: coordinate system rotated Y = -3.123794
[calcCurSegmentCoordinate] [688]: disHv2EndAfterRotatingCoord.distanceX = 77.844050, disHv2EndAfterRotatingCoord.distanceY = -10.123794
[calcDestination] [78]: destinationCoord latitude = 40.358306  destinationCoord longitude = 116.812486
[calcCurSegmentCoordinate] [690]: HV's endCoordinate latitude = 40.358306  longitude = 116.812486
[calcCurSegmentCoordinate] [694]: accumulateBranchAngleHv2End = 20.611071
[calcCurSegmentCoordinate] [696]: fixed accumulateBranchAngleHv2End = 20.611071
[calcCurSegmentCoordinate] [741]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [744]: accumulateBranchAngleHv2Start = 180.000000
[calcCurSegmentCoordinate] [746]: fixed accumulateBranchAngleHv2Start = 180.000000
[calcCurSegmentCoordinate] [756]: R = 60.557700
[calcCurSegmentCoordinate] [784]: finalRemainLength = 0.000000
[calcCurveXYOffset] [245]: arcR = -60.557700, arcRotationAngle = 0.000000, arcRotationAngleRad = 0.000000, signCurvature = 232
[calcCurveXYOffset] [251]: fixed arcR = 60.557700
[calcCurveXYOffset] [254]: cos(arcRotationAngleRad) - 1 = 0.000000
[calcCurveXYOffset] [255]: arcR * (cos(arcRotationAngleRad) - 1) = 0.000000
[calcCurveXYOffset] [256]: dX = -0.000000
[calcCurveXYOffset] [257]: dY = -0.000000
[coordinateSystemRotates] [206]: accumulateBranchAngle = 180.000000, accumulateBranchAngleRad = 3.141593
[coordinateSystemRotates] [207]: dX = -0.000000
[coordinateSystemRotates] [208]: dY = -0.000000
[coordinateSystemRotates] [209]: cos(accumulateBranchAngleRad) = -1.000000
[coordinateSystemRotates] [210]: sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [211]: distanceX * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [212]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [213]: distanceX * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [214]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [218]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [219]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [220]: coordinate system rotated X = 0.000000
[coordinateSystemRotates] [221]: coordinate system rotated Y = 0.000000
[calcCurSegmentCoordinate] [792]: disHv2StartAfterRotatingCoord.distanceX = 0.000000, disHv2StartAfterRotatingCoord.distanceY = 0.000000
[calcDestination] [78]: destinationCoord latitude = 40.357607  destinationCoord longitude = 116.812605
[calcCurSegmentCoordinate] [794]: HV's startCoordinate latitude = 40.357607  longitude = 116.812605
[calcCurSegmentCoordinate] [798]: accumulateBranchAngleHv2Start = 180.000000
[calcCurSegmentCoordinate] [800]: fixed accumulateBranchAngleHv2Start = 180.000000
[displayNodeCoordinate] [144]: 3's startCoordinate: latitude = 40.357607, longitude = 116.812605
[displayNodeCoordinate] [147]: 3's SampleCoord: latitude = 40.357861, longitude = 116.812522
[displayNodeCoordinate] [149]: 3's endCoordinate: latitude = 40.358306, longitude = 116.812486
[getPsdRoLocation] [615]: Enter
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 3
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdRoLocation] [617]: PsdAvailable = 1
[getPsdRoLocation] [619]: RoPos.lat = 40.357946, RoPos.Long = 116.812686
[coordinateTransform] [47]: dn = -37.643077
[coordinateTransform] [48]: de = -6.880651
[coordinateTransform] [58]: y_ = -6.880651
[coordinateTransform] [59]: x_ = -37.643077
[coordinateTransform] [47]: dn = -9.450475
[coordinateTransform] [48]: de = -13.890461
[coordinateTransform] [58]: y_ = -13.890461
[coordinateTransform] [59]: x_ = -9.450475
[RoMatchSegment] [520]: Point_1.x = -37.643077, Point_1.y = -6.880651
[RoMatchSegment] [521]: Point_2.x = -9.450475, Point_2.y = -13.890461
[RoMatchSegment] [527]: orthogonalDistance = 15.760365
[RoMatchSegment] [531]: Alpha = 0.424489, Beta = 4.358666
[coordinateTransform] [47]: dn = -9.450475
[coordinateTransform] [48]: de = -13.890461
[coordinateTransform] [58]: y_ = -13.890461
[coordinateTransform] [59]: x_ = -9.450475
[coordinateTransform] [47]: dn = 40.006576
[coordinateTransform] [48]: de = -17.018634
[coordinateTransform] [58]: y_ = -17.018634
[coordinateTransform] [59]: x_ = 40.006576
[RoMatchSegment] [520]: Point_1.x = -9.450475, Point_1.y = -13.890461
[RoMatchSegment] [521]: Point_2.x = 40.006576, Point_2.y = -17.018634
[RoMatchSegment] [527]: orthogonalDistance = 14.459312
[RoMatchSegment] [531]: Alpha = 1.036542, Beta = 0.339040
[getPsdRoLocation] [667]: MPP = 0
[getPsdRoLocation] [668]: roadSegClass = 0
[getPsdRoLocation] [669]: relativePos = 0
[getPsdRoLocation] [670]: RelativeDir = 0
[getPsdRoLocation] [671]: RvRelevancy = 0
[getPsdRoLocation] [672]: dis2Event = 0.000000
[       OK ] PsdLocationTest.RoMatchSegment (0 ms)
[ RUN      ] PsdLocationTest.accumulateChildsLength
[       OK ] PsdLocationTest.accumulateChildsLength (0 ms)
[ RUN      ] PsdLocationTest.calcRoadSegmentClass
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 0
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 1
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 2
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 2
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[mapClear] [1395]: --------------------------mapClear--------------------------
[mapClear] [1398]: Node = 0x5555f8d9cf30
[clearNodeOutTree] [991]: @@@Node = 0x5555f8d9cf30
[clearNodeOutTree] [996]: clear Node = 0x5555f8d9cf30
[clearNodeOutTree] [999]: Node not NULL = 0x5555f8d9cf30, Node->ParentNode = (nil)
[clearNodeOutTree] [1001]: ready to delete Node
[clearNodeOutTree] [1005]: cleared Node = (nil)
[mapClear] [1402]: tree = 0x5555f8d9cf30 has been cleared
[calcRoadSegmentClass] [387]: find the hvLocatedNode = 0x5555f8d9cf30
[calcRoadSegmentClass] [416]: RoadClass = 3
[findNodeById] [890]: result = (nil)
[calcRoadSegmentClass] [387]: find the hvLocatedNode = (nil)
[calcRoadSegmentClass] [392]: curSegmentId is not in mTree
[calcRoadSegmentClass] [416]: RoadClass = 0
[       OK ] PsdLocationTest.calcRoadSegmentClass (0 ms)
[ RUN      ] PsdLocationTest.getPsdAvailable
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 0
[getPsdAvailable] [581]: posIsUnique = 205
[getPsdAvailable] [582]: posLengthErr = 21845
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 1
[getPsdAvailable] [581]: posIsUnique = 205
[getPsdAvailable] [582]: posLengthErr = 21845
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 205
[getPsdAvailable] [582]: posLengthErr = 21845
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 21845
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 21845
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 0
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 6
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 7
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 1
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 2
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 3
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 4
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 0
[getPsdAvailable] [582]: posLengthErr = 5
[getPsdAvailable] [579]: MapMutexStatus = 0
[getPsdAvailable] [580]: curSegmentId = 6
[getPsdAvailable] [581]: posIsUnique = 1
[getPsdAvailable] [582]: posLengthErr = 4
[       OK ] PsdLocationTest.getPsdAvailable (0 ms)
[ RUN      ] PsdLocationTest.reservedFunction
[       OK ] PsdLocationTest.reservedFunction (0 ms)
[ RUN      ] PsdLocationTest.HaversineTest
[       OK ] PsdLocationTest.HaversineTest (0 ms)
[----------] 12 tests from PsdLocationTest (1 ms total)

[----------] 2 tests from PsdMessageDecoderTest
[ RUN      ] PsdMessageDecoderTest.segmentManager
[convertRoadClass] [207]: RoadClassValue = 2
[convertCurvature] [248]: signEndCurvature = 0, endCurvature = 1.000000
[convertCurvature] [252]: signStartCurvature = 0, startCurvature = 1.000000
[convertBranchAngle] [241]: branchDirection = 0, branchAngle = 0.000000
[pushInList] [190]: preSegmentId = 3
[convertRoadClass] [207]: RoadClassValue = 2
[convertCurvature] [248]: signEndCurvature = 1, endCurvature = -1.000000
[convertCurvature] [252]: signStartCurvature = 1, startCurvature = -1.000000
[convertBranchAngle] [241]: branchDirection = 1, branchAngle = -0.000000
[pushInList] [182]: vPsdMap already have this preSegmentId
[clearList] [162]: clear the vPsdMap
[clearList] [151]: vPsdMap is already empty
[       OK ] PsdMessageDecoderTest.segmentManager (0 ms)
[ RUN      ] PsdMessageDecoderTest.saveAttributToList
[convertRoadClass] [207]: RoadClassValue = 2
[convertCurvature] [248]: signEndCurvature = 0, endCurvature = 1.000000
[convertCurvature] [252]: signStartCurvature = 0, startCurvature = 1.000000
[convertBranchAngle] [241]: branchDirection = 0, branchAngle = 0.000000
[pushInList] [190]: preSegmentId = 3
[saveAttributToList] [97]: PsdAttribut_1_ID = 4
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 4166997660
[saveAttributToList] [100]: PsdAttribut_2_Wert = 21845
[saveAttributToList] [101]: PsdAttribut_3_ID = 4119849104
[saveAttributToList] [102]: PsdAttribut_3_Wert = 32765
[saveAttributToList] [103]: PsdAttribut_4_ID = 4175007712
[saveAttributToList] [104]: PsdAttribut_4_Wert = 21845
[saveAttributToList] [105]: PsdAttribut_5_ID = 0
[saveAttributToList] [106]: PsdAttribut_5_Wert = 2
[saveAttributToList] [133]: psdAttributSegmentID = 3
[saveAttributToList] [134]: structSeparate = 0
[clearList] [162]: clear the vPsdMap
[pushInList] [190]: preSegmentId = 3
[saveAttributToList] [97]: PsdAttribut_1_ID = 0
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 4
[saveAttributToList] [100]: PsdAttribut_2_Wert = 0
[saveAttributToList] [101]: PsdAttribut_3_ID = 4119849104
[saveAttributToList] [102]: PsdAttribut_3_Wert = 32765
[saveAttributToList] [103]: PsdAttribut_4_ID = 4175007712
[saveAttributToList] [104]: PsdAttribut_4_Wert = 21845
[saveAttributToList] [105]: PsdAttribut_5_ID = 0
[saveAttributToList] [106]: PsdAttribut_5_Wert = 2
[saveAttributToList] [133]: psdAttributSegmentID = 3
[saveAttributToList] [134]: structSeparate = 0
[clearList] [162]: clear the vPsdMap
[pushInList] [190]: preSegmentId = 3
[saveAttributToList] [97]: PsdAttribut_1_ID = 0
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 0
[saveAttributToList] [100]: PsdAttribut_2_Wert = 0
[saveAttributToList] [101]: PsdAttribut_3_ID = 4
[saveAttributToList] [102]: PsdAttribut_3_Wert = 0
[saveAttributToList] [103]: PsdAttribut_4_ID = 4175007712
[saveAttributToList] [104]: PsdAttribut_4_Wert = 21845
[saveAttributToList] [105]: PsdAttribut_5_ID = 0
[saveAttributToList] [106]: PsdAttribut_5_Wert = 2
[saveAttributToList] [133]: psdAttributSegmentID = 3
[saveAttributToList] [134]: structSeparate = 0
[clearList] [162]: clear the vPsdMap
[pushInList] [190]: preSegmentId = 3
[saveAttributToList] [97]: PsdAttribut_1_ID = 0
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 0
[saveAttributToList] [100]: PsdAttribut_2_Wert = 0
[saveAttributToList] [101]: PsdAttribut_3_ID = 0
[saveAttributToList] [102]: PsdAttribut_3_Wert = 0
[saveAttributToList] [103]: PsdAttribut_4_ID = 4
[saveAttributToList] [104]: PsdAttribut_4_Wert = 0
[saveAttributToList] [105]: PsdAttribut_5_ID = 0
[saveAttributToList] [106]: PsdAttribut_5_Wert = 2
[saveAttributToList] [133]: psdAttributSegmentID = 3
[saveAttributToList] [134]: structSeparate = 0
[clearList] [162]: clear the vPsdMap
[pushInList] [190]: preSegmentId = 3
[saveAttributToList] [97]: PsdAttribut_1_ID = 0
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 0
[saveAttributToList] [100]: PsdAttribut_2_Wert = 0
[saveAttributToList] [101]: PsdAttribut_3_ID = 0
[saveAttributToList] [102]: PsdAttribut_3_Wert = 0
[saveAttributToList] [103]: PsdAttribut_4_ID = 0
[saveAttributToList] [104]: PsdAttribut_4_Wert = 0
[saveAttributToList] [105]: PsdAttribut_5_ID = 4
[saveAttributToList] [106]: PsdAttribut_5_Wert = 0
[saveAttributToList] [133]: psdAttributSegmentID = 3
[saveAttributToList] [134]: structSeparate = 0
[clearList] [162]: clear the vPsdMap
[pushInList] [190]: preSegmentId = 3
[saveAttributToList] [97]: PsdAttribut_1_ID = 0
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 0
[saveAttributToList] [100]: PsdAttribut_2_Wert = 0
[saveAttributToList] [101]: PsdAttribut_3_ID = 0
[saveAttributToList] [102]: PsdAttribut_3_Wert = 0
[saveAttributToList] [103]: PsdAttribut_4_ID = 0
[saveAttributToList] [104]: PsdAttribut_4_Wert = 0
[saveAttributToList] [105]: PsdAttribut_5_ID = 0
[saveAttributToList] [106]: PsdAttribut_5_Wert = 0
[saveAttributToList] [133]: psdAttributSegmentID = 3
[saveAttributToList] [134]: structSeparate = 4119849104
[saveAttributToList] [97]: PsdAttribut_1_ID = 1
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 2384913579
[saveAttributToList] [100]: PsdAttribut_2_Wert = 32530
[saveAttributToList] [101]: PsdAttribut_3_ID = 1
[saveAttributToList] [102]: PsdAttribut_3_Wert = 0
[saveAttributToList] [103]: PsdAttribut_4_ID = 4175007720
[saveAttributToList] [104]: PsdAttribut_4_Wert = 21845
[saveAttributToList] [105]: PsdAttribut_5_ID = 4119849328
[saveAttributToList] [106]: PsdAttribut_5_Wert = 32765
[saveAttributToList] [133]: psdAttributSegmentID = 0
[saveAttributToList] [134]: structSeparate = 4119849367
[clearList] [162]: clear the vPsdMap
[saveAttributToList] [97]: PsdAttribut_1_ID = 1
[saveAttributToList] [98]: PsdAttribut_1_Wert = 0
[saveAttributToList] [99]: PsdAttribut_2_ID = 2384913579
[saveAttributToList] [100]: PsdAttribut_2_Wert = 32530
[saveAttributToList] [101]: PsdAttribut_3_ID = 1
[saveAttributToList] [102]: PsdAttribut_3_Wert = 0
[saveAttributToList] [103]: PsdAttribut_4_ID = 4175007720
[saveAttributToList] [104]: PsdAttribut_4_Wert = 21845
[saveAttributToList] [105]: PsdAttribut_5_ID = 4119849328
[saveAttributToList] [106]: PsdAttribut_5_Wert = 32765
[saveAttributToList] [133]: psdAttributSegmentID = 0
[saveAttributToList] [134]: structSeparate = 4119849367
[       OK ] PsdMessageDecoderTest.saveAttributToList (0 ms)
[----------] 2 tests from PsdMessageDecoderTest (0 ms total)

[----------] Global test environment tear-down
[==========] 24 tests from 3 test suites ran. (2 ms total)
[  PASSED  ] 24 tests.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename psd.info --test-name psd --rc lcov_branch_coverage=1 --branch-coverage'
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_dathGcV
Scanning . for .gcda files ...
Found 5 data files in .
using: chunkSize: 1, nchunks:5, intervalLength:0
Finished processing 5 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 29
  lines.......: 77.9% (1632 of 2094 lines)
  functions...: 76.7% (363 of 473 functions)
  branches....: 58.1% (437 of 752 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile psd.info.
Found 29 entries.
Found common filename prefix "/home/zhao/Documents/Psd_not_use_signalAPI"
Generating output.
Processing file /usr/include/c++/7/new
  lines=2 hit=2 functions=1 hit=1
Processing file /usr/include/c++/7/bits/ptr_traits.h
  lines=2 hit=2 functions=1 hit=1
Processing file /usr/include/c++/7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file src/PsdMessageDecoder.cpp
  lines=226 hit=109 functions=31 hit=19 branches=128 hit=45
Processing file /usr/include/x86_64-linux-gnu/c++/7/bits/gthr-default.h
  lines=2 hit=0 functions=1 hit=0
Processing file /usr/include/c++/7/bits/shared_ptr.h
  lines=4 hit=0 functions=3 hit=0
Processing file /usr/include/c++/7/bits/allocator.h
  lines=7 hit=4 functions=10 hit=6
Processing file inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file src/PsdMap.cpp
  lines=959 hit=839 functions=49 hit=38 branches=270 hit=178
Processing file /usr/include/c++/7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=15
Processing file src/Haversine.cpp
  lines=35 hit=35 functions=8 hit=8 branches=4 hit=2
Processing file /usr/include/c++/7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file /usr/include/c++/7/bits/stl_iterator.h
  lines=41 hit=41 functions=57 hit=57
Processing file external/include/signalAPI/include/vwg/sid/PSDParser/signal_data_access.hpp
  lines=2 hit=1 functions=3 hit=1
Processing file /usr/include/c++/7/bits/shared_ptr_base.h
  lines=65 hit=0 functions=27 hit=0 branches=14 hit=0
Processing file /usr/include/c++/7/bits/stl_vector.h
  lines=121 hit=119 functions=82 hit=79 branches=38 hit=17
Processing file /usr/include/c++/7/ext/atomicity.h
  lines=19 hit=0 functions=6 hit=0 branches=4 hit=0
Processing file src/PsdLocation.cpp
  lines=361 hit=275 functions=32 hit=20 branches=230 hit=169
Processing file /usr/include/c++/7/bits/alloc_traits.h
  lines=22 hit=17 functions=23 hit=19
Processing file inc/PsdMap.h
  lines=1 hit=1 functions=2 hit=2
Processing file /usr/include/c++/7/bits/stl_algobase.h
  lines=37 hit=37 functions=33 hit=30 branches=14 hit=9
Processing file /usr/include/c++/7/ext/new_allocator.h
  lines=15 hit=14 functions=28 hit=22 branches=20 hit=6
Processing file src/GeometricCalc.cpp
  lines=29 hit=29 functions=1 hit=1
Processing file /usr/include/c++/7/iostream
  lines=1 hit=1
Processing file /usr/include/c++/7/bits/vector.tcc
  lines=86 hit=69 functions=9 hit=8 branches=22 hit=11
Processing file /usr/include/c++/7/bits/allocated_ptr.h
  lines=14 hit=0 functions=6 hit=0 branches=2 hit=0
Processing file /usr/include/c++/7/typeinfo
  lines=4 hit=0 functions=1 hit=0 branches=6 hit=0
Processing file /usr/include/c++/7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=6
Processing file /usr/include/c++/7/bits/move.h
  lines=13 hit=13 functions=15 hit=11
Overall coverage rate:
  source files: 29
  lines.......: 77.9% (1632 of 2094 lines)
  functions...: 76.7% (363 of 473 functions)
  branches....: 58.1% (437 of 752 branches)
Message summary:
  no messages were reported
