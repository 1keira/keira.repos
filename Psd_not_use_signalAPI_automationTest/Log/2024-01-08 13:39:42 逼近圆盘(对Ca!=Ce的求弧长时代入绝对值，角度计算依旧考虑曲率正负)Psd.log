Script started on 2024-01-08 13:39:42+0800
]0;zhao@zhao-virtual-machine: ~/Documents/Psd[01;32mzhao@zhao-virtual-machine[00m:[01;34m~/Documents/Psd[00m$ script Log/Psd.log[7P./build.sh 
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd/build
[ 12%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/GeometricCalc.cpp.o[0m
[ 25%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/Haversine.cpp.o[0m
[ 37%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/Location.cpp.o[0m
[ 50%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/PsdLocation.cpp.o[0m
[ 62%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/PsdMap.cpp.o[0m
[ 75%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/src/PsdMessageDecoder.cpp.o[0m
[ 87%] [32mBuilding CXX object CMakeFiles/PsdModule.dir/gtest/src/PsdTest.cpp.o[0m
[100%] [32m[1mLinking CXX executable /home/zhao/Documents/Psd/gtest/output/bin/PsdModule[0m
[100%] Built target PsdModule
[0;32m[==========] [mRunning 1 test from 1 test suite.
[0;32m[----------] [mGlobal test environment set-up.
[0;32m[----------] [m1 test from PsdMapTest
[0;32m[ RUN      ] [mPsdMapTest.useRealRecordPsdWithCurve_phase2
open successfully
[TestBody] [5079]: hvHeading = 0.000000
[TestBody] [5090]: headingAccuracy = 2.250000
[TestBody] [4814]: preSegmentId = 54
[TestBody] [4828]: prevSegmentId = 51
[TestBody] [4841]: preSegTotalLength = 40
[TestBody] [4814]: preSegmentId = 58
[TestBody] [4828]: prevSegmentId = 54
[TestBody] [4841]: preSegTotalLength = 26
[TestBody] [4814]: preSegmentId = 16
[TestBody] [4828]: prevSegmentId = 58
[TestBody] [4841]: preSegTotalLength = 24
[TestBody] [4814]: preSegmentId = 33
[TestBody] [4828]: prevSegmentId = 16
[TestBody] [4841]: preSegTotalLength = 2
[TestBody] [4814]: preSegmentId = 35
[TestBody] [4828]: prevSegmentId = 33
[TestBody] [4841]: preSegTotalLength = 30
[TestBody] [4814]: preSegmentId = 42
[TestBody] [4828]: prevSegmentId = 35
[TestBody] [4841]: preSegTotalLength = 34
[TestBody] [4814]: preSegmentId = 47
[TestBody] [4828]: prevSegmentId = 42
[TestBody] [4841]: preSegTotalLength = 20
[TestBody] [4814]: preSegmentId = 52
[TestBody] [4828]: prevSegmentId = 47
[TestBody] [4841]: preSegTotalLength = 10
[TestBody] [4814]: preSegmentId = 53
[TestBody] [4828]: prevSegmentId = 52
[TestBody] [4841]: preSegTotalLength = 36
[TestBody] [4814]: preSegmentId = 50
[TestBody] [4828]: prevSegmentId = 47
[TestBody] [4841]: preSegTotalLength = 34
[TestBody] [4964]: curSegmentId = 54
[TestBody] [4976]: curRemainLength = 38
[TestBody] [5043]: curSegment's latitude = 40.344001
[TestBody] [5062]: curSegment's longitude = 116.818758
[TestBody] [5079]: hvHeading = 143.600000
[TestBody] [5090]: headingAccuracy = 2.250000
[TestBody] [4814]: preSegmentId = 5
[TestBody] [4828]: prevSegmentId = 50
[TestBody] [4841]: preSegTotalLength = 26
[TestBody] [4814]: preSegmentId = 9
[TestBody] [4828]: prevSegmentId = 5
[TestBody] [4841]: preSegTotalLength = 26
[TestBody] [4814]: preSegmentId = 11
[TestBody] [4828]: prevSegmentId = 9
[TestBody] [4841]: preSegTotalLength = 34
[TestBody] [4814]: preSegmentId = 13
[TestBody] [4828]: prevSegmentId = 11
[TestBody] [4841]: preSegTotalLength = 28
[TestBody] [4814]: preSegmentId = 15
[TestBody] [4828]: prevSegmentId = 13
[TestBody] [4841]: preSegTotalLength = 32
[TestBody] [4814]: preSegmentId = 17
[TestBody] [4828]: prevSegmentId = 15
[TestBody] [4841]: preSegTotalLength = 32
[TestBody] [4814]: preSegmentId = 21
[TestBody] [4828]: prevSegmentId = 17
[TestBody] [4841]: preSegTotalLength = 26
[getInstance] [51]: first new a pInstance
[mapCreate] [1434]: --------------------------mapCreate------------------------------
[createNode] [1048]: newNode = 0x55aa40e5a170
[insertNodeInTree] [1236]: curNode = 0x55aa40e5a170
[curIdIsInList] [1448]: curSegmentId is in list = 54
[insertNodeInTree] [1262]: count = 1
[insertNodeInTree] [1263]: current tree is = 0x55aa40e5a170, current tree Id is = 54, curSegmentId is = 54
[calcCurSegmentCoordinate] [488]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcCurSegmentCoordinate] [521]: --------------------------calculate HV's endCoordinate--------------------------
[calcCurSegmentCoordinate] [546]: R = 52.900776
[calcCurSegmentCoordinate] [578]: finalRemainLength = 38.000000
[calcCurSegmentCoordinate] [605]: Sa = 27.605887, Se = 10.394113
[calcCurveXYOffset] [176]: arcR = 52.900776, arcRotationAngle = 29.899388, arcRotationAngleRad = 0.521843, signCurvature = 1
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.133098
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -7.040984
[calcCurveXYOffset] [182]: dX = 26.369898
[calcCurveXYOffset] [183]: dY = 7.040984
[coordinateSystemRotates] [119]: accumulateBranchAngle = 143.600000, accumulateBranchAngleRad = 2.506293
[coordinateSystemRotates] [120]: dX = 26.369898
[coordinateSystemRotates] [121]: dY = 7.040984
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.804894
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.593419
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -21.224968
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 4.178253
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 15.648396
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -5.667244
[coordinateSystemRotates] [131]: coordinate system rotated X = -25.403220
[coordinateSystemRotates] [132]: coordinate system rotated Y = 9.981152
[calcCurSegmentCoordinate] [613]: first half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -25.403220, disHv2EndAfterRotatingCoord.distanceY = 9.981152
[calcDestination] [78]: destinationCoord latitude = 40.343773  destinationCoord longitude = 116.818876
[calcCurSegmentCoordinate] [616]: HV's one SampleCoord before the endCoord  latitude = 40.343773  longitude = 116.818876
[calcCurSegmentCoordinate] [619]: accumulateBranchAngleHv2End = 173.499388
[calcCurSegmentCoordinate] [621]: fixed accumulateBranchAngleHv2End = 173.499388
[calcCurveXYOffset] [176]: arcR = 140.500000, arcRotationAngle = 4.238710, arcRotationAngleRad = 0.073979, signCurvature = 1
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.002735
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -0.384300
[calcCurveXYOffset] [182]: dX = 10.384634
[calcCurveXYOffset] [183]: dY = 0.384300
[coordinateSystemRotates] [119]: accumulateBranchAngle = 173.499388, accumulateBranchAngleRad = 3.028136
[coordinateSystemRotates] [120]: dX = 10.384634
[coordinateSystemRotates] [121]: dY = 0.384300
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.993571
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.113214
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -10.317868
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 0.043508
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 1.175684
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -0.381829
[coordinateSystemRotates] [131]: coordinate system rotated X = -10.361376
[coordinateSystemRotates] [132]: coordinate system rotated Y = 0.793855
[calcCurSegmentCoordinate] [629]: second half of the curvature curve: disHv2EndAfterRotatingCoord.distanceX = -35.764596, disHv2EndAfterRotatingCoord.distanceY = 10.775007
[calcDestination] [78]: destinationCoord latitude = 40.343680  destinationCoord longitude = 116.818885
[calcCurSegmentCoordinate] [631]: HV's endCoordinate latitude = 40.343680  longitude = 116.818885
[calcCurSegmentCoordinate] [634]: accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [636]: fixed accumulateBranchAngleHv2End = 177.738098
[calcCurSegmentCoordinate] [640]: --------------------------calculate HV's startCoordinate--------------------------
[calcCurSegmentCoordinate] [643]: accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [645]: fixed accumulateBranchAngleHv2Start = 323.600000
[calcCurSegmentCoordinate] [655]: R = 52.900776
[calcCurSegmentCoordinate] [682]: finalRemainLength = 2.000000
[calcCurSegmentCoordinate] [706]: Sa = 0.983857, Se = 1.016143
[calcCurveXYOffset] [176]: arcR = 52.900776, arcRotationAngle = 1.065596, arcRotationAngleRad = 0.018598, signCurvature = 1
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.000173
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -0.009149
[calcCurveXYOffset] [182]: dX = 0.983801
[calcCurveXYOffset] [183]: dY = 0.009149
[coordinateSystemRotates] [119]: accumulateBranchAngle = 323.600000, accumulateBranchAngleRad = 5.647885
[coordinateSystemRotates] [120]: dX = 0.983801
[coordinateSystemRotates] [121]: dY = 0.983801
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.804894
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.593419
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -0.583806
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 0.791855
[coordinateSystemRotates] [131]: coordinate system rotated X = 1.375661
[coordinateSystemRotates] [132]: coordinate system rotated Y = 0.208049
[calcCurSegmentCoordinate] [714]: first half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 1.375661, disHv2StartAfterRotatingCoord.distanceY = 0.208049
[calcDestination] [78]: destinationCoord latitude = 40.344013  destinationCoord longitude = 116.818760
[calcCurSegmentCoordinate] [717]: HV's one SampleCoord before the startCoord latitude = 40.344013  longitude = 116.818760
[calcCurSegmentCoordinate] [720]: accumulateBranchAngleHv2Start = 322.534404
[calcCurSegmentCoordinate] [722]: fixed accumulateBranchAngleHv2Start = 322.534404
[calcCurveXYOffset] [176]: arcR = 51.220000, arcRotationAngle = 1.136679, arcRotationAngleRad = 0.019839, signCurvature = 1
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.000197
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -0.010079
[calcCurveXYOffset] [182]: dX = 1.016076
[calcCurveXYOffset] [183]: dY = 0.010079
[coordinateSystemRotates] [119]: accumulateBranchAngle = 322.534404, accumulateBranchAngleRad = 5.629287
[coordinateSystemRotates] [120]: dX = 1.016076
[coordinateSystemRotates] [121]: dY = 0.010079
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.793719
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.608285
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 0.806478
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -0.006131
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -0.618064
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 0.008000
[coordinateSystemRotates] [131]: coordinate system rotated X = 0.812609
[coordinateSystemRotates] [132]: coordinate system rotated Y = -0.610064
[calcCurSegmentCoordinate] [729]: second half of the curvature curve: disHv2StartAfterRotatingCoord.distanceX = 2.188271, disHv2StartAfterRotatingCoord.distanceY = -0.402014
[calcDestination] [78]: destinationCoord latitude = 40.344021  destinationCoord longitude = 116.818753
[calcCurSegmentCoordinate] [731]: HV's startCoordinate latitude = 40.344021  longitude = 116.818753
[calcCurSegmentCoordinate] [734]: accumulateBranchAngleHv2Start = 321.397725
[calcCurSegmentCoordinate] [736]: fixed accumulateBranchAngleHv2Start = 321.397725
[insertNodeInTree] [1278]: 54's startCoordinate: latitude = 40.344021, longitude = 116.818753
[insertNodeInTree] [1281]: 54's SampleCoord: latitude = 40.344013, longitude = 116.818760
[insertNodeInTree] [1281]: 54's SampleCoord: latitude = 40.343773, longitude = 116.818876
[insertNodeInTree] [1283]: 54's endCoordinate: latitude = 40.343680, longitude = 116.818885
[insertNode] [1112]: (*it)->preSegmentId = 54's segIsInTree = 1
[findNodeById] [789]: result = (nil)
[insertNode] [1184]: tempNode is = (nil), preSegmentId = 54, prevSegmentId = 51, segIsInTree = 1
[insertNode] [1229]: goto check the next segment info from vPsdMap
[insertNode] [1112]: (*it)->preSegmentId = 58's segIsInTree = 0
[insertNode] [1184]: tempNode is = 0x55aa40e5a170, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a230
[insertChildNode] [1056]: childNode = 0x55aa40e5a230
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [182]: dX = 25.106327
[calcCurveXYOffset] [183]: dY = -5.832164
[coordinateSystemRotates] [119]: accumulateBranchAngle = 213.171173, accumulateBranchAngleRad = 3.720539
[coordinateSystemRotates] [120]: dX = 25.106327
[coordinateSystemRotates] [121]: dY = -5.832164
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.837040
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.547142
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -21.014992
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 3.191023
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -13.736730
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 4.881753
[coordinateSystemRotates] [131]: coordinate system rotated X = -24.206015
[coordinateSystemRotates] [132]: coordinate system rotated Y = -8.854977
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -59.970611, accumulateXY.distanceY = 1.920030
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818781
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818781
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 187.015607
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 187.015607
[insertNode] [1205]: childNode's preSegmentId = 58
[insertNode] [1213]: 58's startCoordinate: latitude = 40.343680, longitude = 116.818885
[insertNode] [1218]: 58's endCoordinate: latitude = 40.343462, longitude = 116.818781
[insertNode] [1112]: (*it)->preSegmentId = 16's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a230
[insertNode] [1184]: tempNode is = 0x55aa40e5a230, preSegmentId = 16, prevSegmentId = 58, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a2f0
[insertChildNode] [1056]: childNode = 0x55aa40e5a2f0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 24.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 24.143599, arcRotationAngleRad = 0.421385, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.087477
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -4.982242
[calcCurveXYOffset] [182]: dX = 23.296017
[calcCurveXYOffset] [183]: dY = -4.982242
[coordinateSystemRotates] [119]: accumulateBranchAngle = 187.015607, accumulateBranchAngleRad = 3.264038
[coordinateSystemRotates] [120]: dX = 23.296017
[coordinateSystemRotates] [121]: dY = -4.982242
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.992513
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.122140
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -23.121598
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 0.608530
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -2.845369
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 4.944939
[coordinateSystemRotates] [131]: coordinate system rotated X = -23.730127
[coordinateSystemRotates] [132]: coordinate system rotated Y = 2.099571
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -83.700738, accumulateXY.distanceY = 4.019600
[calcDestination] [78]: destinationCoord latitude = 40.343249  destinationCoord longitude = 116.818805
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343249  longitude = 116.818805
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 162.872007
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 162.872007
[insertNode] [1205]: childNode's preSegmentId = 16
[insertNode] [1213]: 16's startCoordinate: latitude = 40.343462, longitude = 116.818781
[insertNode] [1218]: 16's endCoordinate: latitude = 40.343249, longitude = 116.818805
[insertNode] [1112]: (*it)->preSegmentId = 33's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a2f0
[findNodeById] [784]: result = 0x55aa40e5a2f0
[insertNode] [1184]: tempNode is = 0x55aa40e5a2f0, preSegmentId = 33, prevSegmentId = 16, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a3b0
[insertChildNode] [1056]: childNode = 0x55aa40e5a3b0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 2.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 2.011967, arcRotationAngleRad = 0.035115, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.000616
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -0.035112
[calcCurveXYOffset] [182]: dX = 1.999589
[calcCurveXYOffset] [183]: dY = -0.035112
[coordinateSystemRotates] [119]: accumulateBranchAngle = 162.872007, accumulateBranchAngleRad = 2.842653
[coordinateSystemRotates] [120]: dX = 1.999589
[coordinateSystemRotates] [121]: dY = -0.035112
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.955649
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.294507
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -1.910906
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -0.010341
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 0.588893
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 0.033555
[coordinateSystemRotates] [131]: coordinate system rotated X = -1.900565
[coordinateSystemRotates] [132]: coordinate system rotated Y = 0.622448
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -85.601303, accumulateXY.distanceY = 4.642048
[calcDestination] [78]: destinationCoord latitude = 40.343232  destinationCoord longitude = 116.818813
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343232  longitude = 116.818813
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 160.860041
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 160.860041
[insertNode] [1205]: childNode's preSegmentId = 33
[insertNode] [1213]: 33's startCoordinate: latitude = 40.343249, longitude = 116.818805
[insertNode] [1218]: 33's endCoordinate: latitude = 40.343232, longitude = 116.818813
[insertNode] [1112]: (*it)->preSegmentId = 35's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a3b0
[findNodeById] [784]: result = 0x55aa40e5a3b0
[findNodeById] [784]: result = 0x55aa40e5a3b0
[insertNode] [1184]: tempNode is = 0x55aa40e5a3b0, preSegmentId = 35, prevSegmentId = 33, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a470
[insertChildNode] [1056]: childNode = 0x55aa40e5a470
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 30.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 30.179499, arcRotationAngleRad = 0.526732, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.135545
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -7.719981
[calcCurveXYOffset] [182]: dX = 28.631886
[calcCurveXYOffset] [183]: dY = -7.719981
[coordinateSystemRotates] [119]: accumulateBranchAngle = 160.860041, accumulateBranchAngleRad = 2.807537
[coordinateSystemRotates] [120]: dX = 28.631886
[coordinateSystemRotates] [121]: dY = -7.719981
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.944720
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.327877
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -27.049129
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -2.531203
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 9.387733
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 7.293224
[coordinateSystemRotates] [131]: coordinate system rotated X = -24.517926
[coordinateSystemRotates] [132]: coordinate system rotated Y = 16.680957
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -110.119230, accumulateXY.distanceY = 21.323005
[calcDestination] [78]: destinationCoord latitude = 40.343012  destinationCoord longitude = 116.819009
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343012  longitude = 116.819009
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 130.680542
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 130.680542
[insertNode] [1205]: childNode's preSegmentId = 35
[insertNode] [1213]: 35's startCoordinate: latitude = 40.343232, longitude = 116.818813
[insertNode] [1218]: 35's endCoordinate: latitude = 40.343012, longitude = 116.819009
[insertNode] [1112]: (*it)->preSegmentId = 42's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a470
[findNodeById] [784]: result = 0x55aa40e5a470
[findNodeById] [784]: result = 0x55aa40e5a470
[findNodeById] [784]: result = 0x55aa40e5a470
[insertNode] [1184]: tempNode is = 0x55aa40e5a470, preSegmentId = 42, prevSegmentId = 35, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a530
[insertChildNode] [1056]: childNode = 0x55aa40e5a530
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [182]: dX = 32.016281
[calcCurveXYOffset] [183]: dY = -9.850544
[coordinateSystemRotates] [119]: accumulateBranchAngle = 126.428573, accumulateBranchAngleRad = 2.206595
[coordinateSystemRotates] [120]: dX = 32.016281
[coordinateSystemRotates] [121]: dY = -9.850544
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.593820
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.804598
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -19.011914
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -7.925726
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 25.760228
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 5.849452
[coordinateSystemRotates] [131]: coordinate system rotated X = -11.086189
[coordinateSystemRotates] [132]: coordinate system rotated Y = 31.609680
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -121.205418, accumulateXY.distanceY = 52.932685
[calcDestination] [78]: destinationCoord latitude = 40.342912  destinationCoord longitude = 116.819382
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.342912  longitude = 116.819382
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 92.225140
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 92.225140
[insertNode] [1205]: childNode's preSegmentId = 42
[insertNode] [1213]: 42's startCoordinate: latitude = 40.343012, longitude = 116.819009
[insertNode] [1218]: 42's endCoordinate: latitude = 40.342912, longitude = 116.819382
[insertNode] [1112]: (*it)->preSegmentId = 47's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a530
[findNodeById] [784]: result = 0x55aa40e5a530
[findNodeById] [784]: result = 0x55aa40e5a530
[findNodeById] [784]: result = 0x55aa40e5a530
[findNodeById] [784]: result = 0x55aa40e5a530
[insertNode] [1184]: tempNode is = 0x55aa40e5a530, preSegmentId = 47, prevSegmentId = 42, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a5f0
[insertChildNode] [1056]: childNode = 0x55aa40e5a5f0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 20.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 20.119666, arcRotationAngleRad = 0.351154, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.061024
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -3.475608
[calcCurveXYOffset] [182]: dX = 19.591495
[calcCurveXYOffset] [183]: dY = -3.475608
[coordinateSystemRotates] [119]: accumulateBranchAngle = 92.225140, accumulateBranchAngleRad = 1.609632
[coordinateSystemRotates] [120]: dX = 19.591495
[coordinateSystemRotates] [121]: dY = -3.475608
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.038826
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.999246
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -0.760664
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -3.472988
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 19.576723
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 0.134945
[coordinateSystemRotates] [131]: coordinate system rotated X = 2.712323
[coordinateSystemRotates] [132]: coordinate system rotated Y = 19.711668
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -118.493095, accumulateXY.distanceY = 72.644353
[calcDestination] [78]: destinationCoord latitude = 40.342937  destinationCoord longitude = 116.819614
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.342937  longitude = 116.819614
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 72.105474
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 72.105474
[insertNode] [1205]: childNode's preSegmentId = 47
[insertNode] [1213]: 47's startCoordinate: latitude = 40.342912, longitude = 116.819382
[insertNode] [1218]: 47's endCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1112]: (*it)->preSegmentId = 52's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[insertNode] [1184]: tempNode is = 0x55aa40e5a5f0, preSegmentId = 52, prevSegmentId = 47, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a6b0
[insertChildNode] [1056]: childNode = 0x55aa40e5a6b0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 97.875000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 10.000000
[calcChildSegmentCoordinate] [297]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [303]: Sa = 4.147282, Se = 5.852718
[calcCurveXYOffset] [176]: arcR = 97.875000, arcRotationAngle = 2.427809, arcRotationAngleRad = 0.042373, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.000898
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -0.087854
[calcCurveXYOffset] [182]: dX = 4.146041
[calcCurveXYOffset] [183]: dY = -0.087854
[coordinateSystemRotates] [119]: accumulateBranchAngle = 104.703903, accumulateBranchAngleRad = 1.827428
[coordinateSystemRotates] [120]: dX = 4.146041
[coordinateSystemRotates] [121]: dY = -0.087854
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.253824
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.967250
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -1.052364
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -0.084977
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 4.010260
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 0.022299
[coordinateSystemRotates] [131]: coordinate system rotated X = -0.967387
[coordinateSystemRotates] [132]: coordinate system rotated Y = 4.032560
[calcChildSegmentCoordinate] [311]: first half of the curvature curve: accumulateXY.distanceX = -119.460483, accumulateXY.distanceY = 76.676912
[calcDestination] [78]: destinationCoord latitude = 40.342928  destinationCoord longitude = 116.819662
[calcChildSegmentCoordinate] [314]: one SampleCoord before the endCoord  latitude = 40.342928  longitude = 116.819662
[calcChildSegmentCoordinate] [317]: childNode->MapData.accumulateBranchAngle = 102.276094
[calcChildSegmentCoordinate] [319]: fixed childNode->MapData.accumulateBranchAngle = 102.276094
[calcCurveXYOffset] [176]: arcR = 69.355000, arcRotationAngle = 4.835066, arcRotationAngleRad = 0.084388, signCurvature = 1
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.003559
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -0.246803
[calcCurveXYOffset] [182]: dX = 5.845774
[calcCurveXYOffset] [183]: dY = 0.246803
[coordinateSystemRotates] [119]: accumulateBranchAngle = 102.276094, accumulateBranchAngleRad = 1.785055
[coordinateSystemRotates] [120]: dX = 5.845774
[coordinateSystemRotates] [121]: dY = 0.246803
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.212623
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.977134
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -1.242944
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 0.241159
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 5.712107
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -0.052476
[coordinateSystemRotates] [131]: coordinate system rotated X = -1.484104
[coordinateSystemRotates] [132]: coordinate system rotated Y = 5.659631
[calcChildSegmentCoordinate] [327]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -120.944586, childNode->MapData.accumulateXY.distanceY = 82.336543
[calcDestination] [78]: destinationCoord latitude = 40.342915  destinationCoord longitude = 116.819728
[calcChildSegmentCoordinate] [329]: childSegment's endCoordinate latitude = 40.342915  longitude = 116.819728
[calcChildSegmentCoordinate] [332]: childNode->MapData.accumulateBranchAngle = 107.111160
[calcChildSegmentCoordinate] [334]: fixed accumulateBranchAngleHv2End = 107.111160
[insertNode] [1205]: childNode's preSegmentId = 52
[insertNode] [1213]: 52's startCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1216]: 52's SampleCoord: latitude = 40.342928, longitude = 116.819662
[insertNode] [1218]: 52's endCoordinate: latitude = 40.342915, longitude = 116.819728
[insertNode] [1112]: (*it)->preSegmentId = 53's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a6b0
[findNodeById] [784]: result = 0x55aa40e5a6b0
[findNodeById] [784]: result = 0x55aa40e5a6b0
[findNodeById] [784]: result = 0x55aa40e5a6b0
[findNodeById] [784]: result = 0x55aa40e5a6b0
[findNodeById] [784]: result = 0x55aa40e5a6b0
[findNodeById] [784]: result = 0x55aa40e5a6b0
[insertNode] [1184]: tempNode is = 0x55aa40e5a6b0, preSegmentId = 53, prevSegmentId = 52, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a770
[insertChildNode] [1056]: childNode = 0x55aa40e5a770
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 35.875000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 36.000000
[calcChildSegmentCoordinate] [297]: KL != Kstart, split into two arcs
[calcChildSegmentCoordinate] [303]: Sa = 27.382532, Se = 8.617468
[calcCurveXYOffset] [176]: arcR = 35.875000, arcRotationAngle = 43.732501, arcRotationAngleRad = 0.763276, signCurvature = 1
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.277425
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -9.952618
[calcCurveXYOffset] [182]: dX = 24.800115
[calcCurveXYOffset] [183]: dY = 9.952618
[coordinateSystemRotates] [119]: accumulateBranchAngle = 107.111160, accumulateBranchAngleRad = 1.869442
[coordinateSystemRotates] [120]: dX = 24.800115
[coordinateSystemRotates] [121]: dY = 9.952618
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.294226
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.955736
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -7.296851
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 9.512072
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 23.702356
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -2.928324
[coordinateSystemRotates] [131]: coordinate system rotated X = -16.808923
[coordinateSystemRotates] [132]: coordinate system rotated Y = 20.774032
[calcChildSegmentCoordinate] [311]: first half of the curvature curve: accumulateXY.distanceX = -137.753509, accumulateXY.distanceY = 103.110575
[calcDestination] [78]: destinationCoord latitude = 40.342764  destinationCoord longitude = 116.819973
[calcChildSegmentCoordinate] [314]: one SampleCoord before the endCoord  latitude = 40.342764  longitude = 116.819973
[calcChildSegmentCoordinate] [317]: childNode->MapData.accumulateBranchAngle = 150.843662
[calcChildSegmentCoordinate] [319]: fixed childNode->MapData.accumulateBranchAngle = 150.843662
[calcCurveXYOffset] [176]: arcR = 113.995000, arcRotationAngle = 4.331283, arcRotationAngleRad = 0.075595, signCurvature = 1
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.002856
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -0.325564
[calcCurveXYOffset] [182]: dX = 8.609263
[calcCurveXYOffset] [183]: dY = 0.325564
[coordinateSystemRotates] [119]: accumulateBranchAngle = 150.843662, accumulateBranchAngleRad = 2.632719
[coordinateSystemRotates] [120]: dX = 8.609263
[coordinateSystemRotates] [121]: dY = 0.325564
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.873294
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.487194
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -7.518414
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 0.158613
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 4.194384
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -0.284313
[coordinateSystemRotates] [131]: coordinate system rotated X = -7.677027
[coordinateSystemRotates] [132]: coordinate system rotated Y = 3.910071
[calcChildSegmentCoordinate] [327]: second half of the curvature curve: childNode->MapData.accumulateXY.distanceX = -145.430537, childNode->MapData.accumulateXY.distanceY = 107.020646
[calcDestination] [78]: destinationCoord latitude = 40.342695  destinationCoord longitude = 116.820019
[calcChildSegmentCoordinate] [329]: childSegment's endCoordinate latitude = 40.342695  longitude = 116.820019
[calcChildSegmentCoordinate] [332]: childNode->MapData.accumulateBranchAngle = 155.174945
[calcChildSegmentCoordinate] [334]: fixed accumulateBranchAngleHv2End = 155.174945
[insertNode] [1205]: childNode's preSegmentId = 53
[insertNode] [1213]: 53's startCoordinate: latitude = 40.342915, longitude = 116.819728
[insertNode] [1216]: 53's SampleCoord: latitude = 40.342764, longitude = 116.819973
[insertNode] [1218]: 53's endCoordinate: latitude = 40.342695, longitude = 116.820019
[insertNode] [1112]: (*it)->preSegmentId = 50's segIsInTree = 0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[findNodeById] [784]: result = 0x55aa40e5a5f0
[insertNode] [1184]: tempNode is = 0x55aa40e5a5f0, preSegmentId = 50, prevSegmentId = 47, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a830
[insertChildNode] [1056]: childNode = 0x55aa40e5a830
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [182]: dX = 32.016281
[calcCurveXYOffset] [183]: dY = -9.850544
[coordinateSystemRotates] [119]: accumulateBranchAngle = 72.105474, accumulateBranchAngleRad = 1.258478
[coordinateSystemRotates] [120]: dX = 32.016281
[coordinateSystemRotates] [121]: dY = -9.850544
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.307266
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.951624
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 9.837505
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -9.374012
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 30.467454
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -3.026734
[coordinateSystemRotates] [131]: coordinate system rotated X = 19.211517
[coordinateSystemRotates] [132]: coordinate system rotated Y = 27.440719
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -99.281578, accumulateXY.distanceY = 100.085072
[calcDestination] [78]: destinationCoord latitude = 40.343109  destinationCoord longitude = 116.819938
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343109  longitude = 116.819938
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 37.902041
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 37.902041
[insertNode] [1205]: childNode's preSegmentId = 50
[insertNode] [1213]: 50's startCoordinate: latitude = 40.342937, longitude = 116.819614
[insertNode] [1218]: 50's endCoordinate: latitude = 40.343109, longitude = 116.819938
[insertNode] [1112]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [789]: result = (nil)
[findNodeById] [789]: result = (nil)
[findNodeById] [784]: result = 0x55aa40e5a830
[findNodeById] [784]: result = 0x55aa40e5a830
[findNodeById] [784]: result = 0x55aa40e5a830
[findNodeById] [784]: result = 0x55aa40e5a830
[findNodeById] [784]: result = 0x55aa40e5a830
[findNodeById] [784]: result = 0x55aa40e5a830
[findNodeById] [784]: result = 0x55aa40e5a830
[insertNode] [1184]: tempNode is = 0x55aa40e5a830, preSegmentId = 5, prevSegmentId = 50, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a8f0
[insertChildNode] [1056]: childNode = 0x55aa40e5a8f0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [182]: dX = 25.106327
[calcCurveXYOffset] [183]: dY = -5.832164
[coordinateSystemRotates] [119]: accumulateBranchAngle = 37.902041, accumulateBranchAngleRad = 0.661515
[coordinateSystemRotates] [120]: dX = 25.106327
[coordinateSystemRotates] [121]: dY = -5.832164
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.789062
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.614313
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 19.810453
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -3.582776
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 15.423151
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -4.601940
[coordinateSystemRotates] [131]: coordinate system rotated X = 23.393229
[coordinateSystemRotates] [132]: coordinate system rotated Y = 10.821211
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -75.888349, accumulateXY.distanceY = 110.906283
[calcDestination] [78]: destinationCoord latitude = 40.343319  destinationCoord longitude = 116.820065
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343319  longitude = 116.820065
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = 11.746475
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = 11.746475
[insertNode] [1205]: childNode's preSegmentId = 5
[insertNode] [1213]: 5's startCoordinate: latitude = 40.343109, longitude = 116.819938
[insertNode] [1218]: 5's endCoordinate: latitude = 40.343319, longitude = 116.820065
[insertNode] [1112]: (*it)->preSegmentId = 9's segIsInTree = 0
[findNodeById] [789]: result = (nil)
[findNodeById] [789]: result = (nil)
[findNodeById] [784]: result = 0x55aa40e5a8f0
[findNodeById] [784]: result = 0x55aa40e5a8f0
[findNodeById] [784]: result = 0x55aa40e5a8f0
[findNodeById] [784]: result = 0x55aa40e5a8f0
[findNodeById] [784]: result = 0x55aa40e5a8f0
[findNodeById] [784]: result = 0x55aa40e5a8f0
[findNodeById] [784]: result = 0x55aa40e5a8f0
[findNodeById] [784]: result = 0x55aa40e5a8f0
[insertNode] [1184]: tempNode is = 0x55aa40e5a8f0, preSegmentId = 9, prevSegmentId = 5, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5a9b0
[insertChildNode] [1056]: childNode = 0x55aa40e5a9b0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [182]: dX = 25.106327
[calcCurveXYOffset] [183]: dY = -5.832164
[coordinateSystemRotates] [119]: accumulateBranchAngle = 11.746475, accumulateBranchAngleRad = 0.205015
[coordinateSystemRotates] [120]: dX = 25.106327
[coordinateSystemRotates] [121]: dY = -5.832164
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.979058
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = 0.203582
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 24.580550
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = -1.187321
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = 5.111184
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -5.710027
[coordinateSystemRotates] [131]: coordinate system rotated X = 25.767871
[coordinateSystemRotates] [132]: coordinate system rotated Y = -0.598843
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -50.120478, accumulateXY.distanceY = 110.307440
[calcDestination] [78]: destinationCoord latitude = 40.343551  destinationCoord longitude = 116.820058
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343551  longitude = 116.820058
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = -14.409091
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = -14.409091
[insertNode] [1205]: childNode's preSegmentId = 9
[insertNode] [1213]: 9's startCoordinate: latitude = 40.343319, longitude = 116.820065
[insertNode] [1218]: 9's endCoordinate: latitude = 40.343551, longitude = 116.820058
[insertNode] [1112]: (*it)->preSegmentId = 11's segIsInTree = 0
[findNodeById] [789]: result = (nil)
[findNodeById] [789]: result = (nil)
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[findNodeById] [784]: result = 0x55aa40e5a9b0
[insertNode] [1184]: tempNode is = 0x55aa40e5a9b0, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5aa70
[insertChildNode] [1056]: childNode = 0x55aa40e5aa70
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 34.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 34.203433, arcRotationAngleRad = 0.596963, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.172953
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -9.850544
[calcCurveXYOffset] [182]: dX = 32.016281
[calcCurveXYOffset] [183]: dY = -9.850544
[coordinateSystemRotates] [119]: accumulateBranchAngle = -18.661060, accumulateBranchAngleRad = -0.325697
[coordinateSystemRotates] [120]: dX = 32.016281
[coordinateSystemRotates] [121]: dY = -9.850544
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.947428
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.319969
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 30.333120
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 3.151870
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -10.244223
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -9.332681
[coordinateSystemRotates] [131]: coordinate system rotated X = 27.181249
[coordinateSystemRotates] [132]: coordinate system rotated Y = -19.576903
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -22.939229, accumulateXY.distanceY = 90.730537
[calcDestination] [78]: destinationCoord latitude = 40.343795  destinationCoord longitude = 116.819827
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343795  longitude = 116.819827
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = -52.864493
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = -52.864493
[insertNode] [1205]: childNode's preSegmentId = 11
[insertNode] [1213]: 11's startCoordinate: latitude = 40.343551, longitude = 116.820058
[insertNode] [1218]: 11's endCoordinate: latitude = 40.343795, longitude = 116.819827
[insertNode] [1112]: (*it)->preSegmentId = 13's segIsInTree = 0
[findNodeById] [789]: result = (nil)
[findNodeById] [789]: result = (nil)
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[findNodeById] [784]: result = 0x55aa40e5aa70
[insertNode] [1184]: tempNode is = 0x55aa40e5aa70, preSegmentId = 13, prevSegmentId = 11, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5ab30
[insertChildNode] [1056]: childNode = 0x55aa40e5ab30
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 28.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 28.167533, arcRotationAngleRad = 0.491616, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.118429
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -6.745119
[calcCurveXYOffset] [182]: dX = 26.885681
[calcCurveXYOffset] [183]: dY = -6.745119
[coordinateSystemRotates] [119]: accumulateBranchAngle = -52.864493, accumulateBranchAngleRad = -0.922659
[coordinateSystemRotates] [120]: dX = 26.885681
[coordinateSystemRotates] [121]: dY = -6.745119
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.603702
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.797210
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 16.230944
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 5.377276
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -21.433533
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -4.072043
[coordinateSystemRotates] [131]: coordinate system rotated X = 10.853668
[coordinateSystemRotates] [132]: coordinate system rotated Y = -25.505575
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -12.085561, accumulateXY.distanceY = 65.224961
[calcDestination] [78]: destinationCoord latitude = 40.343892  destinationCoord longitude = 116.819527
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343892  longitude = 116.819527
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = -81.032025
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = -81.032025
[insertNode] [1205]: childNode's preSegmentId = 13
[insertNode] [1213]: 13's startCoordinate: latitude = 40.343795, longitude = 116.819827
[insertNode] [1218]: 13's endCoordinate: latitude = 40.343892, longitude = 116.819527
[insertNode] [1112]: (*it)->preSegmentId = 15's segIsInTree = 0
[findNodeById] [789]: result = (nil)
[findNodeById] [789]: result = (nil)
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[findNodeById] [784]: result = 0x55aa40e5ab30
[insertNode] [1184]: tempNode is = 0x55aa40e5ab30, preSegmentId = 15, prevSegmentId = 13, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5ac10
[insertChildNode] [1056]: childNode = 0x55aa40e5ac10
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [182]: dX = 30.342789
[calcCurveXYOffset] [183]: dY = -8.755548
[coordinateSystemRotates] [119]: accumulateBranchAngle = -81.032025, accumulateBranchAngleRad = -1.414276
[coordinateSystemRotates] [120]: dX = 30.342789
[coordinateSystemRotates] [121]: dY = -8.755548
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = 0.155882
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.987776
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = 4.729906
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 8.648517
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -29.971868
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = -1.364836
[coordinateSystemRotates] [131]: coordinate system rotated X = -3.918611
[coordinateSystemRotates] [132]: coordinate system rotated Y = -31.336703
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -16.004173, accumulateXY.distanceY = 33.888258
[calcDestination] [78]: destinationCoord latitude = 40.343857  destinationCoord longitude = 116.819157
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343857  longitude = 116.819157
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = -113.223491
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = -113.223491
[insertNode] [1205]: childNode's preSegmentId = 15
[insertNode] [1213]: 15's startCoordinate: latitude = 40.343892, longitude = 116.819527
[insertNode] [1218]: 15's endCoordinate: latitude = 40.343857, longitude = 116.819157
[insertNode] [1112]: (*it)->preSegmentId = 17's segIsInTree = 0
[findNodeById] [789]: result = (nil)
[findNodeById] [789]: result = (nil)
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[findNodeById] [784]: result = 0x55aa40e5ac10
[insertNode] [1184]: tempNode is = 0x55aa40e5ac10, preSegmentId = 17, prevSegmentId = 15, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5acf0
[insertChildNode] [1056]: childNode = 0x55aa40e5acf0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 32.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 32.191466, arcRotationAngleRad = 0.561847, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.153727
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -8.755548
[calcCurveXYOffset] [182]: dX = 30.342789
[calcCurveXYOffset] [183]: dY = -8.755548
[coordinateSystemRotates] [119]: accumulateBranchAngle = -113.223491, accumulateBranchAngleRad = -1.976123
[coordinateSystemRotates] [120]: dX = 30.342789
[coordinateSystemRotates] [121]: dY = -8.755548
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.394319
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.918974
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -11.964730
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 8.046119
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -27.884227
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 3.452477
[coordinateSystemRotates] [131]: coordinate system rotated X = -20.010849
[coordinateSystemRotates] [132]: coordinate system rotated Y = -24.431750
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -36.015021, accumulateXY.distanceY = 9.456508
[calcDestination] [78]: destinationCoord latitude = 40.343677  destinationCoord longitude = 116.818869
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343677  longitude = 116.818869
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = -145.414957
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = -145.414957
[insertNode] [1205]: childNode's preSegmentId = 17
[insertNode] [1213]: 17's startCoordinate: latitude = 40.343857, longitude = 116.819157
[insertNode] [1218]: 17's endCoordinate: latitude = 40.343677, longitude = 116.818869
[insertNode] [1112]: (*it)->preSegmentId = 21's segIsInTree = 0
[findNodeById] [789]: result = (nil)
[findNodeById] [789]: result = (nil)
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[findNodeById] [784]: result = 0x55aa40e5acf0
[insertNode] [1184]: tempNode is = 0x55aa40e5acf0, preSegmentId = 21, prevSegmentId = 17, segIsInTree = 0
[createNode] [1048]: newNode = 0x55aa40e5add0
[insertChildNode] [1056]: childNode = 0x55aa40e5add0
[calcChildSegmentCoordinate] [190]: --------------------------Is childSegment--------------------------
[calcChildSegmentCoordinate] [247]: R = 56.955000
[calcChildSegmentCoordinate] [274]: finalRemainLength = 26.000000
[calcChildSegmentCoordinate] [278]: KL == Kstart
[calcCurveXYOffset] [176]: arcR = 56.955000, arcRotationAngle = 26.155566, arcRotationAngleRad = 0.456501, signCurvature = 0
[calcCurveXYOffset] [180]: cos(arcRotationAngleRad) - 1 = -0.102400
[calcCurveXYOffset] [181]: arcR * (cos(arcRotationAngleRad) - 1) = -5.832164
[calcCurveXYOffset] [182]: dX = 25.106327
[calcCurveXYOffset] [183]: dY = -5.832164
[coordinateSystemRotates] [119]: accumulateBranchAngle = -145.414957, accumulateBranchAngleRad = -2.537970
[coordinateSystemRotates] [120]: dX = 25.106327
[coordinateSystemRotates] [121]: dY = -5.832164
[coordinateSystemRotates] [122]: cos(accumulateBranchAngleRad) = -0.823285
[coordinateSystemRotates] [123]: sin(accumulateBranchAngleRad) = -0.567629
[coordinateSystemRotates] [124]: distanceX * cos(accumulateBranchAngleRad) = -20.669652
[coordinateSystemRotates] [125]: distanceY * sin(accumulateBranchAngleRad) = 3.310504
[coordinateSystemRotates] [126]: distanceX * sin(accumulateBranchAngleRad) = -14.251075
[coordinateSystemRotates] [127]: distanceY * cos(accumulateBranchAngleRad) = 4.801531
[coordinateSystemRotates] [131]: coordinate system rotated X = -23.980156
[coordinateSystemRotates] [132]: coordinate system rotated Y = -9.449545
[calcChildSegmentCoordinate] [284]: accumulateXY.distanceX = -59.995178, accumulateXY.distanceY = 0.006963
[calcDestination] [78]: destinationCoord latitude = 40.343462  destinationCoord longitude = 116.818758
[calcChildSegmentCoordinate] [286]: childSegment's endCoordinate latitude = 40.343462  longitude = 116.818758
[calcChildSegmentCoordinate] [290]: childNode->MapData.accumulateBranchAngle = -171.570523
[calcChildSegmentCoordinate] [292]: fixed childNode->MapData.accumulateBranchAngle = -171.570523
[insertNode] [1205]: childNode's preSegmentId = 21
[insertNode] [1213]: 21's startCoordinate: latitude = 40.343677, longitude = 116.818869
[insertNode] [1218]: 21's endCoordinate: latitude = 40.343462, longitude = 116.818758
[0;32m[       OK ] [mPsdMapTest.useRealRecordPsdWithCurve_phase2 (2 ms)
[0;32m[----------] [m1 test from PsdMapTest (2 ms total)

[0;32m[----------] [mGlobal test environment tear-down
[0;32m[==========] [m1 test from 1 test suite ran. (2 ms total)
[0;32m[  PASSED  ] [m1 test.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename PsdModule.info --test-name PsdModule --rc lcov_branch_coverage=1 --branch-coverage'
geninfo: WARNING: (deprecated) RC option 'lcov_branch_coverage' is deprecated.  Consider using 'branch_coverage. instead.  (Backward-compatible support will be removed in the future
	(use "geninfo --ignore-errors deprecated,deprecated ..." to suppress this warning)
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_datSZH2
Scanning . for .gcda files ...
Found 6 data files in .
using: chunkSize: 1, nchunks:6, intervalLength:0
Finished processing 6 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 23
  lines.......: 37.2% (656 of 1762 lines)
  functions...: 63.4% (241 of 380 functions)
  branches....: 19.3% (115 of 596 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile PsdModule.info.
Found 23 entries.
Found common filename prefix "/usr/include/c++"
Generating output.
Processing file 7/bits/move.h
  lines=13 hit=9 functions=11 hit=7
Processing file /home/zhao/Documents/Psd/src/GeometricCalc.cpp
  lines=29 hit=0 functions=1 hit=0
Processing file 7/bits/stl_algobase.h
  lines=37 hit=20 functions=33 hit=22 branches=14 hit=8
Processing file /home/zhao/Documents/Psd/src/Location.cpp
  lines=11 hit=1 functions=5 hit=2 branches=4 hit=2
Processing file 7/bits/stl_vector.h
  lines=121 hit=98 functions=79 hit=58 branches=38 hit=15
Processing file 7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file /home/zhao/Documents/Psd/src/Haversine.cpp
  lines=35 hit=19 functions=8 hit=5 branches=4 hit=2
Processing file 7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=4
Processing file 7/bits/vector.tcc
  lines=86 hit=53 functions=9 hit=6 branches=22 hit=8
Processing file 7/bits/stl_iterator.h
  lines=41 hit=30 functions=56 hit=38
Processing file 7/bits/ptr_traits.h
  lines=2 hit=0 functions=1 hit=0
Processing file 7/ext/new_allocator.h
  lines=15 hit=13 functions=22 hit=17 branches=14 hit=4
Processing file /home/zhao/Documents/Psd/inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file 7/bits/alloc_traits.h
  lines=22 hit=15 functions=21 hit=15
Processing file /home/zhao/Documents/Psd/src/PsdMessageDecoder.cpp
  lines=110 hit=14 functions=21 hit=7 branches=42 hit=4
Processing file 7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file /home/zhao/Documents/Psd/inc/PsdMap.h
  lines=1 hit=1 functions=1 hit=1
Processing file 7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=15
Processing file /home/zhao/Documents/Psd/src/PsdLocation.cpp
  lines=317 hit=1 functions=22 hit=2 branches=222 hit=2
Processing file 7/bits/allocator.h
  lines=6 hit=4 functions=7 hit=5
Processing file /home/zhao/Documents/Psd/src/PsdMap.cpp
  lines=887 hit=351 functions=38 hit=17 branches=236 hit=70
Processing file 7/new
  lines=2 hit=2 functions=1 hit=1
Processing file 7/iostream
  lines=1 hit=1
Overall coverage rate:
  source files: 23
  lines.......: 37.2% (656 of 1762 lines)
  functions...: 63.4% (241 of 380 functions)
  branches....: 19.3% (115 of 596 branches)
Message summary:
  no messages were reported
]0;zhao@zhao-virtual-machine: ~/Documents/Psd[01;32mzhao@zhao-virtual-machine[00m:[01;34m~/Documents/Psd[00m$ ./build.sh script Log/Psd.log[7P./build.sh script Log/Psd.logclear[K./build.sh script Log/Psd.logclear[Kscript Log/Psd.log[7Pgit status [3Ppushstatus commit --no-edit --allow-empty-mes
ssage[A
]0;zhao@zhao-virtual-machine: ~/Documents/Psd[01;32mzhao@zhao-virtual-machine[00m:[01;34m~/Documents/Psd[00m$ [C[C[C[Cadd .[K

[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cstatus [3Ppushcommit -m "有些路段如52路段的起始曲
曲率、终止曲率正负不一致，对两端曲率取均值，不用ppt里的公式很明显不对。相对于上 一
一版代码跑的结果只有52、53路段点不一样，其他都一样。因47之前的不被影响，47之后的5
50后面的也不被影响。"[A[A[A
]0;zhao@zhao-virtual-machine: ~/Documents/Psd[01;32mzhao@zhao-virtual-machine[00m:[01;34m~/Documents/Psd[00m$ [C[C[C[C[10Padd Psd/src/PsdMap.cpp 

[K

[K

[K[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cstatus [K[7Pexit./build.sh [7Pexit
exit

Script done on 2024-01-08 13:39:54+0800
