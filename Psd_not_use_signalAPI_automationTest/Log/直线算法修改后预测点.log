-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/zhao/Documents/Psd/build
[ 12%] Building CXX object CMakeFiles/PsdModule.dir/src/GeometricCalc.cpp.o
[ 25%] Building CXX object CMakeFiles/PsdModule.dir/src/Haversine.cpp.o
[ 37%] Building CXX object CMakeFiles/PsdModule.dir/src/Location.cpp.o
[ 50%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdLocation.cpp.o
[ 62%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMap.cpp.o
[ 75%] Building CXX object CMakeFiles/PsdModule.dir/src/PsdMessageDecoder.cpp.o
[ 87%] Building CXX object CMakeFiles/PsdModule.dir/gtest/src/PsdTest.cpp.o
[100%] Linking CXX executable /home/zhao/Documents/Psd/gtest/output/bin/PsdModule
[100%] Built target PsdModule
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from PsdMapTest
[ RUN      ] PsdMapTest.useRealRecordPsdWithSP
open successfully
[TestBody] [4078]: preSegmentId = 2
[TestBody] [4092]: prevSegmentId = 2
[TestBody] [4105]: preSegTotalLength = 102
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 6.150000
[TestBody] [4078]: preSegmentId = 3
[TestBody] [4092]: prevSegmentId = 2
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 4
[TestBody] [4092]: prevSegmentId = 3
[TestBody] [4105]: preSegTotalLength = 96
[TestBody] [4078]: preSegmentId = 5
[TestBody] [4092]: prevSegmentId = 3
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 6
[TestBody] [4092]: prevSegmentId = 5
[TestBody] [4105]: preSegTotalLength = 32
[TestBody] [4078]: preSegmentId = 7
[TestBody] [4092]: prevSegmentId = 6
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 7.950000
[TestBody] [4078]: preSegmentId = 8
[TestBody] [4092]: prevSegmentId = 4
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 9
[TestBody] [4092]: prevSegmentId = 8
[TestBody] [4105]: preSegTotalLength = 8
[TestBody] [4078]: preSegmentId = 10
[TestBody] [4092]: prevSegmentId = 8
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 11
[TestBody] [4092]: prevSegmentId = 9
[TestBody] [4105]: preSegTotalLength = 82
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 7.650000
[TestBody] [4078]: preSegmentId = 12
[TestBody] [4092]: prevSegmentId = 11
[TestBody] [4105]: preSegTotalLength = 30
[TestBody] [4078]: preSegmentId = 13
[TestBody] [4092]: prevSegmentId = 12
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 14
[TestBody] [4092]: prevSegmentId = 12
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 15
[TestBody] [4092]: prevSegmentId = 12
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 5.550000
[TestBody] [4078]: preSegmentId = 16
[TestBody] [4092]: prevSegmentId = 13
[TestBody] [4105]: preSegTotalLength = 86
[TestBody] [4078]: preSegmentId = 17
[TestBody] [4092]: prevSegmentId = 13
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 18
[TestBody] [4092]: prevSegmentId = 13
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 19
[TestBody] [4092]: prevSegmentId = 16
[TestBody] [4105]: preSegTotalLength = 52
[TestBody] [4333]: hvHeading = 0.000000
[TestBody] [4344]: headingAccuracy = 4.050000
[TestBody] [4078]: preSegmentId = 20
[TestBody] [4092]: prevSegmentId = 19
[TestBody] [4105]: preSegTotalLength = 118
[TestBody] [4078]: preSegmentId = 21
[TestBody] [4092]: prevSegmentId = 20
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 22
[TestBody] [4092]: prevSegmentId = 21
[TestBody] [4105]: preSegTotalLength = 46
[TestBody] [4078]: preSegmentId = 23
[TestBody] [4092]: prevSegmentId = 21
[TestBody] [4105]: preSegTotalLength = 14
[TestBody] [4218]: curSegmentId = 2
[TestBody] [4230]: curRemainLength = 84
[TestBody] [4078]: preSegmentId = 24
[TestBody] [4092]: prevSegmentId = 22
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4297]: curSegment's latitude = 40.353891
[TestBody] [4316]: curSegment's longitude = 116.821331
[TestBody] [4333]: hvHeading = 358.300000
[TestBody] [4078]: preSegmentId = 25
[TestBody] [4092]: prevSegmentId = 22
[TestBody] [4105]: preSegTotalLength = 38
[TestBody] [4078]: preSegmentId = 26
[TestBody] [4092]: prevSegmentId = 22
[TestBody] [4105]: preSegTotalLength = 120
[TestBody] [4078]: preSegmentId = 27
[TestBody] [4092]: prevSegmentId = 24
[TestBody] [4105]: preSegTotalLength = 110
[TestBody] [4078]: preSegmentId = 28
[TestBody] [4092]: prevSegmentId = 27
[TestBody] [4105]: preSegTotalLength = 34
[TestBody] [4078]: preSegmentId = 29
[TestBody] [4092]: prevSegmentId = 27
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 30
[TestBody] [4092]: prevSegmentId = 28
[TestBody] [4105]: preSegTotalLength = 62
[TestBody] [4078]: preSegmentId = 31
[TestBody] [4092]: prevSegmentId = 28
[TestBody] [4105]: preSegTotalLength = 10
[TestBody] [4078]: preSegmentId = 32
[TestBody] [4092]: prevSegmentId = 30
[TestBody] [4105]: preSegTotalLength = 66
[TestBody] [4078]: preSegmentId = 33
[TestBody] [4092]: prevSegmentId = 30
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 34
[TestBody] [4092]: prevSegmentId = 10
[TestBody] [4105]: preSegTotalLength = 34
[TestBody] [4078]: preSegmentId = 35
[TestBody] [4092]: prevSegmentId = 34
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4078]: preSegmentId = 36
[TestBody] [4092]: prevSegmentId = 32
[TestBody] [4105]: preSegTotalLength = 12
[TestBody] [4078]: preSegmentId = 37
[TestBody] [4092]: prevSegmentId = 32
[TestBody] [4105]: preSegTotalLength = 72
[TestBody] [4078]: preSegmentId = 38
[TestBody] [4092]: prevSegmentId = 14
[TestBody] [4105]: preSegTotalLength = 60
[TestBody] [4078]: preSegmentId = 39
[TestBody] [4092]: prevSegmentId = 14
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 40
[TestBody] [4092]: prevSegmentId = 36
[TestBody] [4105]: preSegTotalLength = 22
[TestBody] [4078]: preSegmentId = 41
[TestBody] [4092]: prevSegmentId = 18
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 42
[TestBody] [4092]: prevSegmentId = 18
[TestBody] [4105]: preSegTotalLength = 80
[TestBody] [4078]: preSegmentId = 43
[TestBody] [4092]: prevSegmentId = 38
[TestBody] [4105]: preSegTotalLength = 30
[TestBody] [4078]: preSegmentId = 44
[TestBody] [4092]: prevSegmentId = 43
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 45
[TestBody] [4092]: prevSegmentId = 43
[TestBody] [4105]: preSegTotalLength = 42
[TestBody] [4078]: preSegmentId = 46
[TestBody] [4092]: prevSegmentId = 42
[TestBody] [4105]: preSegTotalLength = 28
[TestBody] [4078]: preSegmentId = 47
[TestBody] [4092]: prevSegmentId = 44
[TestBody] [4105]: preSegTotalLength = 20
[TestBody] [4078]: preSegmentId = 48
[TestBody] [4092]: prevSegmentId = 44
[TestBody] [4105]: preSegTotalLength = 38
[TestBody] [4078]: preSegmentId = 49
[TestBody] [4092]: prevSegmentId = 45
[TestBody] [4105]: preSegTotalLength = 120
[TestBody] [4078]: preSegmentId = 50
[TestBody] [4092]: prevSegmentId = 45
[TestBody] [4105]: preSegTotalLength = 90
[TestBody] [4078]: preSegmentId = 51
[TestBody] [4092]: prevSegmentId = 46
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 52
[TestBody] [4092]: prevSegmentId = 48
[TestBody] [4105]: preSegTotalLength = 52
[TestBody] [4078]: preSegmentId = 53
[TestBody] [4092]: prevSegmentId = 51
[TestBody] [4105]: preSegTotalLength = 16
[TestBody] [4078]: preSegmentId = 54
[TestBody] [4092]: prevSegmentId = 51
[TestBody] [4105]: preSegTotalLength = 18
[TestBody] [4078]: preSegmentId = 55
[TestBody] [4092]: prevSegmentId = 51
[TestBody] [4105]: preSegTotalLength = 16
[TestBody] [4078]: preSegmentId = 56
[TestBody] [4092]: prevSegmentId = 55
[TestBody] [4105]: preSegTotalLength = 80
[TestBody] [4078]: preSegmentId = 56
[TestBody] [4092]: prevSegmentId = 55
[TestBody] [4105]: preSegTotalLength = 80
[TestBody] [4078]: preSegmentId = 57
[TestBody] [4092]: prevSegmentId = 54
[TestBody] [4105]: preSegTotalLength = 16
[TestBody] [4078]: preSegmentId = 58
[TestBody] [4092]: prevSegmentId = 54
[TestBody] [4105]: preSegTotalLength = 14
[TestBody] [4078]: preSegmentId = 58
[TestBody] [4092]: prevSegmentId = 54
[TestBody] [4105]: preSegTotalLength = 14
[TestBody] [4078]: preSegmentId = 59
[TestBody] [4092]: prevSegmentId = 57
[TestBody] [4105]: preSegTotalLength = 10
[TestBody] [4078]: preSegmentId = 60
[TestBody] [4092]: prevSegmentId = 57
[TestBody] [4105]: preSegTotalLength = 112
[TestBody] [4078]: preSegmentId = 61
[TestBody] [4092]: prevSegmentId = 59
[TestBody] [4105]: preSegTotalLength = 22
[TestBody] [4078]: preSegmentId = 62
[TestBody] [4092]: prevSegmentId = 56
[TestBody] [4105]: preSegTotalLength = 34
[TestBody] [4078]: preSegmentId = 63
[TestBody] [4092]: prevSegmentId = 23
[TestBody] [4105]: preSegTotalLength = 6
[getInstance] [51]: first new a pInstance
[mapCreate] [1473]: --------------------------mapCreate--------------------------
[mapCreate] [1474]: hv's longitude = 116.821331, latitude = 40.353891, hvHeading = 358.300000
[createNode] [1129]: newNode = 0x5612b5da9bc0
[insertNodeInTree] [1281]: curNode = 0x5612b5da9bc0
[curIdIsInList] [1488]: curSegmentId is in list = 2
[insertNodeInTree] [1307]: count = 1
[insertNodeInTree] [1308]: current tree is = 0x5612b5da9bc0, current tree Id is = 2, curSegmentId is = 2
[calcCurSegmentCoordinate] [558]: --------------------------Is curSegment or rootAndcurSegment--------------------------
[calcStraightXYOffset] [204]: Length = 84.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 84.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 358.300000, accumulateBranchAngleRad = 6.253515
[coordinateSystemRotates] [182]: dX = 84.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 83.963028
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -2.491965
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 83.963028
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -2.491965
[coordinateSystemRotates] [195]: coordinate system rotated X = 83.963028
[coordinateSystemRotates] [196]: coordinate system rotated Y = -2.491965
[calcCurSegmentCoordinate] [573]: disHv2EndAfterRotatingCoord.distanceX = 83.963028, disHv2EndAfterRotatingCoord.distanceY = -2.491965
[calcDestination] [78]: destinationCoord latitude = 40.354645  destinationCoord longitude = 116.821302
[calcCurSegmentCoordinate] [576]: HV's endCoordinate latitude = 40.354645  longitude = 116.821302
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = 180.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 3.141593
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -18.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 358.300000, accumulateBranchAngleRad = 6.253515
[coordinateSystemRotates] [182]: dX = -18.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -17.992077
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.533992
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -17.992077
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.533992
[coordinateSystemRotates] [195]: coordinate system rotated X = -17.992077
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.533992
[calcCurSegmentCoordinate] [585]: disHv2StartAfterRotatingCoord.distanceX = -17.992077, disHv2StartAfterRotatingCoord.distanceY = 0.533992
[calcDestination] [78]: destinationCoord latitude = 40.353729  destinationCoord longitude = 116.821337
[calcCurSegmentCoordinate] [588]: HV's startCoordinate latitude = 40.353729  longitude = 116.821337
[calcCurSegmentCoordinate] [591]: fixed for next point accumulateBranchAngleHv2Start = 178.300000
[displayNodeCoordinate] [114]: 2's startCoordinate: latitude = 40.353729, longitude = 116.821337
[displayNodeCoordinate] [115]: 2's endCoordinate: latitude = 40.354645, longitude = 116.821302
[insertNode] [1193]: (*it)->preSegmentId = 2's segIsInTree = 1
[insertNode] [1235]: root or parent nodes are already in tree
[insertNode] [1241]: tempNode is = 0x5612b5da9bc0, preSegmentId = 2, prevSegmentId = 2, segIsInTree = 1
[insertNode] [1268]: some nodes are already in tree
[insertNode] [1193]: (*it)->preSegmentId = 3's segIsInTree = 0
[insertNode] [1241]: tempNode is = 0x5612b5da9bc0, preSegmentId = 3, prevSegmentId = 2, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5da9c90
[insertChildNode] [1137]: childNode = 0x5612b5da9c90
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 20.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 358.300000, accumulateBranchAngleRad = 6.253515
[coordinateSystemRotates] [182]: dX = 20.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 19.991197
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.593325
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.991197
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.593325
[coordinateSystemRotates] [195]: coordinate system rotated X = 19.991197
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.593325
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 103.954225, accumulateXY.distanceY = -3.085289
[calcDestination] [78]: destinationCoord latitude = 40.354825  destinationCoord longitude = 116.821295
[insertNode] [1263]: childNode's preSegmentId = 3
[displayNodeCoordinate] [114]: 3's startCoordinate: latitude = 40.354645, longitude = 116.821302
[displayNodeCoordinate] [115]: 3's endCoordinate: latitude = 40.354825, longitude = 116.821295
[insertNode] [1193]: (*it)->preSegmentId = 4's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5da9c90
[insertNode] [1241]: tempNode is = 0x5612b5da9c90, preSegmentId = 4, prevSegmentId = 3, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5da9d60
[insertChildNode] [1137]: childNode = 0x5612b5da9d60
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 96.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 95.970629
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 2.374505
[coordinateSystemRotates] [181]: accumulateBranchAngle = 358.300000, accumulateBranchAngleRad = 6.253515
[coordinateSystemRotates] [182]: dX = 95.970629
[coordinateSystemRotates] [183]: dY = 2.374505
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 95.928389
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.070443
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -2.847088
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 2.373460
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 95.998832
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.473628
[coordinateSystemRotates] [195]: coordinate system rotated X = 95.998832
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.473628
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 199.953057, accumulateXY.distanceY = -3.558917
[calcDestination] [78]: destinationCoord latitude = 40.355687  destinationCoord longitude = 116.821289
[insertNode] [1263]: childNode's preSegmentId = 4
[displayNodeCoordinate] [114]: 4's startCoordinate: latitude = 40.354825, longitude = 116.821295
[displayNodeCoordinate] [115]: 4's endCoordinate: latitude = 40.355687, longitude = 116.821289
[insertNode] [1193]: (*it)->preSegmentId = 5's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5da9c90
[insertNode] [1241]: tempNode is = 0x5612b5da9c90, preSegmentId = 5, prevSegmentId = 3, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5da9e30
[insertChildNode] [1137]: childNode = 0x5612b5da9e30
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.667748
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 17.987610
[coordinateSystemRotates] [181]: accumulateBranchAngle = -1.700000, accumulateBranchAngleRad = -0.029671
[coordinateSystemRotates] [182]: dX = -0.667748
[coordinateSystemRotates] [183]: dY = 17.987610
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.667454
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.533625
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.019810
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 17.979693
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.133829
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 17.999502
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.133829
[coordinateSystemRotates] [196]: coordinate system rotated Y = 17.999502
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 103.820396, accumulateXY.distanceY = 14.914213
[calcDestination] [78]: destinationCoord latitude = 40.354824  destinationCoord longitude = 116.821507
[insertNode] [1263]: childNode's preSegmentId = 5
[displayNodeCoordinate] [114]: 5's startCoordinate: latitude = 40.354825, longitude = 116.821295
[displayNodeCoordinate] [115]: 5's endCoordinate: latitude = 40.354824, longitude = 116.821507
[insertNode] [1193]: (*it)->preSegmentId = 6's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5da9e30
[findNodeById] [861]: result = 0x5612b5da9e30
[insertNode] [1241]: tempNode is = 0x5612b5da9e30, preSegmentId = 6, prevSegmentId = 5, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5da9f00
[insertChildNode] [1137]: childNode = 0x5612b5da9f00
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 32.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 31.990210
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.791502
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = 31.990210
[coordinateSystemRotates] [183]: dY = 0.791502
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.237846
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.791480
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 31.989326
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.005885
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.029325
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 31.983441
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.029325
[coordinateSystemRotates] [196]: coordinate system rotated Y = 31.983441
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 102.791071, accumulateXY.distanceY = 46.897654
[calcDestination] [78]: destinationCoord latitude = 40.354814  destinationCoord longitude = 116.821884
[insertNode] [1263]: childNode's preSegmentId = 6
[displayNodeCoordinate] [114]: 6's startCoordinate: latitude = 40.354824, longitude = 116.821507
[displayNodeCoordinate] [115]: 6's endCoordinate: latitude = 40.354814, longitude = 116.821884
[insertNode] [1193]: (*it)->preSegmentId = 7's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5da9f00
[findNodeById] [861]: result = 0x5612b5da9f00
[findNodeById] [861]: result = 0x5612b5da9f00
[insertNode] [1241]: tempNode is = 0x5612b5da9f00, preSegmentId = 7, prevSegmentId = 6, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5da9fd0
[insertChildNode] [1137]: childNode = 0x5612b5da9fd0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -3.602639
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 111.942043
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -3.602639
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 111.942043
[coordinateSystemRotates] [195]: coordinate system rotated X = -3.602639
[coordinateSystemRotates] [196]: coordinate system rotated Y = 111.942043
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 99.188432, accumulateXY.distanceY = 158.839697
[calcDestination] [78]: destinationCoord latitude = 40.354782  destinationCoord longitude = 116.823203
[insertNode] [1263]: childNode's preSegmentId = 7
[displayNodeCoordinate] [114]: 7's startCoordinate: latitude = 40.354814, longitude = 116.821884
[displayNodeCoordinate] [115]: 7's endCoordinate: latitude = 40.354782, longitude = 116.823203
[insertNode] [1193]: (*it)->preSegmentId = 8's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5da9d60
[findNodeById] [861]: result = 0x5612b5da9d60
[insertNode] [1241]: tempNode is = 0x5612b5da9d60, preSegmentId = 8, prevSegmentId = 4, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa0a0
[insertChildNode] [1137]: childNode = 0x5612b5daa0a0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 20.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 359.717323, accumulateBranchAngleRad = 6.278252
[coordinateSystemRotates] [182]: dX = 20.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 19.999757
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.098672
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.999757
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.098672
[coordinateSystemRotates] [195]: coordinate system rotated X = 19.999757
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.098672
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 219.952814, accumulateXY.distanceY = -3.657590
[calcDestination] [78]: destinationCoord latitude = 40.355867  destinationCoord longitude = 116.821288
[insertNode] [1263]: childNode's preSegmentId = 8
[displayNodeCoordinate] [114]: 8's startCoordinate: latitude = 40.355687, longitude = 116.821289
[displayNodeCoordinate] [115]: 8's endCoordinate: latitude = 40.355867, longitude = 116.821288
[insertNode] [1193]: (*it)->preSegmentId = 9's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa0a0
[findNodeById] [861]: result = 0x5612b5daa0a0
[findNodeById] [861]: result = 0x5612b5daa0a0
[insertNode] [1241]: tempNode is = 0x5612b5daa0a0, preSegmentId = 9, prevSegmentId = 8, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa170
[insertChildNode] [1137]: childNode = 0x5612b5daa170
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 8.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 7.997552
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.197875
[coordinateSystemRotates] [181]: accumulateBranchAngle = -0.282677, accumulateBranchAngleRad = -0.004934
[coordinateSystemRotates] [182]: dX = 7.997552
[coordinateSystemRotates] [183]: dY = 0.197875
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 7.997455
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000976
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.039457
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.197873
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 7.998431
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.158416
[coordinateSystemRotates] [195]: coordinate system rotated X = 7.998431
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.158416
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 227.951245, accumulateXY.distanceY = -3.499174
[calcDestination] [78]: destinationCoord latitude = 40.355939  destinationCoord longitude = 116.821290
[insertNode] [1263]: childNode's preSegmentId = 9
[displayNodeCoordinate] [114]: 9's startCoordinate: latitude = 40.355867, longitude = 116.821288
[displayNodeCoordinate] [115]: 9's endCoordinate: latitude = 40.355939, longitude = 116.821290
[insertNode] [1193]: (*it)->preSegmentId = 10's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa0a0
[findNodeById] [861]: result = 0x5612b5daa0a0
[findNodeById] [861]: result = 0x5612b5daa0a0
[insertNode] [1241]: tempNode is = 0x5612b5daa0a0, preSegmentId = 10, prevSegmentId = 8, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa240
[insertChildNode] [1137]: childNode = 0x5612b5daa240
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.667748
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 17.987610
[coordinateSystemRotates] [181]: accumulateBranchAngle = -0.282677, accumulateBranchAngleRad = -0.004934
[coordinateSystemRotates] [182]: dX = -0.667748
[coordinateSystemRotates] [183]: dY = 17.987610
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.667740
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.088744
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.003294
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 17.987391
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.578996
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 17.990685
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.578996
[coordinateSystemRotates] [196]: coordinate system rotated Y = 17.990685
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 219.373818, accumulateXY.distanceY = 14.333096
[calcDestination] [78]: destinationCoord latitude = 40.355862  destinationCoord longitude = 116.821500
[insertNode] [1263]: childNode's preSegmentId = 10
[displayNodeCoordinate] [114]: 10's startCoordinate: latitude = 40.355867, longitude = 116.821288
[displayNodeCoordinate] [115]: 10's endCoordinate: latitude = 40.355862, longitude = 116.821500
[insertNode] [1193]: (*it)->preSegmentId = 11's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa170
[findNodeById] [861]: result = 0x5612b5daa170
[findNodeById] [861]: result = 0x5612b5daa170
[findNodeById] [861]: result = 0x5612b5daa170
[insertNode] [1241]: tempNode is = 0x5612b5daa170, preSegmentId = 11, prevSegmentId = 9, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa310
[insertChildNode] [1137]: childNode = 0x5612b5daa310
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 82.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 82.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 82.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 81.983922
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.623765
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 81.983922
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.623765
[coordinateSystemRotates] [195]: coordinate system rotated X = 81.983922
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.623765
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 309.935167, accumulateXY.distanceY = -1.875409
[calcDestination] [78]: destinationCoord latitude = 40.356675  destinationCoord longitude = 116.821309
[insertNode] [1263]: childNode's preSegmentId = 11
[displayNodeCoordinate] [114]: 11's startCoordinate: latitude = 40.355939, longitude = 116.821290
[displayNodeCoordinate] [115]: 11's endCoordinate: latitude = 40.356675, longitude = 116.821309
[insertNode] [1193]: (*it)->preSegmentId = 12's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa310
[findNodeById] [861]: result = 0x5612b5daa310
[findNodeById] [861]: result = 0x5612b5daa310
[findNodeById] [861]: result = 0x5612b5daa310
[findNodeById] [861]: result = 0x5612b5daa310
[insertNode] [1241]: tempNode is = 0x5612b5daa310, preSegmentId = 12, prevSegmentId = 11, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa3e0
[insertChildNode] [1137]: childNode = 0x5612b5daa3e0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 30.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 30.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 30.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 29.994118
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.594060
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 29.994118
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.594060
[coordinateSystemRotates] [195]: coordinate system rotated X = 29.994118
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.594060
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 339.929284, accumulateXY.distanceY = -1.281348
[calcDestination] [78]: destinationCoord latitude = 40.356945  destinationCoord longitude = 116.821316
[insertNode] [1263]: childNode's preSegmentId = 12
[displayNodeCoordinate] [114]: 12's startCoordinate: latitude = 40.356675, longitude = 116.821309
[displayNodeCoordinate] [115]: 12's endCoordinate: latitude = 40.356945, longitude = 116.821316
[insertNode] [1193]: (*it)->preSegmentId = 13's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[insertNode] [1241]: tempNode is = 0x5612b5daa3e0, preSegmentId = 13, prevSegmentId = 12, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa4b0
[insertChildNode] [1137]: childNode = 0x5612b5daa4b0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 17.994493
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -0.445220
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 17.994493
[coordinateSystemRotates] [183]: dY = -0.445220
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 17.990965
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.008816
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.356327
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.445132
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 17.999781
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.088805
[coordinateSystemRotates] [195]: coordinate system rotated X = 17.999781
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.088805
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 357.929065, accumulateXY.distanceY = -1.370153
[calcDestination] [78]: destinationCoord latitude = 40.357106  destinationCoord longitude = 116.821315
[insertNode] [1263]: childNode's preSegmentId = 13
[displayNodeCoordinate] [114]: 13's startCoordinate: latitude = 40.356945, longitude = 116.821316
[displayNodeCoordinate] [115]: 13's endCoordinate: latitude = 40.357106, longitude = 116.821315
[insertNode] [1193]: (*it)->preSegmentId = 14's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[insertNode] [1241]: tempNode is = 0x5612b5daa3e0, preSegmentId = 14, prevSegmentId = 12, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa580
[insertChildNode] [1137]: childNode = 0x5612b5daa580
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = 1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.148416
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 11.999082
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 0.148416
[coordinateSystemRotates] [183]: dY = 11.999082
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.148387
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.237606
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.002939
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 11.996729
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.089219
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 11.999668
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.089219
[coordinateSystemRotates] [196]: coordinate system rotated Y = 11.999668
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 339.840065, accumulateXY.distanceY = 10.718320
[calcDestination] [78]: destinationCoord latitude = 40.356944  destinationCoord longitude = 116.821457
[insertNode] [1263]: childNode's preSegmentId = 14
[displayNodeCoordinate] [114]: 14's startCoordinate: latitude = 40.356945, longitude = 116.821316
[displayNodeCoordinate] [115]: 14's endCoordinate: latitude = 40.356944, longitude = 116.821457
[insertNode] [1193]: (*it)->preSegmentId = 15's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[findNodeById] [861]: result = 0x5612b5daa3e0
[insertNode] [1241]: tempNode is = 0x5612b5daa3e0, preSegmentId = 15, prevSegmentId = 12, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa650
[insertChildNode] [1137]: childNode = 0x5612b5daa650
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.247360
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -19.998470
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 0.247360
[coordinateSystemRotates] [183]: dY = -19.998470
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.247311
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.396010
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.004898
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -19.994549
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.643321
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -19.989651
[coordinateSystemRotates] [195]: coordinate system rotated X = 0.643321
[coordinateSystemRotates] [196]: coordinate system rotated Y = -19.989651
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 340.572605, accumulateXY.distanceY = -21.270999
[calcDestination] [78]: destinationCoord latitude = 40.356950  destinationCoord longitude = 116.821080
[insertNode] [1263]: childNode's preSegmentId = 15
[displayNodeCoordinate] [114]: 15's startCoordinate: latitude = 40.356945, longitude = 116.821316
[displayNodeCoordinate] [115]: 15's endCoordinate: latitude = 40.356950, longitude = 116.821080
[insertNode] [1193]: (*it)->preSegmentId = 16's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[insertNode] [1241]: tempNode is = 0x5612b5daa4b0, preSegmentId = 16, prevSegmentId = 13, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa720
[insertChildNode] [1137]: childNode = 0x5612b5daa720
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 86.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 85.973689
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 2.127161
[coordinateSystemRotates] [181]: accumulateBranchAngle = -0.282677, accumulateBranchAngleRad = -0.004934
[coordinateSystemRotates] [182]: dX = 85.973689
[coordinateSystemRotates] [183]: dY = 2.127161
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 85.972643
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.010495
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.424162
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 2.127135
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 85.983137
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.702973
[coordinateSystemRotates] [195]: coordinate system rotated X = 85.983137
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.702973
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 443.912202, accumulateXY.distanceY = 0.332820
[calcDestination] [78]: destinationCoord latitude = 40.357879  destinationCoord longitude = 116.821335
[insertNode] [1263]: childNode's preSegmentId = 16
[displayNodeCoordinate] [114]: 16's startCoordinate: latitude = 40.357106, longitude = 116.821315
[displayNodeCoordinate] [115]: 16's endCoordinate: latitude = 40.357879, longitude = 116.821335
[insertNode] [1193]: (*it)->preSegmentId = 17's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[insertNode] [1241]: tempNode is = 0x5612b5daa4b0, preSegmentId = 17, prevSegmentId = 13, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa7f0
[insertChildNode] [1137]: childNode = 0x5612b5daa7f0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.445165
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 11.991740
[coordinateSystemRotates] [181]: accumulateBranchAngle = -0.282677, accumulateBranchAngleRad = -0.004934
[coordinateSystemRotates] [182]: dX = -0.445165
[coordinateSystemRotates] [183]: dY = 11.991740
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.445160
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.059163
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.002196
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 11.991594
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.385997
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 11.993790
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.385997
[coordinateSystemRotates] [196]: coordinate system rotated Y = 11.993790
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 357.543068, accumulateXY.distanceY = 10.623637
[calcDestination] [78]: destinationCoord latitude = 40.357103  destinationCoord longitude = 116.821456
[insertNode] [1263]: childNode's preSegmentId = 17
[displayNodeCoordinate] [114]: 17's startCoordinate: latitude = 40.357106, longitude = 116.821315
[displayNodeCoordinate] [115]: 17's endCoordinate: latitude = 40.357103, longitude = 116.821456
[insertNode] [1193]: (*it)->preSegmentId = 18's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[findNodeById] [861]: result = 0x5612b5daa4b0
[insertNode] [1241]: tempNode is = 0x5612b5daa4b0, preSegmentId = 18, prevSegmentId = 13, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa8c0
[insertChildNode] [1137]: childNode = 0x5612b5daa8c0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = -87.874026
[calcStraightXYOffset] [206]: BranchAngleRad = -1.533691
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.741935
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -19.986234
[coordinateSystemRotates] [181]: accumulateBranchAngle = -0.282677, accumulateBranchAngleRad = -0.004934
[coordinateSystemRotates] [182]: dX = 0.741935
[coordinateSystemRotates] [183]: dY = -19.986234
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999988
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.004934
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.741926
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.098605
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.003660
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -19.985990
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.643321
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -19.989651
[coordinateSystemRotates] [195]: coordinate system rotated X = 0.643321
[coordinateSystemRotates] [196]: coordinate system rotated Y = -19.989651
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 358.572386, accumulateXY.distanceY = -21.359804
[calcDestination] [78]: destinationCoord latitude = 40.357112  destinationCoord longitude = 116.821079
[insertNode] [1263]: childNode's preSegmentId = 18
[displayNodeCoordinate] [114]: 18's startCoordinate: latitude = 40.357106, longitude = 116.821315
[displayNodeCoordinate] [115]: 18's endCoordinate: latitude = 40.357112, longitude = 116.821079
[insertNode] [1193]: (*it)->preSegmentId = 19's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa720
[findNodeById] [861]: result = 0x5612b5daa720
[findNodeById] [861]: result = 0x5612b5daa720
[findNodeById] [861]: result = 0x5612b5daa720
[findNodeById] [861]: result = 0x5612b5daa720
[findNodeById] [861]: result = 0x5612b5daa720
[findNodeById] [861]: result = 0x5612b5daa720
[findNodeById] [861]: result = 0x5612b5daa720
[insertNode] [1241]: tempNode is = 0x5612b5daa720, preSegmentId = 19, prevSegmentId = 16, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daa990
[insertChildNode] [1137]: childNode = 0x5612b5daa990
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 52.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 52.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 52.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 51.989804
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.029705
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 51.989804
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.029705
[coordinateSystemRotates] [195]: coordinate system rotated X = 51.989804
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.029705
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 495.902006, accumulateXY.distanceY = 1.362525
[calcDestination] [78]: destinationCoord latitude = 40.358346  destinationCoord longitude = 116.821347
[insertNode] [1263]: childNode's preSegmentId = 19
[displayNodeCoordinate] [114]: 19's startCoordinate: latitude = 40.357879, longitude = 116.821335
[displayNodeCoordinate] [115]: 19's endCoordinate: latitude = 40.358346, longitude = 116.821347
[insertNode] [1193]: (*it)->preSegmentId = 20's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[findNodeById] [861]: result = 0x5612b5daa990
[insertNode] [1241]: tempNode is = 0x5612b5daa990, preSegmentId = 20, prevSegmentId = 19, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daaa60
[insertChildNode] [1137]: childNode = 0x5612b5daaa60
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 118.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 118.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 118.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 117.976863
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.336638
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 117.976863
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.336638
[coordinateSystemRotates] [195]: coordinate system rotated X = 117.976863
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.336638
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 613.878869, accumulateXY.distanceY = 3.699162
[calcDestination] [78]: destinationCoord latitude = 40.359406  destinationCoord longitude = 116.821375
[insertNode] [1263]: childNode's preSegmentId = 20
[displayNodeCoordinate] [114]: 20's startCoordinate: latitude = 40.358346, longitude = 116.821347
[displayNodeCoordinate] [115]: 20's endCoordinate: latitude = 40.359406, longitude = 116.821375
[insertNode] [1193]: (*it)->preSegmentId = 21's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[findNodeById] [861]: result = 0x5612b5daaa60
[insertNode] [1241]: tempNode is = 0x5612b5daaa60, preSegmentId = 21, prevSegmentId = 20, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daab30
[insertChildNode] [1137]: childNode = 0x5612b5daab30
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 20.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 20.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 19.996078
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.396040
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.996078
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.396040
[coordinateSystemRotates] [195]: coordinate system rotated X = 19.996078
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.396040
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 633.874947, accumulateXY.distanceY = 4.095203
[calcDestination] [78]: destinationCoord latitude = 40.359585  destinationCoord longitude = 116.821379
[insertNode] [1263]: childNode's preSegmentId = 21
[displayNodeCoordinate] [114]: 21's startCoordinate: latitude = 40.359406, longitude = 116.821375
[displayNodeCoordinate] [115]: 21's endCoordinate: latitude = 40.359585, longitude = 116.821379
[insertNode] [1193]: (*it)->preSegmentId = 22's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[insertNode] [1241]: tempNode is = 0x5612b5daab30, preSegmentId = 22, prevSegmentId = 21, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daac00
[insertChildNode] [1137]: childNode = 0x5612b5daac00
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 46.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 46.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 46.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 45.990980
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.910893
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 45.990980
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.910893
[coordinateSystemRotates] [195]: coordinate system rotated X = 45.990980
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.910893
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 679.865928, accumulateXY.distanceY = 5.006095
[calcDestination] [78]: destinationCoord latitude = 40.359998  destinationCoord longitude = 116.821390
[insertNode] [1263]: childNode's preSegmentId = 22
[displayNodeCoordinate] [114]: 22's startCoordinate: latitude = 40.359585, longitude = 116.821379
[displayNodeCoordinate] [115]: 22's endCoordinate: latitude = 40.359998, longitude = 116.821390
[insertNode] [1193]: (*it)->preSegmentId = 23's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[findNodeById] [861]: result = 0x5612b5daab30
[insertNode] [1241]: tempNode is = 0x5612b5daab30, preSegmentId = 23, prevSegmentId = 21, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daacd0
[insertChildNode] [1137]: childNode = 0x5612b5daacd0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 14.000000, BranchAngle = 93.543318
[calcStraightXYOffset] [206]: BranchAngleRad = 1.632639
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.865244
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 13.973237
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = -0.865244
[coordinateSystemRotates] [183]: dY = 13.973237
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.865074
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.276698
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.017134
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 13.970497
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.141773
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 13.953364
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.141773
[coordinateSystemRotates] [196]: coordinate system rotated Y = 13.953364
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 632.733175, accumulateXY.distanceY = 18.048566
[calcDestination] [78]: destinationCoord latitude = 40.359575  destinationCoord longitude = 116.821544
[insertNode] [1263]: childNode's preSegmentId = 23
[displayNodeCoordinate] [114]: 23's startCoordinate: latitude = 40.359585, longitude = 116.821379
[displayNodeCoordinate] [115]: 23's endCoordinate: latitude = 40.359575, longitude = 116.821544
[insertNode] [1193]: (*it)->preSegmentId = 24's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[insertNode] [1241]: tempNode is = 0x5612b5daac00, preSegmentId = 24, prevSegmentId = 22, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daada0
[insertChildNode] [1137]: childNode = 0x5612b5daada0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 111.978039
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.217826
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 111.978039
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.217826
[coordinateSystemRotates] [195]: coordinate system rotated X = 111.978039
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.217826
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 791.843967, accumulateXY.distanceY = 7.223921
[calcDestination] [78]: destinationCoord latitude = 40.361004  destinationCoord longitude = 116.821416
[insertNode] [1263]: childNode's preSegmentId = 24
[displayNodeCoordinate] [114]: 24's startCoordinate: latitude = 40.359998, longitude = 116.821390
[displayNodeCoordinate] [115]: 24's endCoordinate: latitude = 40.361004, longitude = 116.821416
[insertNode] [1193]: (*it)->preSegmentId = 25's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[insertNode] [1241]: tempNode is = 0x5612b5daac00, preSegmentId = 25, prevSegmentId = 22, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daae70
[insertChildNode] [1137]: childNode = 0x5612b5daae70
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 38.000000, BranchAngle = -92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = -1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -1.409690
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -37.973843
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = -1.409690
[coordinateSystemRotates] [183]: dY = -37.973843
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -1.409413
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.751959
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.027915
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -37.966397
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.657455
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -37.994312
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.657455
[coordinateSystemRotates] [196]: coordinate system rotated Y = -37.994312
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 679.208473, accumulateXY.distanceY = -32.988217
[calcDestination] [78]: destinationCoord latitude = 40.359992  destinationCoord longitude = 116.820942
[insertNode] [1263]: childNode's preSegmentId = 25
[displayNodeCoordinate] [114]: 25's startCoordinate: latitude = 40.359998, longitude = 116.821390
[displayNodeCoordinate] [115]: 25's endCoordinate: latitude = 40.359992, longitude = 116.820942
[insertNode] [1193]: (*it)->preSegmentId = 26's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[findNodeById] [861]: result = 0x5612b5daac00
[insertNode] [1241]: tempNode is = 0x5612b5daac00, preSegmentId = 26, prevSegmentId = 22, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daaf40
[insertChildNode] [1137]: childNode = 0x5612b5daaf40
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 120.000000, BranchAngle = 79.370088
[calcStraightXYOffset] [206]: BranchAngleRad = 1.385269
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 22.135738
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 117.940702
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 22.135738
[coordinateSystemRotates] [183]: dY = 117.940702
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 22.131397
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 2.335463
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.438332
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 117.917576
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 19.795934
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 118.355908
[coordinateSystemRotates] [195]: coordinate system rotated X = 19.795934
[coordinateSystemRotates] [196]: coordinate system rotated Y = 118.355908
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 699.661861, accumulateXY.distanceY = 123.362003
[calcDestination] [78]: destinationCoord latitude = 40.360176  destinationCoord longitude = 116.822785
[insertNode] [1263]: childNode's preSegmentId = 26
[displayNodeCoordinate] [114]: 26's startCoordinate: latitude = 40.359998, longitude = 116.821390
[displayNodeCoordinate] [115]: 26's endCoordinate: latitude = 40.360176, longitude = 116.822785
[insertNode] [1193]: (*it)->preSegmentId = 27's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[findNodeById] [861]: result = 0x5612b5daada0
[insertNode] [1241]: tempNode is = 0x5612b5daada0, preSegmentId = 27, prevSegmentId = 24, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab010
[insertChildNode] [1137]: childNode = 0x5612b5dab010
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 110.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 110.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 110.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 109.978431
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.178222
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 109.978431
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.178222
[coordinateSystemRotates] [195]: coordinate system rotated X = 109.978431
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.178222
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 901.822398, accumulateXY.distanceY = 9.402142
[calcDestination] [78]: destinationCoord latitude = 40.361992  destinationCoord longitude = 116.821442
[insertNode] [1263]: childNode's preSegmentId = 27
[displayNodeCoordinate] [114]: 27's startCoordinate: latitude = 40.361004, longitude = 116.821416
[displayNodeCoordinate] [115]: 27's endCoordinate: latitude = 40.361992, longitude = 116.821442
[insertNode] [1193]: (*it)->preSegmentId = 28's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[insertNode] [1241]: tempNode is = 0x5612b5dab010, preSegmentId = 28, prevSegmentId = 27, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab0e0
[insertChildNode] [1137]: childNode = 0x5612b5dab0e0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 34.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 33.989598
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.840971
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 33.989598
[coordinateSystemRotates] [183]: dY = 0.840971
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 33.982933
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.016653
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.673063
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.840806
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 33.966280
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.513868
[coordinateSystemRotates] [195]: coordinate system rotated X = 33.966280
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.513868
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 935.788678, accumulateXY.distanceY = 10.916011
[calcDestination] [78]: destinationCoord latitude = 40.362297  destinationCoord longitude = 116.821460
[insertNode] [1263]: childNode's preSegmentId = 28
[displayNodeCoordinate] [114]: 28's startCoordinate: latitude = 40.361992, longitude = 116.821442
[displayNodeCoordinate] [115]: 28's endCoordinate: latitude = 40.362297, longitude = 116.821460
[insertNode] [1193]: (*it)->preSegmentId = 29's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[findNodeById] [861]: result = 0x5612b5dab010
[insertNode] [1241]: tempNode is = 0x5612b5dab010, preSegmentId = 29, prevSegmentId = 27, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab1b0
[insertChildNode] [1137]: childNode = 0x5612b5dab1b0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 87.874026
[calcStraightXYOffset] [206]: BranchAngleRad = 1.533691
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.445161
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 11.991740
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 0.445161
[coordinateSystemRotates] [183]: dY = 11.991740
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.445074
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.237461
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.008815
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 11.989389
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.207613
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 11.998204
[coordinateSystemRotates] [195]: coordinate system rotated X = 0.207613
[coordinateSystemRotates] [196]: coordinate system rotated Y = 11.998204
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 902.030011, accumulateXY.distanceY = 21.400346
[calcDestination] [78]: destinationCoord latitude = 40.361994  destinationCoord longitude = 116.821583
[insertNode] [1263]: childNode's preSegmentId = 29
[displayNodeCoordinate] [114]: 29's startCoordinate: latitude = 40.361992, longitude = 116.821442
[displayNodeCoordinate] [115]: 29's endCoordinate: latitude = 40.361994, longitude = 116.821583
[insertNode] [1193]: (*it)->preSegmentId = 30's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[insertNode] [1241]: tempNode is = 0x5612b5dab0e0, preSegmentId = 30, prevSegmentId = 28, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab280
[insertChildNode] [1137]: childNode = 0x5612b5dab280
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 62.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 61.981032
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -1.533535
[coordinateSystemRotates] [181]: accumulateBranchAngle = 2.551969, accumulateBranchAngleRad = 0.044540
[coordinateSystemRotates] [182]: dX = 61.981032
[coordinateSystemRotates] [183]: dY = -1.533535
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999008
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.044526
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 61.919562
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.068281
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.759739
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -1.532014
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 61.987843
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 1.227725
[coordinateSystemRotates] [195]: coordinate system rotated X = 61.987843
[coordinateSystemRotates] [196]: coordinate system rotated Y = 1.227725
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 997.776522, accumulateXY.distanceY = 12.143735
[calcDestination] [78]: destinationCoord latitude = 40.362854  destinationCoord longitude = 116.821474
[insertNode] [1263]: childNode's preSegmentId = 30
[displayNodeCoordinate] [114]: 30's startCoordinate: latitude = 40.362297, longitude = 116.821460
[displayNodeCoordinate] [115]: 30's endCoordinate: latitude = 40.362854, longitude = 116.821474
[insertNode] [1193]: (*it)->preSegmentId = 31's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[findNodeById] [861]: result = 0x5612b5dab0e0
[insertNode] [1241]: tempNode is = 0x5612b5dab0e0, preSegmentId = 31, prevSegmentId = 28, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab350
[insertChildNode] [1137]: childNode = 0x5612b5dab350
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 10.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.370971
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 9.993117
[coordinateSystemRotates] [181]: accumulateBranchAngle = 2.551969, accumulateBranchAngleRad = 0.044540
[coordinateSystemRotates] [182]: dX = -0.370971
[coordinateSystemRotates] [183]: dY = 9.993117
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999008
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.044526
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.370603
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.444949
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.016518
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 9.983206
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.815552
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 9.966688
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.815552
[coordinateSystemRotates] [196]: coordinate system rotated Y = 9.966688
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 934.973127, accumulateXY.distanceY = 20.882699
[calcDestination] [78]: destinationCoord latitude = 40.362290  destinationCoord longitude = 116.821577
[insertNode] [1263]: childNode's preSegmentId = 31
[displayNodeCoordinate] [114]: 31's startCoordinate: latitude = 40.362297, longitude = 116.821460
[displayNodeCoordinate] [115]: 31's endCoordinate: latitude = 40.362290, longitude = 116.821577
[insertNode] [1193]: (*it)->preSegmentId = 32's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[insertNode] [1241]: tempNode is = 0x5612b5dab280, preSegmentId = 32, prevSegmentId = 30, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab440
[insertChildNode] [1137]: childNode = 0x5612b5dab440
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 66.000000, BranchAngle = -4.251969
[calcStraightXYOffset] [206]: BranchAngleRad = -0.074211
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 65.818344
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -4.893422
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 65.818344
[coordinateSystemRotates] [183]: dY = -4.893422
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 65.805438
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.096900
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 1.303336
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -4.892463
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 65.902338
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -3.589127
[coordinateSystemRotates] [195]: coordinate system rotated X = 65.902338
[coordinateSystemRotates] [196]: coordinate system rotated Y = -3.589127
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 1063.678860, accumulateXY.distanceY = 8.554609
[calcDestination] [78]: destinationCoord latitude = 40.363446  destinationCoord longitude = 116.821432
[insertNode] [1263]: childNode's preSegmentId = 32
[displayNodeCoordinate] [114]: 32's startCoordinate: latitude = 40.362854, longitude = 116.821474
[displayNodeCoordinate] [115]: 32's endCoordinate: latitude = 40.363446, longitude = 116.821432
[insertNode] [1193]: (*it)->preSegmentId = 33's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[findNodeById] [861]: result = 0x5612b5dab280
[insertNode] [1241]: tempNode is = 0x5612b5dab280, preSegmentId = 33, prevSegmentId = 30, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab510
[insertChildNode] [1137]: childNode = 0x5612b5dab510
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 79.370088
[calcStraightXYOffset] [206]: BranchAngleRad = 1.385269
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 3.689290
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 19.656784
[coordinateSystemRotates] [181]: accumulateBranchAngle = 1.134646, accumulateBranchAngleRad = 0.019803
[coordinateSystemRotates] [182]: dX = 3.689290
[coordinateSystemRotates] [183]: dY = 19.656784
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999804
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.019802
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 3.688566
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.389244
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.073055
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 19.652929
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 3.299322
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 19.725985
[coordinateSystemRotates] [195]: coordinate system rotated X = 3.299322
[coordinateSystemRotates] [196]: coordinate system rotated Y = 19.725985
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 1001.075844, accumulateXY.distanceY = 31.869720
[calcDestination] [78]: destinationCoord latitude = 40.362884  destinationCoord longitude = 116.821707
[insertNode] [1263]: childNode's preSegmentId = 33
[displayNodeCoordinate] [114]: 33's startCoordinate: latitude = 40.362854, longitude = 116.821474
[displayNodeCoordinate] [115]: 33's endCoordinate: latitude = 40.362884, longitude = 116.821707
[insertNode] [1193]: (*it)->preSegmentId = 34's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5daa240
[findNodeById] [861]: result = 0x5612b5daa240
[findNodeById] [861]: result = 0x5612b5daa240
[findNodeById] [861]: result = 0x5612b5daa240
[insertNode] [1241]: tempNode is = 0x5612b5daa240, preSegmentId = 34, prevSegmentId = 10, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab600
[insertChildNode] [1137]: childNode = 0x5612b5dab600
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 34.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 33.989598
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -0.840971
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 33.989598
[coordinateSystemRotates] [183]: dY = -0.840971
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -1.093324
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.840535
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 33.972009
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.027051
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.252788
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 33.999060
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.252788
[coordinateSystemRotates] [196]: coordinate system rotated Y = 33.999060
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 219.121030, accumulateXY.distanceY = 48.332156
[calcDestination] [78]: destinationCoord latitude = 40.355859  destinationCoord longitude = 116.821901
[insertNode] [1263]: childNode's preSegmentId = 34
[displayNodeCoordinate] [114]: 34's startCoordinate: latitude = 40.355862, longitude = 116.821500
[displayNodeCoordinate] [115]: 34's endCoordinate: latitude = 40.355859, longitude = 116.821901
[insertNode] [1193]: (*it)->preSegmentId = 35's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dab600
[findNodeById] [861]: result = 0x5612b5dab600
[findNodeById] [861]: result = 0x5612b5dab600
[findNodeById] [861]: result = 0x5612b5dab600
[findNodeById] [861]: result = 0x5612b5dab600
[insertNode] [1241]: tempNode is = 0x5612b5dab600, preSegmentId = 35, prevSegmentId = 34, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab6d0
[insertChildNode] [1137]: childNode = 0x5612b5dab6d0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.832714
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 111.996904
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.832714
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 111.996904
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.832714
[coordinateSystemRotates] [196]: coordinate system rotated Y = 111.996904
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 218.288316, accumulateXY.distanceY = 160.329060
[calcDestination] [78]: destinationCoord latitude = 40.355852  destinationCoord longitude = 116.823221
[insertNode] [1263]: childNode's preSegmentId = 35
[displayNodeCoordinate] [114]: 35's startCoordinate: latitude = 40.355859, longitude = 116.821901
[displayNodeCoordinate] [115]: 35's endCoordinate: latitude = 40.355852, longitude = 116.823221
[insertNode] [1193]: (*it)->preSegmentId = 36's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[insertNode] [1241]: tempNode is = 0x5612b5dab440, preSegmentId = 36, prevSegmentId = 32, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab7c0
[insertChildNode] [1137]: childNode = 0x5612b5dab7c0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 12.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 11.996329
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.296813
[coordinateSystemRotates] [181]: accumulateBranchAngle = -3.117323, accumulateBranchAngleRad = -0.054408
[coordinateSystemRotates] [182]: dX = 11.996329
[coordinateSystemRotates] [183]: dY = 0.296813
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.998520
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.054381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 11.978577
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.016141
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.652369
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.296374
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 11.994718
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.355995
[coordinateSystemRotates] [195]: coordinate system rotated X = 11.994718
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.355995
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 1075.673578, accumulateXY.distanceY = 8.198614
[calcDestination] [78]: destinationCoord latitude = 40.363554  destinationCoord longitude = 116.821428
[insertNode] [1263]: childNode's preSegmentId = 36
[displayNodeCoordinate] [114]: 36's startCoordinate: latitude = 40.363446, longitude = 116.821432
[displayNodeCoordinate] [115]: 36's endCoordinate: latitude = 40.363554, longitude = 116.821428
[insertNode] [1193]: (*it)->preSegmentId = 37's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[findNodeById] [861]: result = 0x5612b5dab440
[insertNode] [1241]: tempNode is = 0x5612b5dab440, preSegmentId = 37, prevSegmentId = 32, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab8b0
[insertChildNode] [1137]: childNode = 0x5612b5dab8b0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 72.000000, BranchAngle = -82.204734
[calcStraightXYOffset] [206]: BranchAngleRad = -1.434743
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 9.765627
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -71.334652
[coordinateSystemRotates] [181]: accumulateBranchAngle = -3.117323, accumulateBranchAngleRad = -0.054408
[coordinateSystemRotates] [182]: dX = 9.765627
[coordinateSystemRotates] [183]: dY = -71.334652
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.998520
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.054381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 9.751177
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 3.879229
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.531062
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -71.229096
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 5.871948
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -71.760158
[coordinateSystemRotates] [195]: coordinate system rotated X = 5.871948
[coordinateSystemRotates] [196]: coordinate system rotated Y = -71.760158
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 1069.550807, accumulateXY.distanceY = -63.205549
[calcDestination] [78]: destinationCoord latitude = 40.363499  destinationCoord longitude = 116.820586
[insertNode] [1263]: childNode's preSegmentId = 37
[displayNodeCoordinate] [114]: 37's startCoordinate: latitude = 40.363446, longitude = 116.821432
[displayNodeCoordinate] [115]: 37's endCoordinate: latitude = 40.363499, longitude = 116.820586
[insertNode] [1193]: (*it)->preSegmentId = 38's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[insertNode] [1241]: tempNode is = 0x5612b5daa580, preSegmentId = 38, prevSegmentId = 14, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dab9a0
[insertChildNode] [1137]: childNode = 0x5612b5dab9a0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 60.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 59.981643
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 1.484066
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = 59.981643
[coordinateSystemRotates] [183]: dY = 1.484066
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.445960
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 1.484025
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 59.979986
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.011034
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.929985
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 59.968952
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.929985
[coordinateSystemRotates] [196]: coordinate system rotated Y = 59.968952
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 337.910080, accumulateXY.distanceY = 70.687272
[calcDestination] [78]: destinationCoord latitude = 40.356926  destinationCoord longitude = 116.822164
[insertNode] [1263]: childNode's preSegmentId = 38
[displayNodeCoordinate] [114]: 38's startCoordinate: latitude = 40.356944, longitude = 116.821457
[displayNodeCoordinate] [115]: 38's endCoordinate: latitude = 40.356926, longitude = 116.822164
[insertNode] [1193]: (*it)->preSegmentId = 39's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[findNodeById] [861]: result = 0x5612b5daa580
[insertNode] [1241]: tempNode is = 0x5612b5daa580, preSegmentId = 39, prevSegmentId = 14, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daba70
[insertChildNode] [1137]: childNode = 0x5612b5daba70
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.222624
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.998623
[coordinateSystemRotates] [181]: accumulateBranchAngle = 90.425995, accumulateBranchAngleRad = 1.578231
[coordinateSystemRotates] [182]: dX = 0.222624
[coordinateSystemRotates] [183]: dY = -17.998623
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.007435
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999972
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.001655
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -17.998126
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.222617
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.133819
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 17.996471
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.356436
[coordinateSystemRotates] [195]: coordinate system rotated X = 17.996471
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.356436
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 357.836535, accumulateXY.distanceY = 11.074756
[calcDestination] [78]: destinationCoord latitude = 40.357106  destinationCoord longitude = 116.821462
[insertNode] [1263]: childNode's preSegmentId = 39
[displayNodeCoordinate] [114]: 39's startCoordinate: latitude = 40.356944, longitude = 116.821457
[displayNodeCoordinate] [115]: 39's endCoordinate: latitude = 40.357106, longitude = 116.821462
[insertNode] [1193]: (*it)->preSegmentId = 40's segIsInTree = 0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[findNodeById] [861]: result = 0x5612b5dab7c0
[insertNode] [1241]: tempNode is = 0x5612b5dab7c0, preSegmentId = 40, prevSegmentId = 36, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dabb60
[insertChildNode] [1137]: childNode = 0x5612b5dabb60
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 22.000000, BranchAngle = 8.503938
[calcStraightXYOffset] [206]: BranchAngleRad = 0.148422
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 21.758125
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 3.253303
[coordinateSystemRotates] [181]: accumulateBranchAngle = -1.700000, accumulateBranchAngleRad = -0.029671
[coordinateSystemRotates] [182]: dX = 21.758125
[coordinateSystemRotates] [183]: dY = 3.253303
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999560
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.029666
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 21.748549
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.096513
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.645482
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 3.251871
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 21.845062
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 2.606389
[coordinateSystemRotates] [195]: coordinate system rotated X = 21.845062
[coordinateSystemRotates] [196]: coordinate system rotated Y = 2.606389
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 1097.518640, accumulateXY.distanceY = 10.805002
[calcDestination] [78]: destinationCoord latitude = 40.363750  destinationCoord longitude = 116.821458
[insertNode] [1263]: childNode's preSegmentId = 40
[displayNodeCoordinate] [114]: 40's startCoordinate: latitude = 40.363554, longitude = 116.821428
[displayNodeCoordinate] [115]: 40's endCoordinate: latitude = 40.363750, longitude = 116.821458
[insertNode] [1193]: (*it)->preSegmentId = 41's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[insertNode] [1241]: tempNode is = 0x5612b5daa8c0, preSegmentId = 41, prevSegmentId = 18, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dabc30
[insertChildNode] [1137]: childNode = 0x5612b5dabc30
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -90.708672
[calcStraightXYOffset] [206]: BranchAngleRad = -1.583165
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.222630
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.998623
[coordinateSystemRotates] [181]: accumulateBranchAngle = -88.156703, accumulateBranchAngleRad = -1.538625
[coordinateSystemRotates] [182]: dX = -0.222630
[coordinateSystemRotates] [183]: dY = -17.998623
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.007161
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 17.989310
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.222515
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.578945
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -17.996471
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -0.356430
[coordinateSystemRotates] [195]: coordinate system rotated X = -17.996471
[coordinateSystemRotates] [196]: coordinate system rotated Y = -0.356430
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 340.575915, accumulateXY.distanceY = -21.716234
[calcDestination] [78]: destinationCoord latitude = 40.356950  destinationCoord longitude = 116.821075
[insertNode] [1263]: childNode's preSegmentId = 41
[displayNodeCoordinate] [114]: 41's startCoordinate: latitude = 40.357112, longitude = 116.821079
[displayNodeCoordinate] [115]: 41's endCoordinate: latitude = 40.356950, longitude = 116.821075
[insertNode] [1193]: (*it)->preSegmentId = 42's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[findNodeById] [861]: result = 0x5612b5daa8c0
[insertNode] [1241]: tempNode is = 0x5612b5daa8c0, preSegmentId = 42, prevSegmentId = 18, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dabd20
[insertChildNode] [1137]: childNode = 0x5612b5dabd20
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 80.000000, BranchAngle = 1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = 0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 79.975525
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 1.978754
[coordinateSystemRotates] [181]: accumulateBranchAngle = -88.156703, accumulateBranchAngleRad = -1.538625
[coordinateSystemRotates] [182]: dX = 79.975525
[coordinateSystemRotates] [183]: dY = 1.978754
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 2.572497
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -1.977730
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -79.934140
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.063649
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [195]: coordinate system rotated X = 4.550227
[coordinateSystemRotates] [196]: coordinate system rotated Y = -79.870492
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 363.122614, accumulateXY.distanceY = -101.230296
[calcDestination] [78]: destinationCoord latitude = 40.357153  destinationCoord longitude = 116.820138
[insertNode] [1263]: childNode's preSegmentId = 42
[displayNodeCoordinate] [114]: 42's startCoordinate: latitude = 40.357112, longitude = 116.821079
[displayNodeCoordinate] [115]: 42's endCoordinate: latitude = 40.357153, longitude = 116.820138
[insertNode] [1193]: (*it)->preSegmentId = 43's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dab9a0
[findNodeById] [861]: result = 0x5612b5dab9a0
[findNodeById] [861]: result = 0x5612b5dab9a0
[findNodeById] [861]: result = 0x5612b5dab9a0
[findNodeById] [861]: result = 0x5612b5dab9a0
[findNodeById] [861]: result = 0x5612b5dab9a0
[findNodeById] [861]: result = 0x5612b5dab9a0
[findNodeById] [861]: result = 0x5612b5dab9a0
[insertNode] [1241]: tempNode is = 0x5612b5dab9a0, preSegmentId = 43, prevSegmentId = 38, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dabe10
[insertChildNode] [1137]: childNode = 0x5612b5dabe10
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 30.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 30.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 30.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.964993
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 29.984476
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.964993
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 29.984476
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.964993
[coordinateSystemRotates] [196]: coordinate system rotated Y = 29.984476
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 336.945087, accumulateXY.distanceY = 100.671748
[calcDestination] [78]: destinationCoord latitude = 40.356918  destinationCoord longitude = 116.822518
[insertNode] [1263]: childNode's preSegmentId = 43
[displayNodeCoordinate] [114]: 43's startCoordinate: latitude = 40.356926, longitude = 116.822164
[displayNodeCoordinate] [115]: 43's endCoordinate: latitude = 40.356918, longitude = 116.822518
[insertNode] [1193]: (*it)->preSegmentId = 44's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[insertNode] [1241]: tempNode is = 0x5612b5dabe10, preSegmentId = 44, prevSegmentId = 43, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dabee0
[insertChildNode] [1137]: childNode = 0x5612b5dabee0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.222624
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.998623
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 0.222624
[coordinateSystemRotates] [183]: dY = -17.998623
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.007161
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -17.989309
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.222508
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.578951
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 17.982148
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 0.801460
[coordinateSystemRotates] [195]: coordinate system rotated X = 17.982148
[coordinateSystemRotates] [196]: coordinate system rotated Y = 0.801460
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 354.927236, accumulateXY.distanceY = 101.473207
[calcDestination] [78]: destinationCoord latitude = 40.357079  destinationCoord longitude = 116.822527
[insertNode] [1263]: childNode's preSegmentId = 44
[displayNodeCoordinate] [114]: 44's startCoordinate: latitude = 40.356918, longitude = 116.822518
[displayNodeCoordinate] [115]: 44's endCoordinate: latitude = 40.357079, longitude = 116.822527
[insertNode] [1193]: (*it)->preSegmentId = 45's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[findNodeById] [861]: result = 0x5612b5dabe10
[insertNode] [1241]: tempNode is = 0x5612b5dabe10, preSegmentId = 45, prevSegmentId = 43, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dabfd0
[insertChildNode] [1137]: childNode = 0x5612b5dabfd0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 42.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 42.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 42.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -1.350990
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 41.978266
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.350990
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 41.978266
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.350990
[coordinateSystemRotates] [196]: coordinate system rotated Y = 41.978266
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 335.594098, accumulateXY.distanceY = 142.650014
[calcDestination] [78]: destinationCoord latitude = 40.356906  destinationCoord longitude = 116.823013
[insertNode] [1263]: childNode's preSegmentId = 45
[displayNodeCoordinate] [114]: 45's startCoordinate: latitude = 40.356918, longitude = 116.822518
[displayNodeCoordinate] [115]: 45's endCoordinate: latitude = 40.356906, longitude = 116.823013
[insertNode] [1193]: (*it)->preSegmentId = 46's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[findNodeById] [861]: result = 0x5612b5dabd20
[insertNode] [1241]: tempNode is = 0x5612b5dabd20, preSegmentId = 46, prevSegmentId = 42, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac0c0
[insertChildNode] [1137]: childNode = 0x5612b5dac0c0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 28.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 28.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 28.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 1.592580
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -27.954672
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.592580
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -27.954672
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.592580
[coordinateSystemRotates] [196]: coordinate system rotated Y = -27.954672
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 364.715193, accumulateXY.distanceY = -129.184968
[calcDestination] [78]: destinationCoord latitude = 40.357167  destinationCoord longitude = 116.819808
[insertNode] [1263]: childNode's preSegmentId = 46
[displayNodeCoordinate] [114]: 46's startCoordinate: latitude = 40.357153, longitude = 116.820138
[displayNodeCoordinate] [115]: 46's endCoordinate: latitude = 40.357167, longitude = 116.819808
[insertNode] [1193]: (*it)->preSegmentId = 47's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[insertNode] [1241]: tempNode is = 0x5612b5dabee0, preSegmentId = 47, prevSegmentId = 44, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac190
[insertChildNode] [1137]: childNode = 0x5612b5dac190
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 20.000000, BranchAngle = 90.708672
[calcStraightXYOffset] [206]: BranchAngleRad = 1.583165
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -0.247367
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 19.998470
[coordinateSystemRotates] [181]: accumulateBranchAngle = 2.551969, accumulateBranchAngleRad = 0.044540
[coordinateSystemRotates] [182]: dX = -0.247367
[coordinateSystemRotates] [183]: dY = 19.998470
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999008
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.044526
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.247122
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.890443
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.011014
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 19.978637
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.137564
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 19.967622
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.137564
[coordinateSystemRotates] [196]: coordinate system rotated Y = 19.967622
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 353.789671, accumulateXY.distanceY = 121.440830
[calcDestination] [78]: destinationCoord latitude = 40.357069  destinationCoord longitude = 116.822763
[insertNode] [1263]: childNode's preSegmentId = 47
[displayNodeCoordinate] [114]: 47's startCoordinate: latitude = 40.357079, longitude = 116.822527
[displayNodeCoordinate] [115]: 47's endCoordinate: latitude = 40.357069, longitude = 116.822763
[insertNode] [1193]: (*it)->preSegmentId = 48's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[findNodeById] [861]: result = 0x5612b5dabee0
[insertNode] [1241]: tempNode is = 0x5612b5dabee0, preSegmentId = 48, prevSegmentId = 44, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac280
[insertChildNode] [1137]: childNode = 0x5612b5dac280
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 38.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.469983
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -37.997094
[coordinateSystemRotates] [181]: accumulateBranchAngle = 2.551969, accumulateBranchAngleRad = 0.044540
[coordinateSystemRotates] [182]: dX = 0.469983
[coordinateSystemRotates] [183]: dY = -37.997094
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.999008
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.044526
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.469517
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -1.691841
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 0.020926
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -37.959410
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 2.161358
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -37.938484
[coordinateSystemRotates] [195]: coordinate system rotated X = 2.161358
[coordinateSystemRotates] [196]: coordinate system rotated Y = -37.938484
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 357.088594, accumulateXY.distanceY = 63.534724
[calcDestination] [78]: destinationCoord latitude = 40.357099  destinationCoord longitude = 116.822080
[insertNode] [1263]: childNode's preSegmentId = 48
[displayNodeCoordinate] [114]: 48's startCoordinate: latitude = 40.357079, longitude = 116.822527
[displayNodeCoordinate] [115]: 48's endCoordinate: latitude = 40.357099, longitude = 116.822080
[insertNode] [1193]: (*it)->preSegmentId = 49's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[insertNode] [1241]: tempNode is = 0x5612b5dabfd0, preSegmentId = 49, prevSegmentId = 45, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac370
[insertChildNode] [1137]: childNode = 0x5612b5dac370
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 120.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 120.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = 120.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -3.859970
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 119.937903
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -3.859970
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 119.937903
[coordinateSystemRotates] [195]: coordinate system rotated X = -3.859970
[coordinateSystemRotates] [196]: coordinate system rotated Y = 119.937903
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 331.734127, accumulateXY.distanceY = 262.587917
[calcDestination] [78]: destinationCoord latitude = 40.356871  destinationCoord longitude = 116.824426
[insertNode] [1263]: childNode's preSegmentId = 49
[displayNodeCoordinate] [114]: 49's startCoordinate: latitude = 40.356906, longitude = 116.823013
[displayNodeCoordinate] [115]: 49's endCoordinate: latitude = 40.356871, longitude = 116.824426
[insertNode] [1193]: (*it)->preSegmentId = 50's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[findNodeById] [861]: result = 0x5612b5dabfd0
[insertNode] [1241]: tempNode is = 0x5612b5dabfd0, preSegmentId = 50, prevSegmentId = 45, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac440
[insertChildNode] [1137]: childNode = 0x5612b5dac440
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 90.000000, BranchAngle = 92.125995
[calcStraightXYOffset] [206]: BranchAngleRad = 1.607902
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -3.338739
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 89.938050
[coordinateSystemRotates] [181]: accumulateBranchAngle = 91.843318, accumulateBranchAngleRad = 1.602968
[coordinateSystemRotates] [182]: dX = -3.338739
[coordinateSystemRotates] [183]: dY = 89.938050
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.032166
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.999483
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.107395
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 89.891509
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -3.337011
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -2.892985
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -89.784114
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -6.229996
[coordinateSystemRotates] [195]: coordinate system rotated X = -89.784114
[coordinateSystemRotates] [196]: coordinate system rotated Y = -6.229996
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 245.809983, accumulateXY.distanceY = 136.420018
[calcDestination] [78]: destinationCoord latitude = 40.356099  destinationCoord longitude = 116.822939
[insertNode] [1263]: childNode's preSegmentId = 50
[displayNodeCoordinate] [114]: 50's startCoordinate: latitude = 40.356906, longitude = 116.823013
[displayNodeCoordinate] [115]: 50's endCoordinate: latitude = 40.356099, longitude = 116.822939
[insertNode] [1193]: (*it)->preSegmentId = 51's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[findNodeById] [861]: result = 0x5612b5dac0c0
[insertNode] [1241]: tempNode is = 0x5612b5dac0c0, preSegmentId = 51, prevSegmentId = 46, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac530
[insertChildNode] [1137]: childNode = 0x5612b5dac530
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 18.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 18.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 1.023801
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -17.970861
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.023801
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -17.970861
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.023801
[coordinateSystemRotates] [196]: coordinate system rotated Y = -17.970861
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 365.738994, accumulateXY.distanceY = -147.155828
[calcDestination] [78]: destinationCoord latitude = 40.357176  destinationCoord longitude = 116.819596
[insertNode] [1263]: childNode's preSegmentId = 51
[displayNodeCoordinate] [114]: 51's startCoordinate: latitude = 40.357167, longitude = 116.819808
[displayNodeCoordinate] [115]: 51's endCoordinate: latitude = 40.357176, longitude = 116.819596
[insertNode] [1193]: (*it)->preSegmentId = 52's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[findNodeById] [861]: result = 0x5612b5dac280
[insertNode] [1241]: tempNode is = 0x5612b5dac280, preSegmentId = 52, prevSegmentId = 48, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac600
[insertChildNode] [1137]: childNode = 0x5612b5dac600
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 52.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 52.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 52.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 2.957648
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -51.915820
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 2.957648
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -51.915820
[coordinateSystemRotates] [195]: coordinate system rotated X = 2.957648
[coordinateSystemRotates] [196]: coordinate system rotated Y = -51.915820
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 360.046241, accumulateXY.distanceY = 11.618904
[calcDestination] [78]: destinationCoord latitude = 40.357125  destinationCoord longitude = 116.821468
[insertNode] [1263]: childNode's preSegmentId = 52
[displayNodeCoordinate] [114]: 52's startCoordinate: latitude = 40.357099, longitude = 116.822080
[displayNodeCoordinate] [115]: 52's endCoordinate: latitude = 40.357125, longitude = 116.821468
[insertNode] [1193]: (*it)->preSegmentId = 53's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[insertNode] [1241]: tempNode is = 0x5612b5dac530, preSegmentId = 53, prevSegmentId = 51, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac6f0
[insertChildNode] [1137]: childNode = 0x5612b5dac6f0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 16.000000, BranchAngle = 97.795287
[calcStraightXYOffset] [206]: BranchAngleRad = 1.706850
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -2.170145
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 15.852144
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = -2.170145
[coordinateSystemRotates] [183]: dY = 15.852144
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.123433
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -15.826482
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 2.166632
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.901636
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 15.703049
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 3.068268
[coordinateSystemRotates] [195]: coordinate system rotated X = 15.703049
[coordinateSystemRotates] [196]: coordinate system rotated Y = 3.068268
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 381.442043, accumulateXY.distanceY = -144.087561
[calcDestination] [78]: destinationCoord latitude = 40.357318  destinationCoord longitude = 116.819632
[insertNode] [1263]: childNode's preSegmentId = 53
[displayNodeCoordinate] [114]: 53's startCoordinate: latitude = 40.357176, longitude = 116.819596
[displayNodeCoordinate] [115]: 53's endCoordinate: latitude = 40.357318, longitude = 116.819632
[insertNode] [1193]: (*it)->preSegmentId = 54's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[insertNode] [1241]: tempNode is = 0x5612b5dac530, preSegmentId = 54, prevSegmentId = 51, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac7e0
[insertChildNode] [1137]: childNode = 0x5612b5dac7e0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 18.000000, BranchAngle = -87.874026
[calcStraightXYOffset] [206]: BranchAngleRad = -1.533691
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.667741
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -17.987610
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 0.667741
[coordinateSystemRotates] [183]: dY = -17.987610
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.037980
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 17.958491
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.666660
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -1.023096
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -17.920511
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -1.689757
[coordinateSystemRotates] [195]: coordinate system rotated X = -17.920511
[coordinateSystemRotates] [196]: coordinate system rotated Y = -1.689757
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 347.818483, accumulateXY.distanceY = -148.845585
[calcDestination] [78]: destinationCoord latitude = 40.357016  destinationCoord longitude = 116.819576
[insertNode] [1263]: childNode's preSegmentId = 54
[displayNodeCoordinate] [114]: 54's startCoordinate: latitude = 40.357176, longitude = 116.819596
[displayNodeCoordinate] [115]: 54's endCoordinate: latitude = 40.357016, longitude = 116.819576
[insertNode] [1193]: (*it)->preSegmentId = 55's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[findNodeById] [861]: result = 0x5612b5dac530
[insertNode] [1241]: tempNode is = 0x5612b5dac530, preSegmentId = 55, prevSegmentId = 51, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac8d0
[insertChildNode] [1137]: childNode = 0x5612b5dac8d0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 16.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 16.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 16.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.910045
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -15.974098
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 0.910045
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -15.974098
[coordinateSystemRotates] [195]: coordinate system rotated X = 0.910045
[coordinateSystemRotates] [196]: coordinate system rotated Y = -15.974098
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 366.649040, accumulateXY.distanceY = -163.129927
[calcDestination] [78]: destinationCoord latitude = 40.357185  destinationCoord longitude = 116.819408
[insertNode] [1263]: childNode's preSegmentId = 55
[displayNodeCoordinate] [114]: 55's startCoordinate: latitude = 40.357176, longitude = 116.819596
[displayNodeCoordinate] [115]: 55's endCoordinate: latitude = 40.357185, longitude = 116.819408
[insertNode] [1193]: (*it)->preSegmentId = 56's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[insertNode] [1241]: tempNode is = 0x5612b5dac8d0, preSegmentId = 56, prevSegmentId = 55, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dac9a0
[insertChildNode] [1137]: childNode = 0x5612b5dac9a0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 80.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 80.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 80.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [195]: coordinate system rotated X = 4.550227
[coordinateSystemRotates] [196]: coordinate system rotated Y = -79.870492
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 371.199267, accumulateXY.distanceY = -243.000418
[calcDestination] [78]: destinationCoord latitude = 40.357226  destinationCoord longitude = 116.818467
[insertNode] [1263]: childNode's preSegmentId = 56
[displayNodeCoordinate] [114]: 56's startCoordinate: latitude = 40.357185, longitude = 116.819408
[displayNodeCoordinate] [115]: 56's endCoordinate: latitude = 40.357226, longitude = 116.818467
[insertNode] [1193]: (*it)->preSegmentId = 56's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[findNodeById] [861]: result = 0x5612b5dac8d0
[insertNode] [1241]: tempNode is = 0x5612b5dac8d0, preSegmentId = 56, prevSegmentId = 55, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5daca70
[insertChildNode] [1137]: childNode = 0x5612b5daca70
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 80.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 80.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 80.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 4.550227
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -79.870492
[coordinateSystemRotates] [195]: coordinate system rotated X = 4.550227
[coordinateSystemRotates] [196]: coordinate system rotated Y = -79.870492
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 371.199267, accumulateXY.distanceY = -243.000418
[calcDestination] [78]: destinationCoord latitude = 40.357226  destinationCoord longitude = 116.818467
[insertNode] [1263]: childNode's preSegmentId = 56
[displayNodeCoordinate] [114]: 56's startCoordinate: latitude = 40.357185, longitude = 116.819408
[displayNodeCoordinate] [115]: 56's endCoordinate: latitude = 40.357226, longitude = 116.818467
[insertNode] [1193]: (*it)->preSegmentId = 57's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[insertNode] [1241]: tempNode is = 0x5612b5dac7e0, preSegmentId = 57, prevSegmentId = 54, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dacb40
[insertChildNode] [1137]: childNode = 0x5612b5dacb40
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 16.000000, BranchAngle = -89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = -1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.197888
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -15.998776
[coordinateSystemRotates] [181]: accumulateBranchAngle = -174.613406, accumulateBranchAngleRad = -3.047579
[coordinateSystemRotates] [182]: dX = 0.197888
[coordinateSystemRotates] [183]: dY = -15.998776
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.995584
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.093875
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.197014
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 1.501891
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.018577
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 15.928125
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -1.698905
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 15.909548
[coordinateSystemRotates] [195]: coordinate system rotated X = -1.698905
[coordinateSystemRotates] [196]: coordinate system rotated Y = 15.909548
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 346.119578, accumulateXY.distanceY = -132.936037
[calcDestination] [78]: destinationCoord latitude = 40.357000  destinationCoord longitude = 116.819764
[insertNode] [1263]: childNode's preSegmentId = 57
[displayNodeCoordinate] [114]: 57's startCoordinate: latitude = 40.357016, longitude = 116.819576
[displayNodeCoordinate] [115]: 57's endCoordinate: latitude = 40.357000, longitude = 116.819764
[insertNode] [1193]: (*it)->preSegmentId = 58's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[insertNode] [1241]: tempNode is = 0x5612b5dac7e0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dacc10
[insertChildNode] [1137]: childNode = 0x5612b5dacc10
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 14.000000, BranchAngle = 89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = 1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.173152
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 13.998929
[coordinateSystemRotates] [181]: accumulateBranchAngle = -174.613406, accumulateBranchAngleRad = -3.047579
[coordinateSystemRotates] [182]: dX = 0.173152
[coordinateSystemRotates] [183]: dY = 13.998929
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.995584
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.093875
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.172387
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -1.314155
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.016255
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -13.937109
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.141768
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -13.953364
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.141768
[coordinateSystemRotates] [196]: coordinate system rotated Y = -13.953364
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 348.960251, accumulateXY.distanceY = -162.798949
[calcDestination] [78]: destinationCoord latitude = 40.357026  destinationCoord longitude = 116.819412
[insertNode] [1263]: childNode's preSegmentId = 58
[displayNodeCoordinate] [114]: 58's startCoordinate: latitude = 40.357016, longitude = 116.819576
[displayNodeCoordinate] [115]: 58's endCoordinate: latitude = 40.357026, longitude = 116.819412
[insertNode] [1193]: (*it)->preSegmentId = 58's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[findNodeById] [861]: result = 0x5612b5dac7e0
[insertNode] [1241]: tempNode is = 0x5612b5dac7e0, preSegmentId = 58, prevSegmentId = 54, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dacd00
[insertChildNode] [1137]: childNode = 0x5612b5dacd00
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 14.000000, BranchAngle = 89.291349
[calcStraightXYOffset] [206]: BranchAngleRad = 1.558428
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 0.173152
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 13.998929
[coordinateSystemRotates] [181]: accumulateBranchAngle = -174.613406, accumulateBranchAngleRad = -3.047579
[coordinateSystemRotates] [182]: dX = 0.173152
[coordinateSystemRotates] [183]: dY = 13.998929
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.995584
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.093875
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.172387
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -1.314155
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -0.016255
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -13.937109
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.141768
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -13.953364
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.141768
[coordinateSystemRotates] [196]: coordinate system rotated Y = -13.953364
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 348.960251, accumulateXY.distanceY = -162.798949
[calcDestination] [78]: destinationCoord latitude = 40.357026  destinationCoord longitude = 116.819412
[insertNode] [1263]: childNode's preSegmentId = 58
[displayNodeCoordinate] [114]: 58's startCoordinate: latitude = 40.357016, longitude = 116.819576
[displayNodeCoordinate] [115]: 58's endCoordinate: latitude = 40.357026, longitude = 116.819412
[insertNode] [1193]: (*it)->preSegmentId = 59's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[insertNode] [1241]: tempNode is = 0x5612b5dacb40, preSegmentId = 59, prevSegmentId = 57, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dacdd0
[insertChildNode] [1137]: childNode = 0x5612b5dacdd0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 10.000000, BranchAngle = 96.377964
[calcStraightXYOffset] [206]: BranchAngleRad = 1.682113
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = -1.110867
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 9.938107
[coordinateSystemRotates] [181]: accumulateBranchAngle = -263.904755, accumulateBranchAngleRad = -4.606007
[coordinateSystemRotates] [182]: dX = -1.110867
[coordinateSystemRotates] [183]: dY = 9.938107
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.106182
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.994347
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 0.117954
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 9.881925
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -1.104587
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -1.055244
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -9.763971
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -2.159831
[coordinateSystemRotates] [195]: coordinate system rotated X = -9.763971
[coordinateSystemRotates] [196]: coordinate system rotated Y = -2.159831
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 336.355607, accumulateXY.distanceY = -135.095868
[calcDestination] [78]: destinationCoord latitude = 40.356913  destinationCoord longitude = 116.819738
[insertNode] [1263]: childNode's preSegmentId = 59
[displayNodeCoordinate] [114]: 59's startCoordinate: latitude = 40.357000, longitude = 116.819764
[displayNodeCoordinate] [115]: 59's endCoordinate: latitude = 40.356913, longitude = 116.819738
[insertNode] [1193]: (*it)->preSegmentId = 60's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[findNodeById] [861]: result = 0x5612b5dacb40
[insertNode] [1241]: tempNode is = 0x5612b5dacb40, preSegmentId = 60, prevSegmentId = 57, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dacea0
[insertChildNode] [1137]: childNode = 0x5612b5dacea0
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 112.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 112.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -263.904755, accumulateBranchAngleRad = -4.606007
[coordinateSystemRotates] [182]: dX = 112.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.106182
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.994347
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -11.892334
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 111.366837
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -11.892334
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 111.366837
[coordinateSystemRotates] [195]: coordinate system rotated X = -11.892334
[coordinateSystemRotates] [196]: coordinate system rotated Y = 111.366837
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 334.227245, accumulateXY.distanceY = -21.569200
[calcDestination] [78]: destinationCoord latitude = 40.356893  destinationCoord longitude = 116.821077
[insertNode] [1263]: childNode's preSegmentId = 60
[displayNodeCoordinate] [114]: 60's startCoordinate: latitude = 40.357000, longitude = 116.819764
[displayNodeCoordinate] [115]: 60's endCoordinate: latitude = 40.356893, longitude = 116.821077
[insertNode] [1193]: (*it)->preSegmentId = 61's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[findNodeById] [861]: result = 0x5612b5dacdd0
[insertNode] [1241]: tempNode is = 0x5612b5dacdd0, preSegmentId = 61, prevSegmentId = 59, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dacf70
[insertChildNode] [1137]: childNode = 0x5612b5dacf70
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 22.000000, BranchAngle = -1.417323
[calcStraightXYOffset] [206]: BranchAngleRad = -0.024737
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 21.993269
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = -0.544157
[coordinateSystemRotates] [181]: accumulateBranchAngle = -167.526791, accumulateBranchAngleRad = -2.923894
[coordinateSystemRotates] [182]: dX = 21.993269
[coordinateSystemRotates] [183]: dY = -0.544157
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.976397
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.215983
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -21.474164
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.117529
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -4.750174
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.531314
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -21.591693
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -4.218860
[coordinateSystemRotates] [195]: coordinate system rotated X = -21.591693
[coordinateSystemRotates] [196]: coordinate system rotated Y = -4.218860
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 314.763914, accumulateXY.distanceY = -139.314728
[calcDestination] [78]: destinationCoord latitude = 40.356719  destinationCoord longitude = 116.819689
[insertNode] [1263]: childNode's preSegmentId = 61
[displayNodeCoordinate] [114]: 61's startCoordinate: latitude = 40.356913, longitude = 116.819738
[displayNodeCoordinate] [115]: 61's endCoordinate: latitude = 40.356719, longitude = 116.819689
[insertNode] [1193]: (*it)->preSegmentId = 62's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[findNodeById] [861]: result = 0x5612b5dac9a0
[insertNode] [1241]: tempNode is = 0x5612b5dac9a0, preSegmentId = 62, prevSegmentId = 56, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dad040
[insertChildNode] [1137]: childNode = 0x5612b5dad040
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 34.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 34.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = -86.739380, accumulateBranchAngleRad = -1.513888
[coordinateSystemRotates] [182]: dX = 34.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = 0.056878
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = -0.998381
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = 1.933847
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = -33.944959
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = 1.933847
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = -33.944959
[coordinateSystemRotates] [195]: coordinate system rotated X = 1.933847
[coordinateSystemRotates] [196]: coordinate system rotated Y = -33.944959
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 373.133114, accumulateXY.distanceY = -276.945377
[calcDestination] [78]: destinationCoord latitude = 40.357243  destinationCoord longitude = 116.818066
[insertNode] [1263]: childNode's preSegmentId = 62
[displayNodeCoordinate] [114]: 62's startCoordinate: latitude = 40.357226, longitude = 116.818467
[displayNodeCoordinate] [115]: 62's endCoordinate: latitude = 40.357243, longitude = 116.818066
[insertNode] [1193]: (*it)->preSegmentId = 63's segIsInTree = 0
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [866]: result = (nil)
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[findNodeById] [861]: result = 0x5612b5daacd0
[insertNode] [1241]: tempNode is = 0x5612b5daacd0, preSegmentId = 63, prevSegmentId = 23, segIsInTree = 0
[createNode] [1129]: newNode = 0x5612b5dad130
[insertChildNode] [1137]: childNode = 0x5612b5dad130
[calcChildSegmentCoordinate] [239]: --------------------------Is childSegment--------------------------
[calcStraightXYOffset] [204]: Length = 6.000000, BranchAngle = 0.000000
[calcStraightXYOffset] [206]: BranchAngleRad = 0.000000
[calcStraightXYOffset] [209]: straight offset X with BranchAngle = 6.000000
[calcStraightXYOffset] [210]: straight offset Y with BranchAngle = 0.000000
[coordinateSystemRotates] [181]: accumulateBranchAngle = 94.677964, accumulateBranchAngleRad = 1.652442
[coordinateSystemRotates] [182]: dX = 6.000000
[coordinateSystemRotates] [183]: dY = 0.000000
[coordinateSystemRotates] [184]: cos(accumulateBranchAngleRad) = -0.081555
[coordinateSystemRotates] [185]: sin(accumulateBranchAngleRad) = 0.996669
[coordinateSystemRotates] [186]: distanceX * cos(accumulateBranchAngleRad) = -0.489331
[coordinateSystemRotates] [187]: distanceY * sin(accumulateBranchAngleRad) = 0.000000
[coordinateSystemRotates] [188]: distanceX * sin(accumulateBranchAngleRad) = 5.980013
[coordinateSystemRotates] [189]: distanceY * cos(accumulateBranchAngleRad) = -0.000000
[coordinateSystemRotates] [193]: distanceX = distanceX * cos(accumulateBranchAngleRad) - distanceY * sin(accumulateBranchAngleRad) = -0.489331
[coordinateSystemRotates] [194]: distanceY = distanceX * sin(accumulateBranchAngleRad) + distanceY * cos(accumulateBranchAngleRad) = 5.980013
[coordinateSystemRotates] [195]: coordinate system rotated X = -0.489331
[coordinateSystemRotates] [196]: coordinate system rotated Y = 5.980013
[calcChildSegmentCoordinate] [263]: accumulateXY.distanceX = 632.243843, accumulateXY.distanceY = 24.028579
[calcDestination] [78]: destinationCoord latitude = 40.359571  destinationCoord longitude = 116.821614
[insertNode] [1263]: childNode's preSegmentId = 63
[displayNodeCoordinate] [114]: 63's startCoordinate: latitude = 40.359575, longitude = 116.821544
[displayNodeCoordinate] [115]: 63's endCoordinate: latitude = 40.359571, longitude = 116.821614
[       OK ] PsdMapTest.useRealRecordPsdWithSP (15 ms)
[----------] 1 test from PsdMapTest (15 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (16 ms total)
[  PASSED  ] 1 test.
Capturing coverage data from .
geninfo cmd: '/usr/local/bin/geninfo . --output-filename PsdModule.info --test-name PsdModule --rc lcov_branch_coverage=1 --branch-coverage'
Found gcov version: 7.5.0
Using intermediate gcov format
Writing temporary data to /tmp/geninfo_daturbY
Scanning . for .gcda files ...
Found 6 data files in .
using: chunkSize: 1, nchunks:6, intervalLength:0
Finished processing 6 GDCA files
Apply filtering..
Finished filter file processing
Finished .info-file creation
Summary coverage rate:
  source files: 23
  lines.......: 26.1% (470 of 1798 lines)
  functions...: 53.8% (205 of 381 functions)
  branches....: 13.9% (86 of 618 branches)
Message summary:
  1 warning message:
    deprecated: 1
Reading tracefile PsdModule.info.
Found 23 entries.
Found common filename prefix "/usr/include/c++"
Generating output.
Processing file 7/bits/allocator.h
  lines=6 hit=4 functions=7 hit=5
Processing file 7/bits/move.h
  lines=13 hit=9 functions=11 hit=6
Processing file 7/ext/new_allocator.h
  lines=15 hit=13 functions=22 hit=13 branches=14 hit=3
Processing file 7/bits/alloc_traits.h
  lines=22 hit=15 functions=21 hit=11
Processing file /home/zhao/Documents/Psd/src/PsdMap.cpp
  lines=922 hit=193 functions=42 hit=18 branches=258 hit=48
Processing file 7/bits/vector.tcc
  lines=86 hit=40 functions=9 hit=4 branches=22 hit=6
Processing file 7/bits/stl_vector.h
  lines=121 hit=91 functions=79 hit=53 branches=38 hit=12
Processing file /home/zhao/Documents/Psd/src/Location.cpp
  lines=11 hit=1 functions=5 hit=2 branches=4 hit=2
Processing file /home/zhao/Documents/Psd/inc/PsdMap.h
  lines=1 hit=1 functions=1 hit=1
Processing file 7/new
  lines=2 hit=2 functions=1 hit=1
Processing file 7/bits/stl_iterator.h
  lines=41 hit=22 functions=56 hit=26
Processing file 7/bits/cpp_type_traits.h
  lines=2 hit=2 functions=6 hit=3
Processing file /home/zhao/Documents/Psd/src/PsdMessageDecoder.cpp
  lines=102 hit=14 functions=19 hit=7 branches=40 hit=4
Processing file /home/zhao/Documents/Psd/src/GeometricCalc.cpp
  lines=29 hit=0 functions=1 hit=0
Processing file /home/zhao/Documents/Psd/inc/PsdMessageDecoder.h
  lines=1 hit=1 functions=5 hit=5
Processing file 7/ext/alloc_traits.h
  lines=6 hit=4 functions=3 hit=2
Processing file 7/bits/stl_algobase.h
  lines=37 hit=20 functions=33 hit=18 branches=14 hit=7
Processing file 7/bits/stl_uninitialized.h
  lines=10 hit=10 functions=18 hit=11
Processing file /home/zhao/Documents/Psd/src/PsdLocation.cpp
  lines=326 hit=1 functions=21 hit=2 branches=224 hit=2
Processing file 7/bits/stl_construct.h
  lines=7 hit=7 functions=12 hit=12
Processing file 7/bits/ptr_traits.h
  lines=2 hit=0 functions=1 hit=0
Processing file /home/zhao/Documents/Psd/src/Haversine.cpp
  lines=35 hit=19 functions=8 hit=5 branches=4 hit=2
Processing file 7/iostream
  lines=1 hit=1
Overall coverage rate:
  source files: 23
  lines.......: 26.1% (470 of 1798 lines)
  functions...: 53.8% (205 of 381 functions)
  branches....: 13.9% (86 of 618 branches)
Message summary:
  no messages were reported
